{"ast":null,"code":"var _class;\nimport { EventEmitter } from '@angular/core';\nimport { Message } from \"../../core/message\";\nimport { MessageType } from \"../../core/message-type.enum\";\nimport { ChatParticipantStatus } from \"../../core/chat-participant-status.enum\";\nimport { ScrollDirection } from \"../../core/scroll-direction.enum\";\nimport { ChatParticipantType } from \"../../core/chat-participant-type.enum\";\nimport { MessageCounter } from \"../../core/message-counter\";\nimport { chatParticipantStatusDescriptor } from '../../core/chat-participant-status-descriptor';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../ng-chat-options/ng-chat-options.component\";\nimport * as i4 from \"../../pipes/emojify.pipe\";\nimport * as i5 from \"../../pipes/linkfy.pipe\";\nimport * as i6 from \"../../pipes/sanitize.pipe\";\nimport * as i7 from \"../../pipes/group-message-display-name.pipe\";\nconst _c0 = [\"chatMessages\"];\nconst _c1 = [\"nativeFileInput\"];\nconst _c2 = [\"chatWindowInput\"];\nfunction NgChatWindowComponent_ng_container_0_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.unreadMessagesTotal(ctx_r2.window));\n  }\n}\nconst _c3 = function (a1, a2, a3, a4) {\n  return {\n    \"ng-chat-participant-status\": true,\n    \"online\": a1,\n    \"busy\": a2,\n    \"away\": a3,\n    \"offline\": a4\n  };\n};\nfunction NgChatWindowComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2);\n    i0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_0_Template_div_click_2_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onChatWindowClicked(ctx_r3.window));\n    });\n    i0.ɵɵelementStart(3, \"strong\", 3);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"span\", 4);\n    i0.ɵɵtemplate(6, NgChatWindowComponent_ng_container_0_span_6_Template, 2, 1, \"span\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"a\", 6);\n    i0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_0_Template_a_click_7_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onCloseChatWindow());\n    });\n    i0.ɵɵtext(8, \"X\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"title\", ctx_r0.window.participant.displayName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.window.participant.displayName, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"title\", ctx_r0.chatParticipantStatusDescriptor(ctx_r0.window.participant.status, ctx_r0.localization));\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(5, _c3, ctx_r0.window.participant.status == ctx_r0.ChatParticipantStatus.Online, ctx_r0.window.participant.status == ctx_r0.ChatParticipantStatus.Busy, ctx_r0.window.participant.status == ctx_r0.ChatParticipantStatus.Away, ctx_r0.window.participant.status == ctx_r0.ChatParticipantStatus.Offline));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.unreadMessagesTotal(ctx_r0.window).length > 0);\n  }\n}\nfunction NgChatWindowComponent_ng_container_1_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r6.unreadMessagesTotal(ctx_r6.window));\n  }\n}\nfunction NgChatWindowComponent_ng_container_1_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"div\", 18);\n    i0.ɵɵtext(2, \"Loading history...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction NgChatWindowComponent_ng_container_1_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 19)(1, \"a\", 20);\n    i0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_1_div_13_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.fetchMessageHistory(ctx_r13.window));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r9.localization.loadMessageHistoryPlaceholder);\n  }\n}\nfunction NgChatWindowComponent_ng_container_1_div_14_ng_container_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵelement(1, \"i\", 28);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NgChatWindowComponent_ng_container_1_div_14_ng_container_1_img_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 29);\n    i0.ɵɵpipe(1, \"sanitize\");\n  }\n  if (rf & 2) {\n    const message_r15 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r22 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"src\", i0.ɵɵpipeBind1(1, 1, ctx_r22.getChatWindowAvatar(ctx_r22.window.participant || \"\", message_r15)), i0.ɵɵsanitizeUrl);\n  }\n}\nfunction NgChatWindowComponent_ng_container_1_div_14_ng_container_1_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"groupMessageDisplayName\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r15 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r23 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(2, 1, ctx_r23.window.participant, message_r15));\n  }\n}\nfunction NgChatWindowComponent_ng_container_1_div_14_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NgChatWindowComponent_ng_container_1_div_14_ng_container_1_div_1_Template, 2, 0, \"div\", 24);\n    i0.ɵɵtemplate(2, NgChatWindowComponent_ng_container_1_div_14_ng_container_1_img_2_Template, 2, 3, \"img\", 25);\n    i0.ɵɵtemplate(3, NgChatWindowComponent_ng_container_1_div_14_ng_container_1_span_3_Template, 3, 4, \"span\", 26);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const message_r15 = i0.ɵɵnextContext().$implicit;\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r17.getChatWindowAvatar(ctx_r17.window.participant || \"\", message_r15));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r17.getChatWindowAvatar(ctx_r17.window.participant || \"\", message_r15));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r17.window.participant.participantType == ctx_r17.ChatParticipantType.Group);\n  }\n}\nfunction NgChatWindowComponent_ng_container_1_div_14_div_3_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 33);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r15 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r27 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(2, 1, message_r15.dateSent, ctx_r27.messageDatePipeFormat));\n  }\n}\nconst _c4 = function (a0, a1) {\n  return {\n    \"sent-chat-message-container\": a0,\n    \"received-chat-message-container\": a1\n  };\n};\nfunction NgChatWindowComponent_ng_container_1_div_14_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵelement(1, \"span\", 31);\n    i0.ɵɵpipe(2, \"linkfy\");\n    i0.ɵɵpipe(3, \"emojify\");\n    i0.ɵɵtemplate(4, NgChatWindowComponent_ng_container_1_div_14_div_3_span_4_Template, 3, 4, \"span\", 32);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r15 = i0.ɵɵnextContext().$implicit;\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(9, _c4, message_r15.fromId == ctx_r18.userId, message_r15.fromId != ctx_r18.userId));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHtml\", i0.ɵɵpipeBind2(2, 3, i0.ɵɵpipeBind2(3, 6, message_r15.message, ctx_r18.emojisEnabled), ctx_r18.linkfyEnabled), i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r18.showMessageDate && message_r15.dateSent);\n  }\n}\nfunction NgChatWindowComponent_ng_container_1_div_14_div_4_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 33);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r15 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r30 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(2, 1, message_r15.dateSent, ctx_r30.messageDatePipeFormat));\n  }\n}\nfunction NgChatWindowComponent_ng_container_1_div_14_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵelement(1, \"img\", 34);\n    i0.ɵɵtemplate(2, NgChatWindowComponent_ng_container_1_div_14_div_4_span_2_Template, 3, 4, \"span\", 32);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r15 = i0.ɵɵnextContext().$implicit;\n    const ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(3, _c4, message_r15.fromId == ctx_r19.userId, message_r15.fromId != ctx_r19.userId));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", message_r15.message, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r19.showMessageDate && message_r15.dateSent);\n  }\n}\nfunction NgChatWindowComponent_ng_container_1_div_14_div_5_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 40);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r15 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", message_r15.fileSizeInBytes, \" Bytes\");\n  }\n}\nconst _c5 = function (a1) {\n  return {\n    \"file-message-container\": true,\n    \"received\": a1\n  };\n};\nfunction NgChatWindowComponent_ng_container_1_div_14_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r37 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 21)(1, \"div\", 35);\n    i0.ɵɵelement(2, \"i\", 36);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"a\", 37);\n    i0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_1_div_14_div_5_Template_a_click_3_listener() {\n      i0.ɵɵrestoreView(_r37);\n      const message_r15 = i0.ɵɵnextContext().$implicit;\n      const ctx_r35 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r35.markMessagesAsRead([message_r15]));\n    });\n    i0.ɵɵelementStart(4, \"span\", 38);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, NgChatWindowComponent_ng_container_1_div_14_div_5_span_6_Template, 2, 1, \"span\", 39);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const message_r15 = i0.ɵɵnextContext().$implicit;\n    const ctx_r20 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c5, message_r15.fromId != ctx_r20.userId));\n    i0.ɵɵadvance(3);\n    i0.ɵɵattribute(\"href\", message_r15.downloadUrl, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"title\", message_r15.message);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(message_r15.message);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", message_r15.fileSizeInBytes);\n  }\n}\nconst _c6 = function (a1) {\n  return {\n    \"ng-chat-message\": true,\n    \"ng-chat-message-received\": a1\n  };\n};\nfunction NgChatWindowComponent_ng_container_1_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, NgChatWindowComponent_ng_container_1_div_14_ng_container_1_Template, 4, 3, \"ng-container\", 0);\n    i0.ɵɵelementContainerStart(2, 22);\n    i0.ɵɵtemplate(3, NgChatWindowComponent_ng_container_1_div_14_div_3_Template, 5, 12, \"div\", 23);\n    i0.ɵɵtemplate(4, NgChatWindowComponent_ng_container_1_div_14_div_4_Template, 3, 6, \"div\", 23);\n    i0.ɵɵtemplate(5, NgChatWindowComponent_ng_container_1_div_14_div_5_Template, 7, 7, \"div\", 23);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r15 = ctx.$implicit;\n    const i_r16 = ctx.index;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c6, message_r15.fromId != ctx_r10.userId));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r10.isAvatarVisible(ctx_r10.window, message_r15, i_r16));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitch\", message_r15.type);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r10.MessageType.Text);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r10.MessageType.Image);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r10.MessageType.File);\n  }\n}\nfunction NgChatWindowComponent_ng_container_1_ng_container_19_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r43 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 45);\n    i0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_1_ng_container_19_a_1_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r43);\n      const ctx_r42 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r42.triggerNativeFileUpload(ctx_r42.window));\n    });\n    i0.ɵɵelement(1, \"i\", 46);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NgChatWindowComponent_ng_container_1_ng_container_19_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 18);\n  }\n}\nfunction NgChatWindowComponent_ng_container_1_ng_container_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r45 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NgChatWindowComponent_ng_container_1_ng_container_19_a_1_Template, 2, 0, \"a\", 41);\n    i0.ɵɵelementStart(2, \"input\", 42, 43);\n    i0.ɵɵlistener(\"change\", function NgChatWindowComponent_ng_container_1_ng_container_19_Template_input_change_2_listener() {\n      i0.ɵɵrestoreView(_r45);\n      const ctx_r44 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r44.onFileChosen(ctx_r44.window));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, NgChatWindowComponent_ng_container_1_ng_container_19_div_4_Template, 1, 0, \"div\", 44);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r12.isUploadingFile(ctx_r12.window));\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"id\", ctx_r12.getUniqueFileUploadInstanceId(ctx_r12.window));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.isUploadingFile(ctx_r12.window));\n  }\n}\nconst _c7 = function (a1) {\n  return {\n    \"chat-window-input\": true,\n    \"has-side-action\": a1\n  };\n};\nfunction NgChatWindowComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r47 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2);\n    i0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_1_Template_div_click_2_listener() {\n      i0.ɵɵrestoreView(_r47);\n      const ctx_r46 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r46.onChatWindowClicked(ctx_r46.window));\n    });\n    i0.ɵɵelementStart(3, \"strong\", 3);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"span\", 4);\n    i0.ɵɵtemplate(6, NgChatWindowComponent_ng_container_1_span_6_Template, 2, 1, \"span\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"a\", 6);\n    i0.ɵɵlistener(\"click\", function NgChatWindowComponent_ng_container_1_Template_a_click_7_listener() {\n      i0.ɵɵrestoreView(_r47);\n      const ctx_r48 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r48.onCloseChatWindow());\n    });\n    i0.ɵɵtext(8, \"X\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"ng-chat-options\", 8);\n    i0.ɵɵlistener(\"activeOptionTrackerChange\", function NgChatWindowComponent_ng_container_1_Template_ng_chat_options_activeOptionTrackerChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r47);\n      const ctx_r49 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r49.activeOptionTrackerChange($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 9, 10);\n    i0.ɵɵtemplate(12, NgChatWindowComponent_ng_container_1_div_12_Template, 3, 0, \"div\", 11);\n    i0.ɵɵtemplate(13, NgChatWindowComponent_ng_container_1_div_13_Template, 3, 1, \"div\", 12);\n    i0.ɵɵtemplate(14, NgChatWindowComponent_ng_container_1_div_14_Template, 6, 8, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 14)(16, \"input\", 15, 16);\n    i0.ɵɵlistener(\"ngModelChange\", function NgChatWindowComponent_ng_container_1_Template_input_ngModelChange_16_listener($event) {\n      i0.ɵɵrestoreView(_r47);\n      const ctx_r50 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r50.window.newMessage = $event);\n    })(\"keydown\", function NgChatWindowComponent_ng_container_1_Template_input_keydown_16_listener($event) {\n      i0.ɵɵrestoreView(_r47);\n      const ctx_r51 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r51.onChatInputTyped($event, ctx_r51.window));\n    })(\"blur\", function NgChatWindowComponent_ng_container_1_Template_input_blur_16_listener() {\n      i0.ɵɵrestoreView(_r47);\n      const ctx_r52 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r52.toggleWindowFocus(ctx_r52.window));\n    })(\"focus\", function NgChatWindowComponent_ng_container_1_Template_input_focus_16_listener() {\n      i0.ɵɵrestoreView(_r47);\n      const ctx_r53 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r53.toggleWindowFocus(ctx_r53.window));\n    });\n    i0.ɵɵpipe(18, \"emojify\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(19, NgChatWindowComponent_ng_container_1_ng_container_19_Template, 5, 3, \"ng-container\", 0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"title\", ctx_r1.window.participant.displayName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.window.participant.displayName, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"title\", ctx_r1.chatParticipantStatusDescriptor(ctx_r1.window.participant.status, ctx_r1.localization));\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(17, _c3, ctx_r1.window.participant.status == ctx_r1.ChatParticipantStatus.Online, ctx_r1.window.participant.status == ctx_r1.ChatParticipantStatus.Busy, ctx_r1.window.participant.status == ctx_r1.ChatParticipantStatus.Away, ctx_r1.window.participant.status == ctx_r1.ChatParticipantStatus.Offline));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.unreadMessagesTotal(ctx_r1.window).length > 0);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", \"ng-chat-options-container\")(\"options\", ctx_r1.defaultWindowOptions(ctx_r1.window));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.window.isLoadingHistory);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.hasPagedHistory && ctx_r1.window.hasMoreMessages && !ctx_r1.window.isLoadingHistory);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.window.messages);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", i0.ɵɵpipeBind2(18, 14, ctx_r1.window.newMessage, ctx_r1.emojisEnabled))(\"placeholder\", ctx_r1.localization.messagePlaceholder)(\"ngClass\", i0.ɵɵpureFunction1(22, _c7, ctx_r1.fileUploadAdapter));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.fileUploadAdapter);\n  }\n}\nexport class NgChatWindowComponent {\n  constructor() {\n    this.emojisEnabled = true;\n    this.linkfyEnabled = true;\n    this.showMessageDate = true;\n    this.messageDatePipeFormat = \"short\";\n    this.hasPagedHistory = true;\n    this.onChatWindowClosed = new EventEmitter();\n    this.onMessagesSeen = new EventEmitter();\n    this.onMessageSent = new EventEmitter();\n    this.onTabTriggered = new EventEmitter();\n    this.onOptionTriggered = new EventEmitter();\n    this.onLoadHistoryTriggered = new EventEmitter();\n    // File upload state\n    this.fileUploadersInUse = []; // Id bucket of uploaders in use\n    // Exposes enums and functions for the ng-template\n    this.ChatParticipantType = ChatParticipantType;\n    this.ChatParticipantStatus = ChatParticipantStatus;\n    this.MessageType = MessageType;\n    this.chatParticipantStatusDescriptor = chatParticipantStatusDescriptor;\n  }\n  defaultWindowOptions(currentWindow) {\n    if (this.showOptions && currentWindow.participant.participantType == ChatParticipantType.User) {\n      return [{\n        isActive: false,\n        chattingTo: currentWindow,\n        validateContext: participant => {\n          return participant.participantType == ChatParticipantType.User;\n        },\n        displayLabel: 'Add People' // TODO: Localize this\n      }];\n    }\n\n    return [];\n  }\n  // Asserts if a user avatar is visible in a chat cluster\n  isAvatarVisible(window, message, index) {\n    if (message.fromId != this.userId) {\n      if (index == 0) {\n        return true; // First message, good to show the thumbnail\n      } else {\n        // Check if the previous message belongs to the same user, if it belongs there is no need to show the avatar again to form the message cluster\n        if (window.messages[index - 1].fromId != message.fromId) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  getChatWindowAvatar(participant, message) {\n    if (participant.participantType == ChatParticipantType.User) {\n      return participant.avatar;\n    } else if (participant.participantType == ChatParticipantType.Group) {\n      let group = participant;\n      let userIndex = group.chattingTo.findIndex(x => x.id == message.fromId);\n      return group.chattingTo[userIndex >= 0 ? userIndex : 0].avatar;\n    }\n    return null;\n  }\n  isUploadingFile(window) {\n    const fileUploadInstanceId = this.getUniqueFileUploadInstanceId(window);\n    return this.fileUploadersInUse.indexOf(fileUploadInstanceId) > -1;\n  }\n  // Generates a unique file uploader id for each participant\n  getUniqueFileUploadInstanceId(window) {\n    if (window && window.participant) {\n      return `ng-chat-file-upload-${window.participant.id}`;\n    }\n    return 'ng-chat-file-upload';\n  }\n  unreadMessagesTotal(window) {\n    return MessageCounter.unreadMessagesTotal(window, this.userId);\n  }\n  // Scrolls a chat window message flow to the bottom\n  scrollChatWindow(window, direction) {\n    if (!window.isCollapsed) {\n      setTimeout(() => {\n        if (this.chatMessages) {\n          let element = this.chatMessages.nativeElement;\n          let position = direction === ScrollDirection.Top ? 0 : element.scrollHeight;\n          element.scrollTop = position;\n        }\n      });\n    }\n  }\n  activeOptionTrackerChange(option) {\n    this.onOptionTriggered.emit(option);\n  }\n  // Triggers native file upload for file selection from the user\n  triggerNativeFileUpload(window) {\n    if (window) {\n      if (this.nativeFileInput) this.nativeFileInput.nativeElement.click();\n    }\n  }\n  // Toggles a window focus on the focus/blur of a 'newMessage' input\n  toggleWindowFocus(window) {\n    window.hasFocus = !window.hasFocus;\n    if (window.hasFocus) {\n      const unreadMessages = window.messages.filter(message => message.dateSeen == null && (message.toId == this.userId || window.participant.participantType === ChatParticipantType.Group));\n      if (unreadMessages && unreadMessages.length > 0) {\n        this.onMessagesSeen.emit(unreadMessages);\n      }\n    }\n  }\n  markMessagesAsRead(messages) {\n    this.onMessagesSeen.emit(messages);\n  }\n  fetchMessageHistory(window) {\n    this.onLoadHistoryTriggered.emit(window);\n  }\n  // Closes a chat window via the close 'X' button\n  onCloseChatWindow() {\n    this.onChatWindowClosed.emit({\n      closedWindow: this.window,\n      closedViaEscapeKey: false\n    });\n  }\n  /*  Monitors pressed keys on a chat window\r\n      - Dispatches a message when the ENTER key is pressed\r\n      - Tabs between windows on TAB or SHIFT + TAB\r\n      - Closes the current focused window on ESC\r\n  */\n  onChatInputTyped(event, window) {\n    switch (event.keyCode) {\n      case 13:\n        if (window.newMessage && window.newMessage.trim() != \"\") {\n          let message = new Message();\n          message.fromId = this.userId;\n          message.toId = window.participant.id;\n          message.message = window.newMessage;\n          message.dateSent = new Date();\n          window.messages.push(message);\n          this.onMessageSent.emit(message);\n          window.newMessage = \"\"; // Resets the new message input\n          this.scrollChatWindow(window, ScrollDirection.Bottom);\n        }\n        break;\n      case 9:\n        event.preventDefault();\n        this.onTabTriggered.emit({\n          triggeringWindow: window,\n          shiftKeyPressed: event.shiftKey\n        });\n        break;\n      case 27:\n        this.onChatWindowClosed.emit({\n          closedWindow: window,\n          closedViaEscapeKey: true\n        });\n        break;\n    }\n  }\n  // Toggles a chat window visibility between maximized/minimized\n  onChatWindowClicked(window) {\n    window.isCollapsed = !window.isCollapsed;\n    this.scrollChatWindow(window, ScrollDirection.Bottom);\n  }\n  clearInUseFileUploader(fileUploadInstanceId) {\n    const uploaderInstanceIdIndex = this.fileUploadersInUse.indexOf(fileUploadInstanceId);\n    if (uploaderInstanceIdIndex > -1) {\n      this.fileUploadersInUse.splice(uploaderInstanceIdIndex, 1);\n    }\n  }\n  // Handles file selection and uploads the selected file using the file upload adapter\n  onFileChosen(window) {\n    const fileUploadInstanceId = this.getUniqueFileUploadInstanceId(window);\n    const uploadElementRef = this.nativeFileInput;\n    if (uploadElementRef) {\n      const file = uploadElementRef.nativeElement.files[0];\n      this.fileUploadersInUse.push(fileUploadInstanceId);\n      this.fileUploadAdapter.uploadFile(file, window.participant.id).subscribe(fileMessage => {\n        this.clearInUseFileUploader(fileUploadInstanceId);\n        fileMessage.fromId = this.userId;\n        // Push file message to current user window   \n        window.messages.push(fileMessage);\n        this.onMessageSent.emit(fileMessage);\n        this.scrollChatWindow(window, ScrollDirection.Bottom);\n        // Resets the file upload element\n        uploadElementRef.nativeElement.value = '';\n      }, error => {\n        this.clearInUseFileUploader(fileUploadInstanceId);\n        // Resets the file upload element\n        uploadElementRef.nativeElement.value = '';\n        // TODO: Invoke a file upload adapter error here\n      });\n    }\n  }\n}\n_class = NgChatWindowComponent;\n_class.ɵfac = function NgChatWindowComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"ng-chat-window\"]],\n  viewQuery: function NgChatWindowComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n      i0.ɵɵviewQuery(_c2, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chatMessages = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nativeFileInput = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chatWindowInput = _t.first);\n    }\n  },\n  inputs: {\n    fileUploadAdapter: \"fileUploadAdapter\",\n    window: \"window\",\n    userId: \"userId\",\n    localization: \"localization\",\n    showOptions: \"showOptions\",\n    emojisEnabled: \"emojisEnabled\",\n    linkfyEnabled: \"linkfyEnabled\",\n    showMessageDate: \"showMessageDate\",\n    messageDatePipeFormat: \"messageDatePipeFormat\",\n    hasPagedHistory: \"hasPagedHistory\"\n  },\n  outputs: {\n    onChatWindowClosed: \"onChatWindowClosed\",\n    onMessagesSeen: \"onMessagesSeen\",\n    onMessageSent: \"onMessageSent\",\n    onTabTriggered: \"onTabTriggered\",\n    onOptionTriggered: \"onOptionTriggered\",\n    onLoadHistoryTriggered: \"onLoadHistoryTriggered\"\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [1, \"ng-chat-title\", \"secondary-background\"], [1, \"ng-chat-title-visibility-toggle-area\", 3, \"click\"], [3, \"title\"], [3, \"ngClass\", \"title\"], [\"class\", \"ng-chat-unread-messages-count unread-messages-counter-container primary-text\", 4, \"ngIf\"], [\"href\", \"javascript:void(0);\", 1, \"ng-chat-close\", \"primary-text\", 3, \"click\"], [1, \"ng-chat-unread-messages-count\", \"unread-messages-counter-container\", \"primary-text\"], [3, \"ngClass\", \"options\", \"activeOptionTrackerChange\"], [1, \"ng-chat-messages\", \"primary-background\"], [\"chatMessages\", \"\"], [\"class\", \"ng-chat-loading-wrapper\", 4, \"ngIf\"], [\"class\", \"ng-chat-load-history\", 4, \"ngIf\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"ng-chat-footer\", \"primary-outline-color\", \"primary-background\"], [\"type\", \"text\", 3, \"ngModel\", \"placeholder\", \"ngClass\", \"ngModelChange\", \"keydown\", \"blur\", \"focus\"], [\"chatWindowInput\", \"\"], [1, \"ng-chat-loading-wrapper\"], [1, \"loader\"], [1, \"ng-chat-load-history\"], [1, \"load-history-action\", 3, \"click\"], [3, \"ngClass\"], [3, \"ngSwitch\"], [3, \"ngClass\", 4, \"ngSwitchCase\"], [\"class\", \"icon-wrapper\", 4, \"ngIf\"], [\"alt\", \"\", \"class\", \"avatar\", \"height\", \"30\", \"width\", \"30\", 3, \"src\", 4, \"ngIf\"], [\"class\", \"ng-chat-participant-name\", 4, \"ngIf\"], [1, \"icon-wrapper\"], [1, \"user-icon\"], [\"alt\", \"\", \"height\", \"30\", \"width\", \"30\", 1, \"avatar\", 3, \"src\"], [1, \"ng-chat-participant-name\"], [3, \"innerHtml\"], [\"class\", \"message-sent-date\", 4, \"ngIf\"], [1, \"message-sent-date\"], [1, \"image-message\", 3, \"src\"], [1, \"file-message-icon-container\"], [1, \"paperclip-icon\"], [\"target\", \"_blank\", \"rel\", \"noopener noreferrer\", \"download\", \"\", 1, \"file-details\", 3, \"click\"], [1, \"file-message-title\"], [\"class\", \"file-message-size\", 4, \"ngIf\"], [1, \"file-message-size\"], [\"class\", \"btn-add-file\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"file\", 2, \"display\", \"none\", 3, \"change\"], [\"nativeFileInput\", \"\"], [\"class\", \"loader\", 4, \"ngIf\"], [1, \"btn-add-file\", 3, \"click\"], [1, \"upload-icon\"]],\n  template: function NgChatWindowComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NgChatWindowComponent_ng_container_0_Template, 9, 10, \"ng-container\", 0);\n      i0.ɵɵtemplate(1, NgChatWindowComponent_ng_container_1_Template, 20, 24, \"ng-container\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.window && ctx.window.isCollapsed);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.window && !ctx.window.isCollapsed);\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i1.NgSwitch, i1.NgSwitchCase, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, i3.NgChatOptionsComponent, i1.DatePipe, i4.EmojifyPipe, i5.LinkfyPipe, i6.SanitizePipe, i7.GroupMessageDisplayNamePipe],\n  styles: [\".ng-chat-window\\n{\\n    right: 260px;\\n    height: 360px;\\n    z-index: 999;\\n    bottom: 0;\\n    width: 300px;\\n    position: fixed;\\n    border-width: 1px;\\n    border-style: solid;\\n    border-bottom: 0;\\n    box-shadow: 0 4px 8px rgba(0,0,0,.25);\\n}\\n.ng-chat-window-collapsed\\n{\\n    height: 30px !important;\\n}\\n    .ng-chat-window .ng-chat-footer\\n    {\\n        box-sizing: border-box;\\n        padding:0;\\n        display:block;\\n        height: calc(10%);\\n        width:100%;\\n        border: none;\\n        border-top: 1px solid transparent;\\n        border-color: inherit;\\n    }\\n        .ng-chat-window .ng-chat-footer > input\\n        {\\n            font-size:0.8em;\\n            box-sizing: border-box;\\n            padding:0 5px;\\n            display:block;\\n            height: 100%;\\n            width: 100%;\\n            border: none;\\n        }\\n            .ng-chat-window .ng-chat-footer > input.has-side-action\\n            {\\n                width: calc(100% - 30px);\\n            }\\n        .ng-chat-window .ng-chat-footer .btn-add-file\\n        {\\n            position: absolute;\\n            right: 5px;\\n            bottom: 7px;\\n            height: 20px;\\n            width: 20px;\\n            cursor: pointer;\\n        }\\n        .ng-chat-window .ng-chat-footer .loader\\n        {\\n            position: absolute;\\n            right: 14px;\\n            bottom: 8px;\\n        }\\n    .ng-chat-window .ng-chat-load-history\\n    {\\n        height: 30px;\\n        text-align: center;\\n        font-size:0.8em;\\n    }\\n        .ng-chat-window  .ng-chat-load-history > a\\n        {\\n            border-radius: 15px;\\n            cursor: pointer;\\n            padding: 5px 10px;\\n        }\\n    .ng-chat-window .ng-chat-messages\\n    {\\n        padding: 10px;\\n        width: 100%;\\n        height: calc(90% - 30px);\\n        box-sizing: border-box;\\n        position: relative;\\n        overflow: auto;\\n    }\\n        .ng-chat-window .ng-chat-messages .ng-chat-message\\n        {\\n            clear: both;\\n        }\\n        .ng-chat-window .ng-chat-messages .ng-chat-message > img.avatar, .ng-chat-window .ng-chat-messages .ng-chat-message > .icon-wrapper\\n        {\\n            position: absolute;\\n            left: 10px;\\n            border-radius: 25px;\\n        }\\n        .ng-chat-window .ng-chat-messages .ng-chat-message .ng-chat-participant-name\\n        {\\n            display: inline-block;\\n            margin-left: 40px;\\n            padding-bottom: 5px;\\n            font-weight: bold;\\n            font-size: 0.8em;\\n            text-overflow: ellipsis;\\n            max-width: 180px;\\n        }\\n            .ng-chat-window .ng-chat-messages .ng-chat-message > .icon-wrapper\\n            {\\n                background-color: #BABABA;\\n                overflow: hidden;\\n                width: 30px;\\n                height: 30px;\\n                padding: 0;\\n            }\\n                .ng-chat-window .ng-chat-messages .ng-chat-message > .icon-wrapper > i\\n                {\\n                    color: #FFF;\\n                    transform: scale(0.7);\\n                }\\n            .ng-chat-window .ng-chat-messages .ng-chat-message .message-sent-date\\n            {\\n                font-size: 0.8em;\\n                display: block;\\n                text-align: right;\\n                margin-top: 5px;\\n            }\\n        .ng-chat-window .ng-chat-messages .ng-chat-message > div\\n        {\\n            float: right;\\n            width: 182px;\\n            padding: 0;\\n            margin-top: 0;\\n            border-radius: 5px;\\n            padding: 10px;\\n            margin-top: 0;\\n            margin-bottom: 5px;\\n            font-size: 0.9em;\\n            word-wrap: break-word;\\n        }\\n        .ng-chat-window .ng-chat-messages .ng-chat-message.ng-chat-message-received > div.received-chat-message-container\\n        {\\n            float: left;\\n            margin-left: 40px;\\n            padding-top: 7px;\\n            padding-bottom: 7px;\\n            border-style: solid;\\n            border-width: 3px;\\n            margin-top: 0;\\n            margin-bottom: 5px;\\n        }\\n            .ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container\\n            {\\n                float: right;\\n                width: 202px;\\n                border-style: solid;\\n                border-width: 3px;\\n                border-radius: 5px;\\n                overflow: hidden;\\n                margin-bottom: 5px;\\n                display: block;\\n                text-decoration: none;\\n                font-size: 0.9em;\\n                padding: 0;\\n                box-sizing: border-box;\\n            }\\n            .ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container.received\\n            {\\n                float: left;\\n                margin-left: 40px;\\n                width: 208px;\\n            }\\n                .ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container > .file-message-icon-container\\n                {\\n                    width: 20px;\\n                    height: 35px;\\n                    padding: 10px 5px;\\n                    float: left;\\n                }\\n                    .ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container > .file-message-icon-container i\\n                    {\\n                        margin-top: 8px;\\n                    }\\n                .ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container > .file-details\\n                {\\n                    float: left;\\n                    padding: 10px;\\n                    width: calc(100% - 60px);\\n                    color: currentColor;\\n                    text-decoration: none;\\n                }\\n                    .ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container > .file-details:hover\\n                    {\\n                        text-decoration: underline;\\n                    }\\n                    .ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container > .file-details span\\n                    {\\n                        display: block;\\n                        width: 100%;\\n                        text-overflow: ellipsis;\\n                        overflow: hidden;\\n                        white-space: nowrap;\\n                    }\\n                    .ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container > .file-details .file-message-title\\n                    {\\n                        font-weight: bold;\\n                    }\\n                    .ng-chat-window .ng-chat-messages .ng-chat-message .file-message-container > .file-details .file-message-size\\n                    {\\n                        font-size: 0.8em;\\n                        margin-top:5px;\\n                    }\\n                    .ng-chat-window .image-message {\\n                      width: 100%;\\n                      height: auto;\\n                    }\\n\\n/* Mobile viewport only */\\n@media only screen and (max-width: 581px) {\\n    .ng-chat-window\\n    {\\n        position: initial;\\n    }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"],\n  encapsulation: 2\n});","map":{"version":3,"names":["EventEmitter","Message","MessageType","ChatParticipantStatus","ScrollDirection","ChatParticipantType","MessageCounter","chatParticipantStatusDescriptor","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r2","unreadMessagesTotal","window","ɵɵelementContainerStart","ɵɵlistener","NgChatWindowComponent_ng_container_0_Template_div_click_2_listener","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","onChatWindowClicked","ɵɵelement","ɵɵtemplate","NgChatWindowComponent_ng_container_0_span_6_Template","NgChatWindowComponent_ng_container_0_Template_a_click_7_listener","ctx_r5","onCloseChatWindow","ɵɵelementContainerEnd","ɵɵpropertyInterpolate","ctx_r0","participant","displayName","ɵɵtextInterpolate1","status","localization","ɵɵproperty","ɵɵpureFunction4","_c3","Online","Busy","Away","Offline","length","ctx_r6","NgChatWindowComponent_ng_container_1_div_13_Template_a_click_1_listener","_r14","ctx_r13","fetchMessageHistory","ctx_r9","loadMessageHistoryPlaceholder","ɵɵpipeBind1","ctx_r22","getChatWindowAvatar","message_r15","ɵɵsanitizeUrl","ɵɵpipeBind2","ctx_r23","NgChatWindowComponent_ng_container_1_div_14_ng_container_1_div_1_Template","NgChatWindowComponent_ng_container_1_div_14_ng_container_1_img_2_Template","NgChatWindowComponent_ng_container_1_div_14_ng_container_1_span_3_Template","ctx_r17","participantType","Group","dateSent","ctx_r27","messageDatePipeFormat","NgChatWindowComponent_ng_container_1_div_14_div_3_span_4_Template","ɵɵpureFunction2","_c4","fromId","ctx_r18","userId","message","emojisEnabled","linkfyEnabled","ɵɵsanitizeHtml","showMessageDate","ctx_r30","NgChatWindowComponent_ng_container_1_div_14_div_4_span_2_Template","ctx_r19","fileSizeInBytes","NgChatWindowComponent_ng_container_1_div_14_div_5_Template_a_click_3_listener","_r37","$implicit","ctx_r35","markMessagesAsRead","NgChatWindowComponent_ng_container_1_div_14_div_5_span_6_Template","ɵɵpureFunction1","_c5","ctx_r20","ɵɵattribute","downloadUrl","NgChatWindowComponent_ng_container_1_div_14_ng_container_1_Template","NgChatWindowComponent_ng_container_1_div_14_div_3_Template","NgChatWindowComponent_ng_container_1_div_14_div_4_Template","NgChatWindowComponent_ng_container_1_div_14_div_5_Template","_c6","ctx_r10","isAvatarVisible","i_r16","type","Text","Image","File","NgChatWindowComponent_ng_container_1_ng_container_19_a_1_Template_a_click_0_listener","_r43","ctx_r42","triggerNativeFileUpload","NgChatWindowComponent_ng_container_1_ng_container_19_a_1_Template","NgChatWindowComponent_ng_container_1_ng_container_19_Template_input_change_2_listener","_r45","ctx_r44","onFileChosen","NgChatWindowComponent_ng_container_1_ng_container_19_div_4_Template","ctx_r12","isUploadingFile","getUniqueFileUploadInstanceId","NgChatWindowComponent_ng_container_1_Template_div_click_2_listener","_r47","ctx_r46","NgChatWindowComponent_ng_container_1_span_6_Template","NgChatWindowComponent_ng_container_1_Template_a_click_7_listener","ctx_r48","NgChatWindowComponent_ng_container_1_Template_ng_chat_options_activeOptionTrackerChange_9_listener","$event","ctx_r49","activeOptionTrackerChange","NgChatWindowComponent_ng_container_1_div_12_Template","NgChatWindowComponent_ng_container_1_div_13_Template","NgChatWindowComponent_ng_container_1_div_14_Template","NgChatWindowComponent_ng_container_1_Template_input_ngModelChange_16_listener","ctx_r50","newMessage","NgChatWindowComponent_ng_container_1_Template_input_keydown_16_listener","ctx_r51","onChatInputTyped","NgChatWindowComponent_ng_container_1_Template_input_blur_16_listener","ctx_r52","toggleWindowFocus","NgChatWindowComponent_ng_container_1_Template_input_focus_16_listener","ctx_r53","NgChatWindowComponent_ng_container_1_ng_container_19_Template","ctx_r1","defaultWindowOptions","isLoadingHistory","hasPagedHistory","hasMoreMessages","messages","messagePlaceholder","_c7","fileUploadAdapter","NgChatWindowComponent","constructor","onChatWindowClosed","onMessagesSeen","onMessageSent","onTabTriggered","onOptionTriggered","onLoadHistoryTriggered","fileUploadersInUse","currentWindow","showOptions","User","isActive","chattingTo","validateContext","displayLabel","index","avatar","group","userIndex","findIndex","x","id","fileUploadInstanceId","indexOf","scrollChatWindow","direction","isCollapsed","setTimeout","chatMessages","element","nativeElement","position","Top","scrollHeight","scrollTop","option","emit","nativeFileInput","click","hasFocus","unreadMessages","filter","dateSeen","toId","closedWindow","closedViaEscapeKey","event","keyCode","trim","Date","push","Bottom","preventDefault","triggeringWindow","shiftKeyPressed","shiftKey","clearInUseFileUploader","uploaderInstanceIdIndex","splice","uploadElementRef","file","files","uploadFile","subscribe","fileMessage","value","error","selectors","viewQuery","NgChatWindowComponent_Query","rf","ctx","NgChatWindowComponent_ng_container_0_Template","NgChatWindowComponent_ng_container_1_Template"],"sources":["D:\\VS Project\\ng-chat\\src\\ng-chat\\components\\ng-chat-window\\ng-chat-window.component.ts","D:\\VS Project\\ng-chat\\src\\ng-chat\\components\\ng-chat-window\\ng-chat-window.component.html"],"sourcesContent":["import { Component, Input, Output, EventEmitter, ViewEncapsulation, ViewChild, ElementRef } from '@angular/core';\r\n\r\nimport { Message } from \"../../core/message\";\r\nimport { MessageType } from \"../../core/message-type.enum\";\r\nimport { Window } from \"../../core/window\";\r\nimport { ChatParticipantStatus } from \"../../core/chat-participant-status.enum\";\r\nimport { ScrollDirection } from \"../../core/scroll-direction.enum\";\r\nimport { Localization } from '../../core/localization';\r\nimport { IFileUploadAdapter } from '../../core/file-upload-adapter';\r\nimport { IChatOption } from '../../core/chat-option';\r\nimport { Group } from \"../../core/group\";\r\nimport { ChatParticipantType } from \"../../core/chat-participant-type.enum\";\r\nimport { IChatParticipant } from \"../../core/chat-participant\";\r\nimport { MessageCounter } from \"../../core/message-counter\";\r\nimport { chatParticipantStatusDescriptor } from '../../core/chat-participant-status-descriptor';\r\n\r\n@Component({\r\n    selector: 'ng-chat-window',\r\n    templateUrl: './ng-chat-window.component.html',\r\n    styleUrls: ['./ng-chat-window.component.css'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NgChatWindowComponent {\r\n    constructor() { }\r\n\r\n    @Input()\r\n    public fileUploadAdapter: IFileUploadAdapter;\r\n\r\n    @Input()\r\n    public window: Window;\r\n\r\n    @Input()\r\n    public userId: any;\r\n\r\n    @Input()\r\n    public localization: Localization;\r\n\r\n    @Input()\r\n    public showOptions: boolean;\r\n\r\n    @Input()    \r\n    public emojisEnabled: boolean = true;\r\n\r\n    @Input()    \r\n    public linkfyEnabled: boolean = true;\r\n\r\n    @Input()\r\n    public showMessageDate: boolean = true;\r\n\r\n    @Input()\r\n    public messageDatePipeFormat: string = \"short\";\r\n\r\n    @Input()\r\n    public hasPagedHistory: boolean = true;\r\n\r\n    @Output()\r\n    public onChatWindowClosed: EventEmitter<{ closedWindow: Window, closedViaEscapeKey: boolean}> = new EventEmitter();\r\n\r\n    @Output()\r\n    public onMessagesSeen: EventEmitter<Message[]> = new EventEmitter();\r\n\r\n    @Output()\r\n    public onMessageSent: EventEmitter<Message> = new EventEmitter();\r\n\r\n    @Output()\r\n    public onTabTriggered: EventEmitter<{ triggeringWindow: Window, shiftKeyPressed: boolean }> = new EventEmitter();\r\n\r\n    @Output()\r\n    public onOptionTriggered: EventEmitter<IChatOption> = new EventEmitter();\r\n\r\n    @Output()\r\n    public onLoadHistoryTriggered: EventEmitter<Window> = new EventEmitter();\r\n\r\n    @ViewChild('chatMessages') chatMessages: any;\r\n    @ViewChild('nativeFileInput') nativeFileInput: ElementRef;\r\n    @ViewChild('chatWindowInput') chatWindowInput: any;\r\n\r\n    // File upload state\r\n    public fileUploadersInUse: string[] = []; // Id bucket of uploaders in use\r\n\r\n    // Exposes enums and functions for the ng-template\r\n    public ChatParticipantType = ChatParticipantType;\r\n    public ChatParticipantStatus = ChatParticipantStatus;\r\n    public MessageType = MessageType;\r\n    public chatParticipantStatusDescriptor = chatParticipantStatusDescriptor;\r\n\r\n    defaultWindowOptions(currentWindow: Window): IChatOption[]\r\n    {\r\n        if (this.showOptions && currentWindow.participant.participantType == ChatParticipantType.User)\r\n        {\r\n            return [{\r\n                isActive: false,\r\n                chattingTo: currentWindow,\r\n                validateContext: (participant: IChatParticipant) => {\r\n                    return participant.participantType == ChatParticipantType.User;\r\n                },\r\n                displayLabel: 'Add People' // TODO: Localize this\r\n            }];\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    // Asserts if a user avatar is visible in a chat cluster\r\n    isAvatarVisible(window: Window, message: Message, index: number): boolean\r\n    {\r\n        if (message.fromId != this.userId){\r\n            if (index == 0){\r\n                return true; // First message, good to show the thumbnail\r\n            }\r\n            else{\r\n                // Check if the previous message belongs to the same user, if it belongs there is no need to show the avatar again to form the message cluster\r\n                if (window.messages[index - 1].fromId != message.fromId){\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getChatWindowAvatar(participant: IChatParticipant, message: Message): string | null\r\n    {\r\n        if (participant.participantType == ChatParticipantType.User)\r\n        {\r\n            return participant.avatar;\r\n        }\r\n        else if (participant.participantType == ChatParticipantType.Group)\r\n        {\r\n            let group = participant as Group;\r\n            let userIndex = group.chattingTo.findIndex(x => x.id == message.fromId);\r\n\r\n            return group.chattingTo[userIndex >= 0 ? userIndex : 0].avatar;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    isUploadingFile(window: Window): boolean\r\n    {\r\n        const fileUploadInstanceId = this.getUniqueFileUploadInstanceId(window);\r\n\r\n        return this.fileUploadersInUse.indexOf(fileUploadInstanceId) > -1;\r\n    }\r\n\r\n    // Generates a unique file uploader id for each participant\r\n    getUniqueFileUploadInstanceId(window: Window): string\r\n    {\r\n        if (window && window.participant)\r\n        {\r\n            return `ng-chat-file-upload-${window.participant.id}`;\r\n        }\r\n        \r\n        return 'ng-chat-file-upload';\r\n    }\r\n\r\n    unreadMessagesTotal(window: Window): string\r\n    {           \r\n        return MessageCounter.unreadMessagesTotal(window, this.userId);\r\n    }\r\n\r\n    // Scrolls a chat window message flow to the bottom\r\n    scrollChatWindow(window: Window, direction: ScrollDirection): void\r\n    {\r\n        if (!window.isCollapsed){\r\n            setTimeout(() => {\r\n                if (this.chatMessages){\r\n                    let element = this.chatMessages.nativeElement;\r\n                    let position = ( direction === ScrollDirection.Top ) ? 0 : element.scrollHeight;\r\n                    element.scrollTop = position;\r\n                }\r\n            }); \r\n        }\r\n    }\r\n\r\n    activeOptionTrackerChange(option: IChatOption): void {\r\n        this.onOptionTriggered.emit(option);\r\n    }\r\n\r\n    // Triggers native file upload for file selection from the user\r\n    triggerNativeFileUpload(window: Window): void\r\n    {\r\n        if (window)\r\n        {\r\n            if (this.nativeFileInput) this.nativeFileInput.nativeElement.click();\r\n        }\r\n    }\r\n\r\n    // Toggles a window focus on the focus/blur of a 'newMessage' input\r\n    toggleWindowFocus(window: Window): void\r\n    {\r\n        window.hasFocus = !window.hasFocus;\r\n        if(window.hasFocus) {\r\n            const unreadMessages = window.messages\r\n                .filter(message => message.dateSeen == null \r\n                    && (message.toId == this.userId || window.participant.participantType === ChatParticipantType.Group));\r\n            \r\n            if (unreadMessages && unreadMessages.length > 0)\r\n            {\r\n                this.onMessagesSeen.emit(unreadMessages);\r\n            }\r\n        }\r\n    }\r\n\r\n    markMessagesAsRead(messages: Message[]): void \r\n    {\r\n        this.onMessagesSeen.emit(messages);\r\n    }\r\n\r\n    fetchMessageHistory(window: Window): void {\r\n        this.onLoadHistoryTriggered.emit(window);\r\n    }\r\n\r\n    // Closes a chat window via the close 'X' button\r\n    onCloseChatWindow(): void \r\n    {\r\n        this.onChatWindowClosed.emit({ closedWindow: this.window, closedViaEscapeKey: false });\r\n    }\r\n\r\n    /*  Monitors pressed keys on a chat window\r\n        - Dispatches a message when the ENTER key is pressed\r\n        - Tabs between windows on TAB or SHIFT + TAB\r\n        - Closes the current focused window on ESC\r\n    */\r\n   onChatInputTyped(event: any, window: Window): void\r\n   {\r\n       switch (event.keyCode)\r\n       {\r\n           case 13:\r\n               if (window.newMessage && window.newMessage.trim() != \"\")\r\n               {\r\n                   let message = new Message();\r\n            \r\n                   message.fromId = this.userId;\r\n                   message.toId = window.participant.id;\r\n                   message.message = window.newMessage;\r\n                   message.dateSent = new Date();\r\n       \r\n                   window.messages.push(message);\r\n       \r\n                   this.onMessageSent.emit(message);\r\n       \r\n                   window.newMessage = \"\"; // Resets the new message input\r\n       \r\n                   this.scrollChatWindow(window, ScrollDirection.Bottom);\r\n               }\r\n               break;\r\n           case 9:\r\n               event.preventDefault();\r\n\r\n               this.onTabTriggered.emit({ triggeringWindow: window, shiftKeyPressed: event.shiftKey });\r\n\r\n               break;\r\n           case 27:\r\n               this.onChatWindowClosed.emit({ closedWindow: window, closedViaEscapeKey: true });\r\n\r\n               break;\r\n       }\r\n   }\r\n\r\n    // Toggles a chat window visibility between maximized/minimized\r\n    onChatWindowClicked(window: Window): void\r\n    {\r\n        window.isCollapsed = !window.isCollapsed;\r\n        this.scrollChatWindow(window, ScrollDirection.Bottom);\r\n    }\r\n\r\n    private clearInUseFileUploader(fileUploadInstanceId: string): void\r\n    {\r\n        const uploaderInstanceIdIndex = this.fileUploadersInUse.indexOf(fileUploadInstanceId);\r\n\r\n        if (uploaderInstanceIdIndex > -1) {\r\n            this.fileUploadersInUse.splice(uploaderInstanceIdIndex, 1);\r\n        }\r\n    }\r\n\r\n    // Handles file selection and uploads the selected file using the file upload adapter\r\n    onFileChosen(window: Window): void {\r\n        const fileUploadInstanceId = this.getUniqueFileUploadInstanceId(window);\r\n        const uploadElementRef = this.nativeFileInput;\r\n\r\n        if (uploadElementRef)\r\n        {\r\n            const file: File = uploadElementRef.nativeElement.files[0];\r\n\r\n            this.fileUploadersInUse.push(fileUploadInstanceId);\r\n\r\n            this.fileUploadAdapter.uploadFile(file, window.participant.id)\r\n                .subscribe(fileMessage => {\r\n                    this.clearInUseFileUploader(fileUploadInstanceId);\r\n\r\n                    fileMessage.fromId = this.userId;\r\n\r\n                    // Push file message to current user window   \r\n                    window.messages.push(fileMessage);\r\n        \r\n                    this.onMessageSent.emit(fileMessage);\r\n        \r\n                    this.scrollChatWindow(window, ScrollDirection.Bottom);\r\n\r\n                    // Resets the file upload element\r\n                    uploadElementRef.nativeElement.value = '';\r\n                }, (error) => {\r\n                    this.clearInUseFileUploader(fileUploadInstanceId);\r\n\r\n                    // Resets the file upload element\r\n                    uploadElementRef.nativeElement.value = '';\r\n\r\n                    // TODO: Invoke a file upload adapter error here\r\n                });\r\n        }\r\n    }\r\n}\r\n","<ng-container *ngIf=\"window && window.isCollapsed\">\r\n\t<div class=\"ng-chat-title secondary-background\">\r\n\t\t<div class=\"ng-chat-title-visibility-toggle-area\" (click)=\"onChatWindowClicked(window)\">\r\n\t\t\t<strong title=\"{{window.participant.displayName}}\">\r\n\t\t\t\t{{window.participant.displayName}}\r\n\t\t\t</strong>\r\n\t\t\t<span [ngClass]=\"{'ng-chat-participant-status': true, 'online': window.participant.status == ChatParticipantStatus.Online, 'busy': window.participant.status == ChatParticipantStatus.Busy, 'away': window.participant.status == ChatParticipantStatus.Away, 'offline': window.participant.status == ChatParticipantStatus.Offline}\" title=\"{{chatParticipantStatusDescriptor(window.participant.status, localization)}}\"></span>\r\n\t\t\t<span *ngIf=\"unreadMessagesTotal(window).length > 0\" class=\"ng-chat-unread-messages-count unread-messages-counter-container primary-text\">{{unreadMessagesTotal(window)}}</span>\r\n\t\t</div>\r\n\t\t<a href=\"javascript:void(0);\" class=\"ng-chat-close primary-text\" (click)=\"onCloseChatWindow()\">X</a>\r\n\t</div>\r\n</ng-container>\r\n<ng-container *ngIf=\"window && !window.isCollapsed\">\r\n\t<div class=\"ng-chat-title secondary-background\">\r\n\t\t<div class=\"ng-chat-title-visibility-toggle-area\" (click)=\"onChatWindowClicked(window)\">\r\n\t\t\t<strong title=\"{{window.participant.displayName}}\">\r\n\t\t\t\t{{window.participant.displayName}}\r\n\t\t\t</strong>\r\n\t\t\t<span [ngClass]=\"{'ng-chat-participant-status': true, 'online': window.participant.status == ChatParticipantStatus.Online, 'busy': window.participant.status == ChatParticipantStatus.Busy, 'away': window.participant.status == ChatParticipantStatus.Away, 'offline': window.participant.status == ChatParticipantStatus.Offline}\" title=\"{{chatParticipantStatusDescriptor(window.participant.status, localization)}}\"></span>\r\n\t\t\t<span *ngIf=\"unreadMessagesTotal(window).length > 0\" class=\"ng-chat-unread-messages-count unread-messages-counter-container primary-text\">{{unreadMessagesTotal(window)}}</span>\r\n\t\t</div>\r\n\t\t<a href=\"javascript:void(0);\" class=\"ng-chat-close primary-text\" (click)=\"onCloseChatWindow()\">X</a>\r\n\t\t<ng-chat-options [ngClass]=\"'ng-chat-options-container'\" [options]=\"defaultWindowOptions(window)\" (activeOptionTrackerChange)=\"activeOptionTrackerChange($event)\"></ng-chat-options>\r\n\t</div>\r\n\t<div #chatMessages class=\"ng-chat-messages primary-background\">\r\n\t\t<div *ngIf=\"window.isLoadingHistory\" class=\"ng-chat-loading-wrapper\">\r\n\t\t\t<div class=\"loader\">Loading history...</div>\r\n\t\t</div>\r\n\t\t<div *ngIf=\"hasPagedHistory && window.hasMoreMessages && !window.isLoadingHistory\" class=\"ng-chat-load-history\">\r\n\t\t\t<a class=\"load-history-action\" (click)=\"fetchMessageHistory(window)\">{{localization.loadMessageHistoryPlaceholder}}</a>\r\n\t\t</div>\r\n\r\n\t\t<div *ngFor=\"let message of window.messages; let i = index\" [ngClass]=\"{'ng-chat-message': true, 'ng-chat-message-received': message.fromId != userId}\">\r\n\t\t\t<ng-container *ngIf=\"isAvatarVisible(window, message, i)\">\r\n\t\t\t\t<div *ngIf=\"!getChatWindowAvatar(window.participant || '', message)\" class=\"icon-wrapper\">\r\n\t\t\t\t\t<i class=\"user-icon\"></i>\r\n\t\t\t\t</div>\r\n\t\t\t\t<img *ngIf=\"getChatWindowAvatar(window.participant || '', message)\" alt=\"\" class=\"avatar\" height=\"30\" width=\"30\" [src]=\"getChatWindowAvatar(window.participant || '', message) | sanitize\" />\r\n\t\t\t\t<span *ngIf=\"window.participant.participantType == ChatParticipantType.Group\" class=\"ng-chat-participant-name\">{{window.participant | groupMessageDisplayName:message}}</span>\r\n\t\t\t</ng-container>\r\n\t\t\t<ng-container [ngSwitch]=\"message.type\">\r\n\t\t\t\t<div *ngSwitchCase=\"MessageType.Text\" [ngClass]=\"{'sent-chat-message-container': message.fromId == userId, 'received-chat-message-container': message.fromId != userId}\">\r\n          <span [innerHtml]=\"message.message | emojify:emojisEnabled | linkfy:linkfyEnabled\"></span>\r\n\t\t\t\t\t<span *ngIf=\"showMessageDate && message.dateSent\" class=\"message-sent-date\">{{message.dateSent | date:messageDatePipeFormat}}</span>\r\n\t\t\t\t</div>\r\n        <div *ngSwitchCase=\"MessageType.Image\" [ngClass]=\"{'sent-chat-message-container': message.fromId == userId, 'received-chat-message-container': message.fromId != userId}\">\r\n\r\n          <img src=\"{{message.message}}\" class=\"image-message\" />\r\n\r\n\t\t\t\t\t<span *ngIf=\"showMessageDate && message.dateSent\" class=\"message-sent-date\">{{message.dateSent | date:messageDatePipeFormat}}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div *ngSwitchCase=\"MessageType.File\" [ngClass]=\"{'file-message-container': true, 'received': message.fromId != userId}\">\r\n\t\t\t\t\t<div class=\"file-message-icon-container\">\r\n\t\t\t\t\t\t<i class=\"paperclip-icon\"></i>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<a class=\"file-details\" [attr.href]=\"message.downloadUrl\" target=\"_blank\" rel=\"noopener noreferrer\" (click)=\"this.markMessagesAsRead([message])\" download>\r\n\t\t\t\t\t\t<span class=\"file-message-title\" [attr.title]=\"message.message\">{{message.message}}</span>\r\n\t\t\t\t\t\t<span *ngIf=\"message.fileSizeInBytes\"  class=\"file-message-size\">{{message.fileSizeInBytes}} Bytes</span>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t</ng-container>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div class=\"ng-chat-footer primary-outline-color primary-background\">\r\n\t\t<input #chatWindowInput\r\n\t\t\ttype=\"text\"\r\n\t\t\t[ngModel]=\"window.newMessage | emojify:emojisEnabled\"\r\n\t\t\t(ngModelChange)=\"window.newMessage=$event\"\r\n\t\t\t[placeholder]=\"localization.messagePlaceholder\"\r\n\t\t\t[ngClass]=\"{'chat-window-input': true, 'has-side-action': fileUploadAdapter}\"\r\n\t\t\t(keydown)=\"onChatInputTyped($event, window)\"\r\n\t\t\t(blur)=\"toggleWindowFocus(window)\"\r\n\t\t\t(focus)=\"toggleWindowFocus(window)\"/>\r\n\r\n\t\t<!-- File Upload -->\r\n\t\t<ng-container *ngIf=\"fileUploadAdapter\">\r\n\t\t\t<a *ngIf=\"!isUploadingFile(window)\" class=\"btn-add-file\" (click)=\"triggerNativeFileUpload(window)\">\r\n\t\t\t\t<i class=\"upload-icon\"></i>\r\n\t\t\t</a>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"file\"\r\n\t\t\t\t#nativeFileInput\r\n\t\t\t\tstyle=\"display: none;\"\r\n\t\t\t\t[attr.id]=\"getUniqueFileUploadInstanceId(window)\"\r\n\t\t\t\t(change)=\"onFileChosen(window)\" />\r\n\t\t\t<div *ngIf=\"isUploadingFile(window)\" class=\"loader\"></div>\r\n\t\t</ng-container>\r\n\t</div>\r\n</ng-container>\r\n"],"mappings":";AAAA,SAAmCA,YAAY,QAAkD,eAAe;AAEhH,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,SAASC,WAAW,QAAQ,8BAA8B;AAE1D,SAASC,qBAAqB,QAAQ,yCAAyC;AAC/E,SAASC,eAAe,QAAQ,kCAAkC;AAKlE,SAASC,mBAAmB,QAAQ,uCAAuC;AAE3E,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,SAASC,+BAA+B,QAAQ,+CAA+C;;;;;;;;;;;;;;ICP5FC,EAAA,CAAAC,cAAA,cAA0I;IAAAD,EAAA,CAAAE,MAAA,GAA+B;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;IAAtCH,EAAA,CAAAI,SAAA,GAA+B;IAA/BJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,mBAAA,CAAAD,MAAA,CAAAE,MAAA,EAA+B;;;;;;;;;;;;;;;IAP5KR,EAAA,CAAAS,uBAAA,GAAmD;IAClDT,EAAA,CAAAC,cAAA,aAAgD;IACGD,EAAA,CAAAU,UAAA,mBAAAC,mEAAA;MAAAX,EAAA,CAAAY,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAd,EAAA,CAAAe,aAAA;MAAA,OAASf,EAAA,CAAAgB,WAAA,CAAAF,MAAA,CAAAG,mBAAA,CAAAH,MAAA,CAAAN,MAAA,CAA2B;IAAA,EAAC;IACtFR,EAAA,CAAAC,cAAA,gBAAmD;IAClDD,EAAA,CAAAE,MAAA,GACD;IAAAF,EAAA,CAAAG,YAAA,EAAS;IACTH,EAAA,CAAAkB,SAAA,cAAia;IACjalB,EAAA,CAAAmB,UAAA,IAAAC,oDAAA,kBAAgL;IACjLpB,EAAA,CAAAG,YAAA,EAAM;IACNH,EAAA,CAAAC,cAAA,WAA+F;IAA9BD,EAAA,CAAAU,UAAA,mBAAAW,iEAAA;MAAArB,EAAA,CAAAY,aAAA,CAAAC,GAAA;MAAA,MAAAS,MAAA,GAAAtB,EAAA,CAAAe,aAAA;MAAA,OAASf,EAAA,CAAAgB,WAAA,CAAAM,MAAA,CAAAC,iBAAA,EAAmB;IAAA,EAAC;IAACvB,EAAA,CAAAE,MAAA,QAAC;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAEtGH,EAAA,CAAAwB,qBAAA,EAAe;;;;IARJxB,EAAA,CAAAI,SAAA,GAA0C;IAA1CJ,EAAA,CAAAyB,qBAAA,UAAAC,MAAA,CAAAlB,MAAA,CAAAmB,WAAA,CAAAC,WAAA,CAA0C;IACjD5B,EAAA,CAAAI,SAAA,GACD;IADCJ,EAAA,CAAA6B,kBAAA,MAAAH,MAAA,CAAAlB,MAAA,CAAAmB,WAAA,CAAAC,WAAA,MACD;IACqU5B,EAAA,CAAAI,SAAA,GAAoF;IAApFJ,EAAA,CAAAyB,qBAAA,UAAAC,MAAA,CAAA3B,+BAAA,CAAA2B,MAAA,CAAAlB,MAAA,CAAAmB,WAAA,CAAAG,MAAA,EAAAJ,MAAA,CAAAK,YAAA,EAAoF;IAAnZ/B,EAAA,CAAAgC,UAAA,YAAAhC,EAAA,CAAAiC,eAAA,IAAAC,GAAA,EAAAR,MAAA,CAAAlB,MAAA,CAAAmB,WAAA,CAAAG,MAAA,IAAAJ,MAAA,CAAA/B,qBAAA,CAAAwC,MAAA,EAAAT,MAAA,CAAAlB,MAAA,CAAAmB,WAAA,CAAAG,MAAA,IAAAJ,MAAA,CAAA/B,qBAAA,CAAAyC,IAAA,EAAAV,MAAA,CAAAlB,MAAA,CAAAmB,WAAA,CAAAG,MAAA,IAAAJ,MAAA,CAAA/B,qBAAA,CAAA0C,IAAA,EAAAX,MAAA,CAAAlB,MAAA,CAAAmB,WAAA,CAAAG,MAAA,IAAAJ,MAAA,CAAA/B,qBAAA,CAAA2C,OAAA,EAA8T;IAC7TtC,EAAA,CAAAI,SAAA,GAA4C;IAA5CJ,EAAA,CAAAgC,UAAA,SAAAN,MAAA,CAAAnB,mBAAA,CAAAmB,MAAA,CAAAlB,MAAA,EAAA+B,MAAA,KAA4C;;;;;IAYnDvC,EAAA,CAAAC,cAAA,cAA0I;IAAAD,EAAA,CAAAE,MAAA,GAA+B;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;IAAtCH,EAAA,CAAAI,SAAA,GAA+B;IAA/BJ,EAAA,CAAAK,iBAAA,CAAAmC,MAAA,CAAAjC,mBAAA,CAAAiC,MAAA,CAAAhC,MAAA,EAA+B;;;;;IAM1KR,EAAA,CAAAC,cAAA,cAAqE;IAChDD,EAAA,CAAAE,MAAA,yBAAkB;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;;;IAE7CH,EAAA,CAAAC,cAAA,cAAgH;IAChFD,EAAA,CAAAU,UAAA,mBAAA+B,wEAAA;MAAAzC,EAAA,CAAAY,aAAA,CAAA8B,IAAA;MAAA,MAAAC,OAAA,GAAA3C,EAAA,CAAAe,aAAA;MAAA,OAASf,EAAA,CAAAgB,WAAA,CAAA2B,OAAA,CAAAC,mBAAA,CAAAD,OAAA,CAAAnC,MAAA,CAA2B;IAAA,EAAC;IAACR,EAAA,CAAAE,MAAA,GAA8C;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAAlDH,EAAA,CAAAI,SAAA,GAA8C;IAA9CJ,EAAA,CAAAK,iBAAA,CAAAwC,MAAA,CAAAd,YAAA,CAAAe,6BAAA,CAA8C;;;;;IAKlH9C,EAAA,CAAAC,cAAA,cAA0F;IACzFD,EAAA,CAAAkB,SAAA,YAAyB;IAC1BlB,EAAA,CAAAG,YAAA,EAAM;;;;;IACNH,EAAA,CAAAkB,SAAA,cAA6L;;;;;;IAA5ElB,EAAA,CAAAgC,UAAA,QAAAhC,EAAA,CAAA+C,WAAA,OAAAC,OAAA,CAAAC,mBAAA,CAAAD,OAAA,CAAAxC,MAAA,CAAAmB,WAAA,QAAAuB,WAAA,IAAAlD,EAAA,CAAAmD,aAAA,CAAyE;;;;;IAC1LnD,EAAA,CAAAC,cAAA,eAA+G;IAAAD,EAAA,CAAAE,MAAA,GAAwD;;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IAA/DH,EAAA,CAAAI,SAAA,GAAwD;IAAxDJ,EAAA,CAAAK,iBAAA,CAAAL,EAAA,CAAAoD,WAAA,OAAAC,OAAA,CAAA7C,MAAA,CAAAmB,WAAA,EAAAuB,WAAA,EAAwD;;;;;IALxKlD,EAAA,CAAAS,uBAAA,GAA0D;IACzDT,EAAA,CAAAmB,UAAA,IAAAmC,yEAAA,kBAEM;IACNtD,EAAA,CAAAmB,UAAA,IAAAoC,yEAAA,kBAA6L;IAC7LvD,EAAA,CAAAmB,UAAA,IAAAqC,0EAAA,mBAA8K;IAC/KxD,EAAA,CAAAwB,qBAAA,EAAe;;;;;IALRxB,EAAA,CAAAI,SAAA,GAA6D;IAA7DJ,EAAA,CAAAgC,UAAA,UAAAyB,OAAA,CAAAR,mBAAA,CAAAQ,OAAA,CAAAjD,MAAA,CAAAmB,WAAA,QAAAuB,WAAA,EAA6D;IAG7DlD,EAAA,CAAAI,SAAA,GAA4D;IAA5DJ,EAAA,CAAAgC,UAAA,SAAAyB,OAAA,CAAAR,mBAAA,CAAAQ,OAAA,CAAAjD,MAAA,CAAAmB,WAAA,QAAAuB,WAAA,EAA4D;IAC3DlD,EAAA,CAAAI,SAAA,GAAqE;IAArEJ,EAAA,CAAAgC,UAAA,SAAAyB,OAAA,CAAAjD,MAAA,CAAAmB,WAAA,CAAA+B,eAAA,IAAAD,OAAA,CAAA5D,mBAAA,CAAA8D,KAAA,CAAqE;;;;;IAK3E3D,EAAA,CAAAC,cAAA,eAA4E;IAAAD,EAAA,CAAAE,MAAA,GAAiD;;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IAAxDH,EAAA,CAAAI,SAAA,GAAiD;IAAjDJ,EAAA,CAAAK,iBAAA,CAAAL,EAAA,CAAAoD,WAAA,OAAAF,WAAA,CAAAU,QAAA,EAAAC,OAAA,CAAAC,qBAAA,EAAiD;;;;;;;;;;;IAF9H9D,EAAA,CAAAC,cAAA,cAAyK;IACnKD,EAAA,CAAAkB,SAAA,eAA0F;;;IAC/FlB,EAAA,CAAAmB,UAAA,IAAA4C,iEAAA,mBAAoI;IACrI/D,EAAA,CAAAG,YAAA,EAAM;;;;;IAHgCH,EAAA,CAAAgC,UAAA,YAAAhC,EAAA,CAAAgE,eAAA,IAAAC,GAAA,EAAAf,WAAA,CAAAgB,MAAA,IAAAC,OAAA,CAAAC,MAAA,EAAAlB,WAAA,CAAAgB,MAAA,IAAAC,OAAA,CAAAC,MAAA,EAAkI;IAC5JpE,EAAA,CAAAI,SAAA,GAA4E;IAA5EJ,EAAA,CAAAgC,UAAA,cAAAhC,EAAA,CAAAoD,WAAA,OAAApD,EAAA,CAAAoD,WAAA,OAAAF,WAAA,CAAAmB,OAAA,EAAAF,OAAA,CAAAG,aAAA,GAAAH,OAAA,CAAAI,aAAA,GAAAvE,EAAA,CAAAwE,cAAA,CAA4E;IAChFxE,EAAA,CAAAI,SAAA,GAAyC;IAAzCJ,EAAA,CAAAgC,UAAA,SAAAmC,OAAA,CAAAM,eAAA,IAAAvB,WAAA,CAAAU,QAAA,CAAyC;;;;;IAMhD5D,EAAA,CAAAC,cAAA,eAA4E;IAAAD,EAAA,CAAAE,MAAA,GAAiD;;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IAAxDH,EAAA,CAAAI,SAAA,GAAiD;IAAjDJ,EAAA,CAAAK,iBAAA,CAAAL,EAAA,CAAAoD,WAAA,OAAAF,WAAA,CAAAU,QAAA,EAAAc,OAAA,CAAAZ,qBAAA,EAAiD;;;;;IAJ1H9D,EAAA,CAAAC,cAAA,cAA0K;IAExKD,EAAA,CAAAkB,SAAA,cAAuD;IAE5DlB,EAAA,CAAAmB,UAAA,IAAAwD,iEAAA,mBAAoI;IACrI3E,EAAA,CAAAG,YAAA,EAAM;;;;;IALqCH,EAAA,CAAAgC,UAAA,YAAAhC,EAAA,CAAAgE,eAAA,IAAAC,GAAA,EAAAf,WAAA,CAAAgB,MAAA,IAAAU,OAAA,CAAAR,MAAA,EAAAlB,WAAA,CAAAgB,MAAA,IAAAU,OAAA,CAAAR,MAAA,EAAkI;IAElKpE,EAAA,CAAAI,SAAA,GAAyB;IAAzBJ,EAAA,CAAAyB,qBAAA,QAAAyB,WAAA,CAAAmB,OAAA,EAAArE,EAAA,CAAAmD,aAAA,CAAyB;IAE5BnD,EAAA,CAAAI,SAAA,GAAyC;IAAzCJ,EAAA,CAAAgC,UAAA,SAAA4C,OAAA,CAAAH,eAAA,IAAAvB,WAAA,CAAAU,QAAA,CAAyC;;;;;IAQ/C5D,EAAA,CAAAC,cAAA,eAAiE;IAAAD,EAAA,CAAAE,MAAA,GAAiC;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;IAAxCH,EAAA,CAAAI,SAAA,GAAiC;IAAjCJ,EAAA,CAAA6B,kBAAA,KAAAqB,WAAA,CAAA2B,eAAA,WAAiC;;;;;;;;;;;;IANpG7E,EAAA,CAAAC,cAAA,cAAyH;IAEvHD,EAAA,CAAAkB,SAAA,YAA8B;IAC/BlB,EAAA,CAAAG,YAAA,EAAM;IACNH,EAAA,CAAAC,cAAA,YAA0J;IAAtDD,EAAA,CAAAU,UAAA,mBAAAoE,8EAAA;MAAA9E,EAAA,CAAAY,aAAA,CAAAmE,IAAA;MAAA,MAAA7B,WAAA,GAAAlD,EAAA,CAAAe,aAAA,GAAAiE,SAAA;MAAA,MAAAC,OAAA,GAAAjF,EAAA,CAAAe,aAAA;MAAA,OAASf,EAAA,CAAAgB,WAAA,CAAAiE,OAAA,CAAAC,kBAAA,EAAAhC,WAAA,EAAkC;IAAA,EAAC;IAC/IlD,EAAA,CAAAC,cAAA,eAAgE;IAAAD,EAAA,CAAAE,MAAA,GAAmB;IAAAF,EAAA,CAAAG,YAAA,EAAO;IAC1FH,EAAA,CAAAmB,UAAA,IAAAgE,iEAAA,mBAAyG;IAC1GnF,EAAA,CAAAG,YAAA,EAAI;;;;;IAPiCH,EAAA,CAAAgC,UAAA,YAAAhC,EAAA,CAAAoF,eAAA,IAAAC,GAAA,EAAAnC,WAAA,CAAAgB,MAAA,IAAAoB,OAAA,CAAAlB,MAAA,EAAkF;IAI/FpE,EAAA,CAAAI,SAAA,GAAiC;IAAjCJ,EAAA,CAAAuF,WAAA,SAAArC,WAAA,CAAAsC,WAAA,EAAAxF,EAAA,CAAAmD,aAAA,CAAiC;IACvBnD,EAAA,CAAAI,SAAA,GAA8B;IAA9BJ,EAAA,CAAAuF,WAAA,UAAArC,WAAA,CAAAmB,OAAA,CAA8B;IAACrE,EAAA,CAAAI,SAAA,GAAmB;IAAnBJ,EAAA,CAAAK,iBAAA,CAAA6C,WAAA,CAAAmB,OAAA,CAAmB;IAC5ErE,EAAA,CAAAI,SAAA,GAA6B;IAA7BJ,EAAA,CAAAgC,UAAA,SAAAkB,WAAA,CAAA2B,eAAA,CAA6B;;;;;;;;;;;IAzBxC7E,EAAA,CAAAC,cAAA,cAAwJ;IACvJD,EAAA,CAAAmB,UAAA,IAAAsE,mEAAA,0BAMe;IACfzF,EAAA,CAAAS,uBAAA,OAAwC;IACvCT,EAAA,CAAAmB,UAAA,IAAAuE,0DAAA,mBAGM;IACF1F,EAAA,CAAAmB,UAAA,IAAAwE,0DAAA,kBAKE;IACN3F,EAAA,CAAAmB,UAAA,IAAAyE,0DAAA,kBAQM;IACP5F,EAAA,CAAAwB,qBAAA,EAAe;IAChBxB,EAAA,CAAAG,YAAA,EAAM;;;;;;IA7BsDH,EAAA,CAAAgC,UAAA,YAAAhC,EAAA,CAAAoF,eAAA,IAAAS,GAAA,EAAA3C,WAAA,CAAAgB,MAAA,IAAA4B,OAAA,CAAA1B,MAAA,EAA2F;IACvIpE,EAAA,CAAAI,SAAA,GAAyC;IAAzCJ,EAAA,CAAAgC,UAAA,SAAA8D,OAAA,CAAAC,eAAA,CAAAD,OAAA,CAAAtF,MAAA,EAAA0C,WAAA,EAAA8C,KAAA,EAAyC;IAO1ChG,EAAA,CAAAI,SAAA,GAAyB;IAAzBJ,EAAA,CAAAgC,UAAA,aAAAkB,WAAA,CAAA+C,IAAA,CAAyB;IAChCjG,EAAA,CAAAI,SAAA,GAA8B;IAA9BJ,EAAA,CAAAgC,UAAA,iBAAA8D,OAAA,CAAApG,WAAA,CAAAwG,IAAA,CAA8B;IAI1BlG,EAAA,CAAAI,SAAA,GAA+B;IAA/BJ,EAAA,CAAAgC,UAAA,iBAAA8D,OAAA,CAAApG,WAAA,CAAAyG,KAAA,CAA+B;IAMnCnG,EAAA,CAAAI,SAAA,GAA8B;IAA9BJ,EAAA,CAAAgC,UAAA,iBAAA8D,OAAA,CAAApG,WAAA,CAAA0G,IAAA,CAA8B;;;;;;IA0BrCpG,EAAA,CAAAC,cAAA,YAAmG;IAA1CD,EAAA,CAAAU,UAAA,mBAAA2F,qFAAA;MAAArG,EAAA,CAAAY,aAAA,CAAA0F,IAAA;MAAA,MAAAC,OAAA,GAAAvG,EAAA,CAAAe,aAAA;MAAA,OAASf,EAAA,CAAAgB,WAAA,CAAAuF,OAAA,CAAAC,uBAAA,CAAAD,OAAA,CAAA/F,MAAA,CAA+B;IAAA,EAAC;IACjGR,EAAA,CAAAkB,SAAA,YAA2B;IAC5BlB,EAAA,CAAAG,YAAA,EAAI;;;;;IAOJH,EAAA,CAAAkB,SAAA,cAA0D;;;;;;IAV3DlB,EAAA,CAAAS,uBAAA,GAAwC;IACvCT,EAAA,CAAAmB,UAAA,IAAAsF,iEAAA,gBAEI;IACJzG,EAAA,CAAAC,cAAA,oBAKmC;IAAlCD,EAAA,CAAAU,UAAA,oBAAAgG,sFAAA;MAAA1G,EAAA,CAAAY,aAAA,CAAA+F,IAAA;MAAA,MAAAC,OAAA,GAAA5G,EAAA,CAAAe,aAAA;MAAA,OAAUf,EAAA,CAAAgB,WAAA,CAAA4F,OAAA,CAAAC,YAAA,CAAAD,OAAA,CAAApG,MAAA,CAAoB;IAAA,EAAC;IALhCR,EAAA,CAAAG,YAAA,EAKmC;IACnCH,EAAA,CAAAmB,UAAA,IAAA2F,mEAAA,kBAA0D;IAC3D9G,EAAA,CAAAwB,qBAAA,EAAe;;;;IAVVxB,EAAA,CAAAI,SAAA,GAA8B;IAA9BJ,EAAA,CAAAgC,UAAA,UAAA+E,OAAA,CAAAC,eAAA,CAAAD,OAAA,CAAAvG,MAAA,EAA8B;IAOjCR,EAAA,CAAAI,SAAA,GAAiD;IAAjDJ,EAAA,CAAAuF,WAAA,OAAAwB,OAAA,CAAAE,6BAAA,CAAAF,OAAA,CAAAvG,MAAA,EAAiD;IAE5CR,EAAA,CAAAI,SAAA,GAA6B;IAA7BJ,EAAA,CAAAgC,UAAA,SAAA+E,OAAA,CAAAC,eAAA,CAAAD,OAAA,CAAAvG,MAAA,EAA6B;;;;;;;;;;;;IA1EtCR,EAAA,CAAAS,uBAAA,GAAoD;IACnDT,EAAA,CAAAC,cAAA,aAAgD;IACGD,EAAA,CAAAU,UAAA,mBAAAwG,mEAAA;MAAAlH,EAAA,CAAAY,aAAA,CAAAuG,IAAA;MAAA,MAAAC,OAAA,GAAApH,EAAA,CAAAe,aAAA;MAAA,OAASf,EAAA,CAAAgB,WAAA,CAAAoG,OAAA,CAAAnG,mBAAA,CAAAmG,OAAA,CAAA5G,MAAA,CAA2B;IAAA,EAAC;IACtFR,EAAA,CAAAC,cAAA,gBAAmD;IAClDD,EAAA,CAAAE,MAAA,GACD;IAAAF,EAAA,CAAAG,YAAA,EAAS;IACTH,EAAA,CAAAkB,SAAA,cAAia;IACjalB,EAAA,CAAAmB,UAAA,IAAAkG,oDAAA,kBAAgL;IACjLrH,EAAA,CAAAG,YAAA,EAAM;IACNH,EAAA,CAAAC,cAAA,WAA+F;IAA9BD,EAAA,CAAAU,UAAA,mBAAA4G,iEAAA;MAAAtH,EAAA,CAAAY,aAAA,CAAAuG,IAAA;MAAA,MAAAI,OAAA,GAAAvH,EAAA,CAAAe,aAAA;MAAA,OAASf,EAAA,CAAAgB,WAAA,CAAAuG,OAAA,CAAAhG,iBAAA,EAAmB;IAAA,EAAC;IAACvB,EAAA,CAAAE,MAAA,QAAC;IAAAF,EAAA,CAAAG,YAAA,EAAI;IACpGH,EAAA,CAAAC,cAAA,yBAAkK;IAAhED,EAAA,CAAAU,UAAA,uCAAA8G,mGAAAC,MAAA;MAAAzH,EAAA,CAAAY,aAAA,CAAAuG,IAAA;MAAA,MAAAO,OAAA,GAAA1H,EAAA,CAAAe,aAAA;MAAA,OAA6Bf,EAAA,CAAAgB,WAAA,CAAA0G,OAAA,CAAAC,yBAAA,CAAAF,MAAA,CAAiC;IAAA,EAAC;IAACzH,EAAA,CAAAG,YAAA,EAAkB;IAErLH,EAAA,CAAAC,cAAA,kBAA+D;IAC9DD,EAAA,CAAAmB,UAAA,KAAAyG,oDAAA,kBAEM;IACN5H,EAAA,CAAAmB,UAAA,KAAA0G,oDAAA,kBAEM;IAEN7H,EAAA,CAAAmB,UAAA,KAAA2G,oDAAA,kBA6BM;IACP9H,EAAA,CAAAG,YAAA,EAAM;IAENH,EAAA,CAAAC,cAAA,eAAqE;IAInED,EAAA,CAAAU,UAAA,2BAAAqH,8EAAAN,MAAA;MAAAzH,EAAA,CAAAY,aAAA,CAAAuG,IAAA;MAAA,MAAAa,OAAA,GAAAhI,EAAA,CAAAe,aAAA;MAAA,OAAiBf,EAAA,CAAAgB,WAAA,CAAAgH,OAAA,CAAAxH,MAAA,CAAAyH,UAAA,GAAAR,MAAA,CAAwB;IAAA,EAAC,qBAAAS,wEAAAT,MAAA;MAAAzH,EAAA,CAAAY,aAAA,CAAAuG,IAAA;MAAA,MAAAgB,OAAA,GAAAnI,EAAA,CAAAe,aAAA;MAAA,OAG/Bf,EAAA,CAAAgB,WAAA,CAAAmH,OAAA,CAAAC,gBAAA,CAAAX,MAAA,EAAAU,OAAA,CAAA3H,MAAA,CAAgC;IAAA,EAHD,kBAAA6H,qEAAA;MAAArI,EAAA,CAAAY,aAAA,CAAAuG,IAAA;MAAA,MAAAmB,OAAA,GAAAtI,EAAA,CAAAe,aAAA;MAAA,OAIlCf,EAAA,CAAAgB,WAAA,CAAAsH,OAAA,CAAAC,iBAAA,CAAAD,OAAA,CAAA9H,MAAA,CAAyB;IAAA,EAJS,mBAAAgI,sEAAA;MAAAxI,EAAA,CAAAY,aAAA,CAAAuG,IAAA;MAAA,MAAAsB,OAAA,GAAAzI,EAAA,CAAAe,aAAA;MAAA,OAKjCf,EAAA,CAAAgB,WAAA,CAAAyH,OAAA,CAAAF,iBAAA,CAAAE,OAAA,CAAAjI,MAAA,CAAyB;IAAA,EALQ;;IAH3CR,EAAA,CAAAG,YAAA,EAQsC;IAGtCH,EAAA,CAAAmB,UAAA,KAAAuH,6DAAA,0BAWe;IAChB1I,EAAA,CAAAG,YAAA,EAAM;IACPH,EAAA,CAAAwB,qBAAA,EAAe;;;;IA1EJxB,EAAA,CAAAI,SAAA,GAA0C;IAA1CJ,EAAA,CAAAyB,qBAAA,UAAAkH,MAAA,CAAAnI,MAAA,CAAAmB,WAAA,CAAAC,WAAA,CAA0C;IACjD5B,EAAA,CAAAI,SAAA,GACD;IADCJ,EAAA,CAAA6B,kBAAA,MAAA8G,MAAA,CAAAnI,MAAA,CAAAmB,WAAA,CAAAC,WAAA,MACD;IACqU5B,EAAA,CAAAI,SAAA,GAAoF;IAApFJ,EAAA,CAAAyB,qBAAA,UAAAkH,MAAA,CAAA5I,+BAAA,CAAA4I,MAAA,CAAAnI,MAAA,CAAAmB,WAAA,CAAAG,MAAA,EAAA6G,MAAA,CAAA5G,YAAA,EAAoF;IAAnZ/B,EAAA,CAAAgC,UAAA,YAAAhC,EAAA,CAAAiC,eAAA,KAAAC,GAAA,EAAAyG,MAAA,CAAAnI,MAAA,CAAAmB,WAAA,CAAAG,MAAA,IAAA6G,MAAA,CAAAhJ,qBAAA,CAAAwC,MAAA,EAAAwG,MAAA,CAAAnI,MAAA,CAAAmB,WAAA,CAAAG,MAAA,IAAA6G,MAAA,CAAAhJ,qBAAA,CAAAyC,IAAA,EAAAuG,MAAA,CAAAnI,MAAA,CAAAmB,WAAA,CAAAG,MAAA,IAAA6G,MAAA,CAAAhJ,qBAAA,CAAA0C,IAAA,EAAAsG,MAAA,CAAAnI,MAAA,CAAAmB,WAAA,CAAAG,MAAA,IAAA6G,MAAA,CAAAhJ,qBAAA,CAAA2C,OAAA,EAA8T;IAC7TtC,EAAA,CAAAI,SAAA,GAA4C;IAA5CJ,EAAA,CAAAgC,UAAA,SAAA2G,MAAA,CAAApI,mBAAA,CAAAoI,MAAA,CAAAnI,MAAA,EAAA+B,MAAA,KAA4C;IAGnCvC,EAAA,CAAAI,SAAA,GAAuC;IAAvCJ,EAAA,CAAAgC,UAAA,wCAAuC,YAAA2G,MAAA,CAAAC,oBAAA,CAAAD,MAAA,CAAAnI,MAAA;IAGlDR,EAAA,CAAAI,SAAA,GAA6B;IAA7BJ,EAAA,CAAAgC,UAAA,SAAA2G,MAAA,CAAAnI,MAAA,CAAAqI,gBAAA,CAA6B;IAG7B7I,EAAA,CAAAI,SAAA,GAA2E;IAA3EJ,EAAA,CAAAgC,UAAA,SAAA2G,MAAA,CAAAG,eAAA,IAAAH,MAAA,CAAAnI,MAAA,CAAAuI,eAAA,KAAAJ,MAAA,CAAAnI,MAAA,CAAAqI,gBAAA,CAA2E;IAIxD7I,EAAA,CAAAI,SAAA,GAAoB;IAApBJ,EAAA,CAAAgC,UAAA,YAAA2G,MAAA,CAAAnI,MAAA,CAAAwI,QAAA,CAAoB;IAmC5ChJ,EAAA,CAAAI,SAAA,GAAqD;IAArDJ,EAAA,CAAAgC,UAAA,YAAAhC,EAAA,CAAAoD,WAAA,SAAAuF,MAAA,CAAAnI,MAAA,CAAAyH,UAAA,EAAAU,MAAA,CAAArE,aAAA,EAAqD,gBAAAqE,MAAA,CAAA5G,YAAA,CAAAkH,kBAAA,aAAAjJ,EAAA,CAAAoF,eAAA,KAAA8D,GAAA,EAAAP,MAAA,CAAAQ,iBAAA;IASvCnJ,EAAA,CAAAI,SAAA,GAAuB;IAAvBJ,EAAA,CAAAgC,UAAA,SAAA2G,MAAA,CAAAQ,iBAAA,CAAuB;;;ADtDxC,OAAM,MAAOC,qBAAqB;EAC9BC,YAAA;IAkBO,KAAA/E,aAAa,GAAY,IAAI;IAG7B,KAAAC,aAAa,GAAY,IAAI;IAG7B,KAAAE,eAAe,GAAY,IAAI;IAG/B,KAAAX,qBAAqB,GAAW,OAAO;IAGvC,KAAAgF,eAAe,GAAY,IAAI;IAG/B,KAAAQ,kBAAkB,GAAuE,IAAI9J,YAAY,EAAE;IAG3G,KAAA+J,cAAc,GAA4B,IAAI/J,YAAY,EAAE;IAG5D,KAAAgK,aAAa,GAA0B,IAAIhK,YAAY,EAAE;IAGzD,KAAAiK,cAAc,GAAyE,IAAIjK,YAAY,EAAE;IAGzG,KAAAkK,iBAAiB,GAA8B,IAAIlK,YAAY,EAAE;IAGjE,KAAAmK,sBAAsB,GAAyB,IAAInK,YAAY,EAAE;IAMxE;IACO,KAAAoK,kBAAkB,GAAa,EAAE,CAAC,CAAC;IAE1C;IACO,KAAA/J,mBAAmB,GAAGA,mBAAmB;IACzC,KAAAF,qBAAqB,GAAGA,qBAAqB;IAC7C,KAAAD,WAAW,GAAGA,WAAW;IACzB,KAAAK,+BAA+B,GAAGA,+BAA+B;EA7DxD;EA+DhB6I,oBAAoBA,CAACiB,aAAqB;IAEtC,IAAI,IAAI,CAACC,WAAW,IAAID,aAAa,CAAClI,WAAW,CAAC+B,eAAe,IAAI7D,mBAAmB,CAACkK,IAAI,EAC7F;MACI,OAAO,CAAC;QACJC,QAAQ,EAAE,KAAK;QACfC,UAAU,EAAEJ,aAAa;QACzBK,eAAe,EAAGvI,WAA6B,IAAI;UAC/C,OAAOA,WAAW,CAAC+B,eAAe,IAAI7D,mBAAmB,CAACkK,IAAI;QAClE,CAAC;QACDI,YAAY,EAAE,YAAY,CAAC;OAC9B,CAAC;;;IAGN,OAAO,EAAE;EACb;EAEA;EACApE,eAAeA,CAACvF,MAAc,EAAE6D,OAAgB,EAAE+F,KAAa;IAE3D,IAAI/F,OAAO,CAACH,MAAM,IAAI,IAAI,CAACE,MAAM,EAAC;MAC9B,IAAIgG,KAAK,IAAI,CAAC,EAAC;QACX,OAAO,IAAI,CAAC,CAAC;OAChB,MACG;QACA;QACA,IAAI5J,MAAM,CAACwI,QAAQ,CAACoB,KAAK,GAAG,CAAC,CAAC,CAAClG,MAAM,IAAIG,OAAO,CAACH,MAAM,EAAC;UACpD,OAAO,IAAI;;;;IAKvB,OAAO,KAAK;EAChB;EAEAjB,mBAAmBA,CAACtB,WAA6B,EAAE0C,OAAgB;IAE/D,IAAI1C,WAAW,CAAC+B,eAAe,IAAI7D,mBAAmB,CAACkK,IAAI,EAC3D;MACI,OAAOpI,WAAW,CAAC0I,MAAM;KAC5B,MACI,IAAI1I,WAAW,CAAC+B,eAAe,IAAI7D,mBAAmB,CAAC8D,KAAK,EACjE;MACI,IAAI2G,KAAK,GAAG3I,WAAoB;MAChC,IAAI4I,SAAS,GAAGD,KAAK,CAACL,UAAU,CAACO,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,IAAIrG,OAAO,CAACH,MAAM,CAAC;MAEvE,OAAOoG,KAAK,CAACL,UAAU,CAACM,SAAS,IAAI,CAAC,GAAGA,SAAS,GAAG,CAAC,CAAC,CAACF,MAAM;;IAGlE,OAAO,IAAI;EACf;EAEArD,eAAeA,CAACxG,MAAc;IAE1B,MAAMmK,oBAAoB,GAAG,IAAI,CAAC1D,6BAA6B,CAACzG,MAAM,CAAC;IAEvE,OAAO,IAAI,CAACoJ,kBAAkB,CAACgB,OAAO,CAACD,oBAAoB,CAAC,GAAG,CAAC,CAAC;EACrE;EAEA;EACA1D,6BAA6BA,CAACzG,MAAc;IAExC,IAAIA,MAAM,IAAIA,MAAM,CAACmB,WAAW,EAChC;MACI,OAAO,uBAAuBnB,MAAM,CAACmB,WAAW,CAAC+I,EAAE,EAAE;;IAGzD,OAAO,qBAAqB;EAChC;EAEAnK,mBAAmBA,CAACC,MAAc;IAE9B,OAAOV,cAAc,CAACS,mBAAmB,CAACC,MAAM,EAAE,IAAI,CAAC4D,MAAM,CAAC;EAClE;EAEA;EACAyG,gBAAgBA,CAACrK,MAAc,EAAEsK,SAA0B;IAEvD,IAAI,CAACtK,MAAM,CAACuK,WAAW,EAAC;MACpBC,UAAU,CAAC,MAAK;QACZ,IAAI,IAAI,CAACC,YAAY,EAAC;UAClB,IAAIC,OAAO,GAAG,IAAI,CAACD,YAAY,CAACE,aAAa;UAC7C,IAAIC,QAAQ,GAAKN,SAAS,KAAKlL,eAAe,CAACyL,GAAG,GAAK,CAAC,GAAGH,OAAO,CAACI,YAAY;UAC/EJ,OAAO,CAACK,SAAS,GAAGH,QAAQ;;MAEpC,CAAC,CAAC;;EAEV;EAEAzD,yBAAyBA,CAAC6D,MAAmB;IACzC,IAAI,CAAC9B,iBAAiB,CAAC+B,IAAI,CAACD,MAAM,CAAC;EACvC;EAEA;EACAhF,uBAAuBA,CAAChG,MAAc;IAElC,IAAIA,MAAM,EACV;MACI,IAAI,IAAI,CAACkL,eAAe,EAAE,IAAI,CAACA,eAAe,CAACP,aAAa,CAACQ,KAAK,EAAE;;EAE5E;EAEA;EACApD,iBAAiBA,CAAC/H,MAAc;IAE5BA,MAAM,CAACoL,QAAQ,GAAG,CAACpL,MAAM,CAACoL,QAAQ;IAClC,IAAGpL,MAAM,CAACoL,QAAQ,EAAE;MAChB,MAAMC,cAAc,GAAGrL,MAAM,CAACwI,QAAQ,CACjC8C,MAAM,CAACzH,OAAO,IAAIA,OAAO,CAAC0H,QAAQ,IAAI,IAAI,KACnC1H,OAAO,CAAC2H,IAAI,IAAI,IAAI,CAAC5H,MAAM,IAAI5D,MAAM,CAACmB,WAAW,CAAC+B,eAAe,KAAK7D,mBAAmB,CAAC8D,KAAK,CAAC,CAAC;MAE7G,IAAIkI,cAAc,IAAIA,cAAc,CAACtJ,MAAM,GAAG,CAAC,EAC/C;QACI,IAAI,CAACgH,cAAc,CAACkC,IAAI,CAACI,cAAc,CAAC;;;EAGpD;EAEA3G,kBAAkBA,CAAC8D,QAAmB;IAElC,IAAI,CAACO,cAAc,CAACkC,IAAI,CAACzC,QAAQ,CAAC;EACtC;EAEApG,mBAAmBA,CAACpC,MAAc;IAC9B,IAAI,CAACmJ,sBAAsB,CAAC8B,IAAI,CAACjL,MAAM,CAAC;EAC5C;EAEA;EACAe,iBAAiBA,CAAA;IAEb,IAAI,CAAC+H,kBAAkB,CAACmC,IAAI,CAAC;MAAEQ,YAAY,EAAE,IAAI,CAACzL,MAAM;MAAE0L,kBAAkB,EAAE;IAAK,CAAE,CAAC;EAC1F;EAEA;;;;;EAKD9D,gBAAgBA,CAAC+D,KAAU,EAAE3L,MAAc;IAEvC,QAAQ2L,KAAK,CAACC,OAAO;MAEjB,KAAK,EAAE;QACH,IAAI5L,MAAM,CAACyH,UAAU,IAAIzH,MAAM,CAACyH,UAAU,CAACoE,IAAI,EAAE,IAAI,EAAE,EACvD;UACI,IAAIhI,OAAO,GAAG,IAAI5E,OAAO,EAAE;UAE3B4E,OAAO,CAACH,MAAM,GAAG,IAAI,CAACE,MAAM;UAC5BC,OAAO,CAAC2H,IAAI,GAAGxL,MAAM,CAACmB,WAAW,CAAC+I,EAAE;UACpCrG,OAAO,CAACA,OAAO,GAAG7D,MAAM,CAACyH,UAAU;UACnC5D,OAAO,CAACT,QAAQ,GAAG,IAAI0I,IAAI,EAAE;UAE7B9L,MAAM,CAACwI,QAAQ,CAACuD,IAAI,CAAClI,OAAO,CAAC;UAE7B,IAAI,CAACmF,aAAa,CAACiC,IAAI,CAACpH,OAAO,CAAC;UAEhC7D,MAAM,CAACyH,UAAU,GAAG,EAAE,CAAC,CAAC;UAExB,IAAI,CAAC4C,gBAAgB,CAACrK,MAAM,EAAEZ,eAAe,CAAC4M,MAAM,CAAC;;QAEzD;MACJ,KAAK,CAAC;QACFL,KAAK,CAACM,cAAc,EAAE;QAEtB,IAAI,CAAChD,cAAc,CAACgC,IAAI,CAAC;UAAEiB,gBAAgB,EAAElM,MAAM;UAAEmM,eAAe,EAAER,KAAK,CAACS;QAAQ,CAAE,CAAC;QAEvF;MACJ,KAAK,EAAE;QACH,IAAI,CAACtD,kBAAkB,CAACmC,IAAI,CAAC;UAAEQ,YAAY,EAAEzL,MAAM;UAAE0L,kBAAkB,EAAE;QAAI,CAAE,CAAC;QAEhF;;EAEZ;EAEC;EACAjL,mBAAmBA,CAACT,MAAc;IAE9BA,MAAM,CAACuK,WAAW,GAAG,CAACvK,MAAM,CAACuK,WAAW;IACxC,IAAI,CAACF,gBAAgB,CAACrK,MAAM,EAAEZ,eAAe,CAAC4M,MAAM,CAAC;EACzD;EAEQK,sBAAsBA,CAAClC,oBAA4B;IAEvD,MAAMmC,uBAAuB,GAAG,IAAI,CAAClD,kBAAkB,CAACgB,OAAO,CAACD,oBAAoB,CAAC;IAErF,IAAImC,uBAAuB,GAAG,CAAC,CAAC,EAAE;MAC9B,IAAI,CAAClD,kBAAkB,CAACmD,MAAM,CAACD,uBAAuB,EAAE,CAAC,CAAC;;EAElE;EAEA;EACAjG,YAAYA,CAACrG,MAAc;IACvB,MAAMmK,oBAAoB,GAAG,IAAI,CAAC1D,6BAA6B,CAACzG,MAAM,CAAC;IACvE,MAAMwM,gBAAgB,GAAG,IAAI,CAACtB,eAAe;IAE7C,IAAIsB,gBAAgB,EACpB;MACI,MAAMC,IAAI,GAASD,gBAAgB,CAAC7B,aAAa,CAAC+B,KAAK,CAAC,CAAC,CAAC;MAE1D,IAAI,CAACtD,kBAAkB,CAAC2C,IAAI,CAAC5B,oBAAoB,CAAC;MAElD,IAAI,CAACxB,iBAAiB,CAACgE,UAAU,CAACF,IAAI,EAAEzM,MAAM,CAACmB,WAAW,CAAC+I,EAAE,CAAC,CACzD0C,SAAS,CAACC,WAAW,IAAG;QACrB,IAAI,CAACR,sBAAsB,CAAClC,oBAAoB,CAAC;QAEjD0C,WAAW,CAACnJ,MAAM,GAAG,IAAI,CAACE,MAAM;QAEhC;QACA5D,MAAM,CAACwI,QAAQ,CAACuD,IAAI,CAACc,WAAW,CAAC;QAEjC,IAAI,CAAC7D,aAAa,CAACiC,IAAI,CAAC4B,WAAW,CAAC;QAEpC,IAAI,CAACxC,gBAAgB,CAACrK,MAAM,EAAEZ,eAAe,CAAC4M,MAAM,CAAC;QAErD;QACAQ,gBAAgB,CAAC7B,aAAa,CAACmC,KAAK,GAAG,EAAE;MAC7C,CAAC,EAAGC,KAAK,IAAI;QACT,IAAI,CAACV,sBAAsB,CAAClC,oBAAoB,CAAC;QAEjD;QACAqC,gBAAgB,CAAC7B,aAAa,CAACmC,KAAK,GAAG,EAAE;QAEzC;MACJ,CAAC,CAAC;;EAEd;;SAjSSlE,qBAAqB;;mBAArBA,MAAqB;AAAA;;QAArBA,MAAqB;EAAAoE,SAAA;EAAAC,SAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCtBlC3N,EAAA,CAAAmB,UAAA,IAAA0M,6CAAA,2BAWe;MACf7N,EAAA,CAAAmB,UAAA,IAAA2M,6CAAA,4BA6Ee;;;MAzFA9N,EAAA,CAAAgC,UAAA,SAAA4L,GAAA,CAAApN,MAAA,IAAAoN,GAAA,CAAApN,MAAA,CAAAuK,WAAA,CAAkC;MAYlC/K,EAAA,CAAAI,SAAA,GAAmC;MAAnCJ,EAAA,CAAAgC,UAAA,SAAA4L,GAAA,CAAApN,MAAA,KAAAoN,GAAA,CAAApN,MAAA,CAAAuK,WAAA,CAAmC"},"metadata":{},"sourceType":"module","externalDependencies":[]}