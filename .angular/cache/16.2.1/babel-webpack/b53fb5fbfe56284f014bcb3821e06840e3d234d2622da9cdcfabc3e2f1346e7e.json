{"ast":null,"code":"import _asyncToGenerator from \"D:/VS Project/ng-chat/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { EventEmitter } from '@angular/core';\nimport { MessageType } from \"./core/message-type.enum\";\nimport { Window } from \"./core/window\";\nimport { ChatParticipantStatus } from \"./core/chat-participant-status.enum\";\nimport { ScrollDirection } from \"./core/scroll-direction.enum\";\nimport { PagedHistoryChatAdapter } from './core/paged-history-chat-adapter';\nimport { DefaultFileUploadAdapter } from './core/default-file-upload-adapter';\nimport { Theme } from './core/theme.enum';\nimport { Group } from \"./core/group\";\nimport { ChatParticipantType } from \"./core/chat-participant-type.enum\";\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"./components/ng-chat-friends-list/ng-chat-friends-list.component\";\nimport * as i4 from \"./components/ng-chat-window/ng-chat-window.component\";\nimport * as i5 from \"./pipes/sanitize.pipe\";\nconst _c0 = [\"chatWindow\"];\nfunction NgChat_link_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"link\", 2);\n    i0.ɵɵpipe(1, \"sanitize\");\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"href\", i0.ɵɵpipeBind1(1, 1, ctx_r0.customTheme), i0.ɵɵsanitizeResourceUrl);\n  }\n}\nconst _c1 = function (a2) {\n  return {\n    \"ng-chat-window\": true,\n    \"primary-outline-color\": true,\n    \"ng-chat-window-collapsed\": a2\n  };\n};\nconst _c2 = function (a0) {\n  return {\n    \"right\": a0\n  };\n};\nfunction NgChat_div_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"ng-chat-window\", 7, 8);\n    i0.ɵɵlistener(\"onMessagesSeen\", function NgChat_div_1_div_2_Template_ng_chat_window_onMessagesSeen_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.onWindowMessagesSeen($event));\n    })(\"onMessageSent\", function NgChat_div_1_div_2_Template_ng_chat_window_onMessageSent_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.onWindowMessageSent($event));\n    })(\"onTabTriggered\", function NgChat_div_1_div_2_Template_ng_chat_window_onTabTriggered_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.onWindowTabTriggered($event));\n    })(\"onChatWindowClosed\", function NgChat_div_1_div_2_Template_ng_chat_window_onChatWindowClosed_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.onWindowChatClosed($event));\n    })(\"onOptionTriggered\", function NgChat_div_1_div_2_Template_ng_chat_window_onOptionTriggered_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.onWindowOptionTriggered($event));\n    })(\"onLoadHistoryTriggered\", function NgChat_div_1_div_2_Template_ng_chat_window_onLoadHistoryTriggered_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.fetchMessageHistory($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const window_r3 = ctx.$implicit;\n    const i_r4 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c1, window_r3.isCollapsed))(\"ngStyle\", i0.ɵɵpureFunction1(14, _c2, (!ctx_r2.hideFriendsList ? ctx_r2.friendsListWidth : 0) + 20 + ctx_r2.windowSizeFactor * i_r4 + \"px\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"fileUploadAdapter\", ctx_r2.fileUploadAdapter)(\"localization\", ctx_r2.localization)(\"userId\", ctx_r2.userId)(\"window\", window_r3)(\"showOptions\", ctx_r2.groupAdapter)(\"emojisEnabled\", ctx_r2.emojisEnabled)(\"linkfyEnabled\", ctx_r2.linkfyEnabled)(\"showMessageDate\", ctx_r2.showMessageDate)(\"messageDatePipeFormat\", ctx_r2.messageDatePipeFormat)(\"hasPagedHistory\", ctx_r2.hasPagedHistory);\n  }\n}\nfunction NgChat_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"ng-chat-friends-list\", 4);\n    i0.ɵɵlistener(\"onParticipantClicked\", function NgChat_div_1_Template_ng_chat_friends_list_onParticipantClicked_1_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.onParticipantClickedFromFriendsList($event));\n    })(\"onOptionPromptCanceled\", function NgChat_div_1_Template_ng_chat_friends_list_onOptionPromptCanceled_1_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.onOptionPromptCanceled());\n    })(\"onOptionPromptConfirmed\", function NgChat_div_1_Template_ng_chat_friends_list_onOptionPromptConfirmed_1_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.onOptionPromptConfirmed($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, NgChat_div_1_div_2_Template, 3, 16, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.theme);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"localization\", ctx_r1.localization)(\"shouldDisplay\", !ctx_r1.hideFriendsList)(\"userId\", ctx_r1.userId)(\"isCollapsed\", ctx_r1.isCollapsed)(\"searchEnabled\", ctx_r1.searchEnabled)(\"participants\", ctx_r1.participants)(\"participantsResponse\", ctx_r1.participantsResponse)(\"participantsInteractedWith\", ctx_r1.participantsInteractedWith)(\"windows\", ctx_r1.windows)(\"currentActiveOption\", ctx_r1.currentActiveOption);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.windows);\n  }\n}\nexport class NgChat {\n  constructor(_httpClient) {\n    this._httpClient = _httpClient;\n    // Exposes enums for the ng-template\n    this.ChatParticipantType = ChatParticipantType;\n    this.ChatParticipantStatus = ChatParticipantStatus;\n    this.MessageType = MessageType;\n    this._isDisabled = false;\n    this.isCollapsed = false;\n    this.maximizeWindowOnNewMessage = true;\n    this.pollFriendsList = false;\n    this.pollingInterval = 5000;\n    this.historyEnabled = true;\n    this.emojisEnabled = true;\n    this.linkfyEnabled = true;\n    this.audioEnabled = true;\n    this.searchEnabled = true;\n    this.audioSource = 'https://raw.githubusercontent.com/rpaschoal/ng-chat/master/src/ng-chat/assets/notification.wav';\n    this.persistWindowsState = true;\n    this.title = \"Friends\";\n    this.messagePlaceholder = \"Type a message\";\n    this.searchPlaceholder = \"Search\";\n    this.browserNotificationsEnabled = true;\n    this.browserNotificationIconSource = 'https://raw.githubusercontent.com/rpaschoal/ng-chat/master/src/ng-chat/assets/notification.png';\n    this.browserNotificationTitle = \"New message from\";\n    this.historyPageSize = 10;\n    this.hideFriendsList = false;\n    this.hideFriendsListOnUnsupportedViewport = true;\n    this.theme = Theme.Light;\n    this.messageDatePipeFormat = \"short\";\n    this.showMessageDate = true;\n    this.isViewportOnMobileEnabled = false;\n    this.onParticipantClicked = new EventEmitter();\n    this.onParticipantChatOpened = new EventEmitter();\n    this.onParticipantChatClosed = new EventEmitter();\n    this.onMessagesSeen = new EventEmitter();\n    this.browserNotificationsBootstrapped = false;\n    this.hasPagedHistory = false;\n    // Don't want to add this as a setting to simplify usage. Previous placeholder and title settings available to be used, or use full Localization object.\n    this.statusDescription = {\n      online: 'Online',\n      busy: 'Busy',\n      away: 'Away',\n      offline: 'Offline'\n    };\n    this.participantsInteractedWith = [];\n    // Defines the size of each opened window to calculate how many windows can be opened on the viewport at the same time.\n    this.windowSizeFactor = 320;\n    // Total width size of the friends list section\n    this.friendsListWidth = 262;\n    // Set to true if there is no space to display at least one chat window and 'hideFriendsListOnUnsupportedViewport' is true\n    this.unsupportedViewport = false;\n    this.windows = [];\n    this.isBootstrapped = false;\n  }\n  get isDisabled() {\n    return this._isDisabled;\n  }\n  set isDisabled(value) {\n    this._isDisabled = value;\n    if (value) {\n      // To address issue https://github.com/rpaschoal/ng-chat/issues/120\n      window.clearInterval(this.pollingIntervalWindowInstance);\n    } else {\n      this.activateFriendListFetch();\n    }\n  }\n  get localStorageKey() {\n    return `ng-chat-users-${this.userId}`; // Appending the user id so the state is unique per user in a computer.\n  }\n\n  ngOnInit() {\n    this.bootstrapChat();\n  }\n  onResize(event) {\n    this.viewPortTotalArea = event.target.innerWidth;\n    this.NormalizeWindows();\n  }\n  // Checks if there are more opened windows than the view port can display\n  NormalizeWindows() {\n    const maxSupportedOpenedWindows = Math.floor((this.viewPortTotalArea - (!this.hideFriendsList ? this.friendsListWidth : 0)) / this.windowSizeFactor);\n    const difference = this.windows.length - maxSupportedOpenedWindows;\n    if (difference >= 0) {\n      this.windows.splice(this.windows.length - difference);\n    }\n    this.updateWindowsState(this.windows);\n    // Viewport should have space for at least one chat window but should show in mobile if option is enabled.\n    this.unsupportedViewport = this.isViewportOnMobileEnabled ? false : this.hideFriendsListOnUnsupportedViewport && maxSupportedOpenedWindows < 1;\n  }\n  // Initializes the chat plugin and the messaging adapter\n  bootstrapChat() {\n    let initializationException = null;\n    if (this.adapter != null && this.userId != null) {\n      try {\n        this.viewPortTotalArea = window.innerWidth;\n        this.initializeTheme();\n        this.initializeDefaultText();\n        this.initializeBrowserNotifications();\n        // Binding event listeners\n        this.adapter.messageReceivedHandler = (participant, msg) => this.onMessageReceived(participant, msg);\n        this.adapter.friendsListChangedHandler = participantsResponse => this.onFriendsListChanged(participantsResponse);\n        this.activateFriendListFetch();\n        this.bufferAudioFile();\n        this.hasPagedHistory = this.adapter instanceof PagedHistoryChatAdapter;\n        if (this.fileUploadUrl && this.fileUploadUrl !== \"\") {\n          this.fileUploadAdapter = new DefaultFileUploadAdapter(this.fileUploadUrl, this._httpClient);\n        }\n        this.NormalizeWindows();\n        this.isBootstrapped = true;\n      } catch (ex) {\n        initializationException = ex;\n      }\n    }\n    if (!this.isBootstrapped) {\n      console.error(\"ng-chat component couldn't be bootstrapped.\");\n      if (this.userId == null) {\n        console.error(\"ng-chat can't be initialized without an user id. Please make sure you've provided an userId as a parameter of the ng-chat component.\");\n      }\n      if (this.adapter == null) {\n        console.error(\"ng-chat can't be bootstrapped without a ChatAdapter. Please make sure you've provided a ChatAdapter implementation as a parameter of the ng-chat component.\");\n      }\n      if (initializationException) {\n        console.error(`An exception has occurred while initializing ng-chat. Details: ${initializationException.message}`);\n        console.error(initializationException);\n      }\n    }\n  }\n  activateFriendListFetch() {\n    if (this.adapter) {\n      // Loading current users list\n      if (this.pollFriendsList) {\n        // Setting a long poll interval to update the friends list\n        this.fetchFriendsList(true);\n        this.pollingIntervalWindowInstance = window.setInterval(() => this.fetchFriendsList(false), this.pollingInterval);\n      } else {\n        // Since polling was disabled, a friends list update mechanism will have to be implemented in the ChatAdapter.\n        this.fetchFriendsList(true);\n      }\n    }\n  }\n  // Initializes browser notifications\n  initializeBrowserNotifications() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.browserNotificationsEnabled && \"Notification\" in window) {\n        if ((yield Notification.requestPermission()) === \"granted\") {\n          _this.browserNotificationsBootstrapped = true;\n        }\n      }\n    })();\n  }\n  // Initializes default text\n  initializeDefaultText() {\n    if (!this.localization) {\n      this.localization = {\n        messagePlaceholder: this.messagePlaceholder,\n        searchPlaceholder: this.searchPlaceholder,\n        title: this.title,\n        statusDescription: this.statusDescription,\n        browserNotificationTitle: this.browserNotificationTitle,\n        loadMessageHistoryPlaceholder: \"Load older messages\"\n      };\n    }\n  }\n  initializeTheme() {\n    if (this.customTheme) {\n      this.theme = Theme.Custom;\n    } else if (this.theme != Theme.Light && this.theme != Theme.Dark) {\n      // TODO: Use es2017 in future with Object.values(Theme).includes(this.theme) to do this check\n      throw new Error(`Invalid theme configuration for ng-chat. \"${this.theme}\" is not a valid theme value.`);\n    }\n  }\n  // Sends a request to load the friends list\n  fetchFriendsList(isBootstrapping) {\n    this.adapter.listFriends().pipe(map(participantsResponse => {\n      this.participantsResponse = participantsResponse;\n      this.participants = participantsResponse.map(response => {\n        return response.participant;\n      });\n    })).subscribe(() => {\n      if (isBootstrapping) {\n        this.restoreWindowsState();\n      }\n    });\n  }\n  fetchMessageHistory(window) {\n    // Not ideal but will keep this until we decide if we are shipping pagination with the default adapter\n    if (this.adapter instanceof PagedHistoryChatAdapter) {\n      window.isLoadingHistory = true;\n      this.adapter.getMessageHistoryByPage(window.participant.id, this.historyPageSize, ++window.historyPage).pipe(map(result => {\n        result.forEach(message => this.assertMessageType(message));\n        window.messages = result.concat(window.messages);\n        window.isLoadingHistory = false;\n        const direction = window.historyPage == 1 ? ScrollDirection.Bottom : ScrollDirection.Top;\n        window.hasMoreMessages = result.length == this.historyPageSize;\n        setTimeout(() => this.onFetchMessageHistoryLoaded(result, window, direction, true));\n      })).subscribe();\n    } else {\n      this.adapter.getMessageHistory(window.participant.id).pipe(map(result => {\n        result.forEach(message => this.assertMessageType(message));\n        window.messages = result.concat(window.messages);\n        window.isLoadingHistory = false;\n        setTimeout(() => this.onFetchMessageHistoryLoaded(result, window, ScrollDirection.Bottom));\n      })).subscribe();\n    }\n  }\n  onFetchMessageHistoryLoaded(messages, window, direction, forceMarkMessagesAsSeen = false) {\n    this.scrollChatWindow(window, direction);\n    if (window.hasFocus || forceMarkMessagesAsSeen) {\n      const unseenMessages = messages.filter(m => !m.dateSeen);\n      this.markMessagesAsRead(unseenMessages);\n    }\n  }\n  // Updates the friends list via the event handler\n  onFriendsListChanged(participantsResponse) {\n    if (participantsResponse) {\n      this.participantsResponse = participantsResponse;\n      this.participants = participantsResponse.map(response => {\n        return response.participant;\n      });\n      this.participantsInteractedWith = [];\n    }\n  }\n  // Handles received messages by the adapter\n  onMessageReceived(participant, message) {\n    if (participant && message) {\n      const chatWindow = this.openChatWindow(participant);\n      this.assertMessageType(message);\n      if (!chatWindow[1] || !this.historyEnabled) {\n        chatWindow[0].messages.push(message);\n        this.scrollChatWindow(chatWindow[0], ScrollDirection.Bottom);\n        if (chatWindow[0].hasFocus) {\n          this.markMessagesAsRead([message]);\n        }\n      }\n      this.emitMessageSound(chatWindow[0]);\n      // Github issue #58\n      // Do not push browser notifications with message content for privacy purposes if the 'maximizeWindowOnNewMessage' setting is off and this is a new chat window.\n      if (this.maximizeWindowOnNewMessage || !chatWindow[1] && !chatWindow[0].isCollapsed) {\n        // Some messages are not pushed because they are loaded by fetching the history hence why we supply the message here\n        this.emitBrowserNotification(chatWindow[0], message);\n      }\n    }\n  }\n  onParticipantClickedFromFriendsList(participant) {\n    this.openChatWindow(participant, true, true);\n  }\n  cancelOptionPrompt() {\n    if (this.currentActiveOption) {\n      this.currentActiveOption.isActive = false;\n      this.currentActiveOption = null;\n    }\n  }\n  onOptionPromptCanceled() {\n    this.cancelOptionPrompt();\n  }\n  onOptionPromptConfirmed(event) {\n    // For now this is fine as there is only one option available. Introduce option types and type checking if a new option is added.\n    this.confirmNewGroup(event);\n    // Canceling current state\n    this.cancelOptionPrompt();\n  }\n  confirmNewGroup(users) {\n    const newGroup = new Group(users);\n    this.openChatWindow(newGroup);\n    if (this.groupAdapter) {\n      this.groupAdapter.groupCreated(newGroup);\n    }\n  }\n  // Opens a new chat whindow. Takes care of available viewport\n  // Works for opening a chat window for an user or for a group\n  // Returns => [Window: Window object reference, boolean: Indicates if this window is a new chat window]\n  openChatWindow(participant, focusOnNewWindow = false, invokedByUserClick = false) {\n    // Is this window opened?\n    const openedWindow = this.windows.find(x => x.participant.id == participant.id);\n    if (!openedWindow) {\n      if (invokedByUserClick) {\n        this.onParticipantClicked.emit(participant);\n      }\n      // Refer to issue #58 on Github\n      const collapseWindow = invokedByUserClick ? false : !this.maximizeWindowOnNewMessage;\n      const newChatWindow = new Window(participant, this.historyEnabled, collapseWindow);\n      // Loads the chat history via an RxJs Observable\n      if (this.historyEnabled) {\n        this.fetchMessageHistory(newChatWindow);\n      }\n      this.windows.unshift(newChatWindow);\n      // Is there enough space left in the view port ? but should be displayed in mobile if option is enabled\n      if (!this.isViewportOnMobileEnabled) {\n        if (this.windows.length * this.windowSizeFactor >= this.viewPortTotalArea - (!this.hideFriendsList ? this.friendsListWidth : 0)) {\n          this.windows.pop();\n        }\n      }\n      this.updateWindowsState(this.windows);\n      if (focusOnNewWindow && !collapseWindow) {\n        this.focusOnWindow(newChatWindow);\n      }\n      this.participantsInteractedWith.push(participant);\n      this.onParticipantChatOpened.emit(participant);\n      return [newChatWindow, true];\n    } else {\n      // Returns the existing chat window\n      return [openedWindow, false];\n    }\n  }\n  // Focus on the input element of the supplied window\n  focusOnWindow(window, callback = () => {}) {\n    const windowIndex = this.windows.indexOf(window);\n    if (windowIndex >= 0) {\n      setTimeout(() => {\n        if (this.chatWindows) {\n          const chatWindowToFocus = this.chatWindows.toArray()[windowIndex];\n          chatWindowToFocus.chatWindowInput.nativeElement.focus();\n        }\n        callback();\n      });\n    }\n  }\n  assertMessageType(message) {\n    // Always fallback to \"Text\" messages to avoid rendenring issues\n    if (!message.type) {\n      message.type = MessageType.Text;\n    }\n  }\n  // Marks all messages provided as read with the current time.\n  markMessagesAsRead(messages) {\n    const currentDate = new Date();\n    messages.forEach(msg => {\n      msg.dateSeen = currentDate;\n    });\n    this.onMessagesSeen.emit(messages);\n  }\n  // Buffers audio file (For component's bootstrapping)\n  bufferAudioFile() {\n    if (this.audioSource && this.audioSource.length > 0) {\n      this.audioFile = new Audio();\n      this.audioFile.src = this.audioSource;\n      this.audioFile.load();\n    }\n  }\n  // Emits a message notification audio if enabled after every message received\n  emitMessageSound(window) {\n    if (this.audioEnabled && !window.hasFocus && this.audioFile) {\n      this.audioFile.play();\n    }\n  }\n  // Emits a browser notification\n  emitBrowserNotification(window, message) {\n    if (this.browserNotificationsBootstrapped && !window.hasFocus && message) {\n      const notification = new Notification(`${this.localization.browserNotificationTitle} ${window.participant.displayName}`, {\n        'body': message.message,\n        'icon': this.browserNotificationIconSource\n      });\n      setTimeout(() => {\n        notification.close();\n      }, message.message.length <= 50 ? 5000 : 7000); // More time to read longer messages\n    }\n  }\n  // Saves current windows state into local storage if persistence is enabled\n  updateWindowsState(windows) {\n    if (this.persistWindowsState) {\n      const participantIds = windows.map(w => {\n        return w.participant.id;\n      });\n      localStorage.setItem(this.localStorageKey, JSON.stringify(participantIds));\n    }\n  }\n  restoreWindowsState() {\n    try {\n      if (this.persistWindowsState) {\n        const stringfiedParticipantIds = localStorage.getItem(this.localStorageKey);\n        if (stringfiedParticipantIds && stringfiedParticipantIds.length > 0) {\n          const participantIds = JSON.parse(stringfiedParticipantIds);\n          const participantsToRestore = this.participants.filter(u => participantIds.indexOf(u.id) >= 0);\n          participantsToRestore.forEach(participant => {\n            this.openChatWindow(participant);\n          });\n        }\n      }\n    } catch (ex) {\n      console.error(`An error occurred while restoring ng-chat windows state. Details: ${ex}`);\n    }\n  }\n  // Gets closest open window if any. Most recent opened has priority (Right)\n  getClosestWindow(window) {\n    const index = this.windows.indexOf(window);\n    if (index > 0) {\n      return this.windows[index - 1];\n    } else if (index == 0 && this.windows.length > 1) {\n      return this.windows[index + 1];\n    }\n  }\n  closeWindow(window) {\n    const index = this.windows.indexOf(window);\n    this.windows.splice(index, 1);\n    this.updateWindowsState(this.windows);\n    this.onParticipantChatClosed.emit(window.participant);\n  }\n  getChatWindowComponentInstance(targetWindow) {\n    const windowIndex = this.windows.indexOf(targetWindow);\n    if (this.chatWindows) {\n      let targetWindow = this.chatWindows.toArray()[windowIndex];\n      return targetWindow;\n    }\n    return null;\n  }\n  // Scrolls a chat window message flow to the bottom\n  scrollChatWindow(window, direction) {\n    const chatWindow = this.getChatWindowComponentInstance(window);\n    if (chatWindow) {\n      chatWindow.scrollChatWindow(window, direction);\n    }\n  }\n  onWindowMessagesSeen(messagesSeen) {\n    this.markMessagesAsRead(messagesSeen);\n  }\n  onWindowChatClosed(payload) {\n    const {\n      closedWindow,\n      closedViaEscapeKey\n    } = payload;\n    if (closedViaEscapeKey) {\n      let closestWindow = this.getClosestWindow(closedWindow);\n      if (closestWindow) {\n        this.focusOnWindow(closestWindow, () => {\n          this.closeWindow(closedWindow);\n        });\n      } else {\n        this.closeWindow(closedWindow);\n      }\n    } else {\n      this.closeWindow(closedWindow);\n    }\n  }\n  onWindowTabTriggered(payload) {\n    const {\n      triggeringWindow,\n      shiftKeyPressed\n    } = payload;\n    const currentWindowIndex = this.windows.indexOf(triggeringWindow);\n    let windowToFocus = this.windows[currentWindowIndex + (shiftKeyPressed ? 1 : -1)]; // Goes back on shift + tab\n    if (!windowToFocus) {\n      // Edge windows, go to start or end\n      windowToFocus = this.windows[currentWindowIndex > 0 ? 0 : this.chatWindows.length - 1];\n    }\n    this.focusOnWindow(windowToFocus);\n  }\n  onWindowMessageSent(messageSent) {\n    this.adapter.sendMessage(messageSent);\n  }\n  onWindowOptionTriggered(option) {\n    this.currentActiveOption = option;\n  }\n  triggerOpenChatWindow(user) {\n    if (user) {\n      this.openChatWindow(user);\n    }\n  }\n  triggerCloseChatWindow(userId) {\n    const openedWindow = this.windows.find(x => x.participant.id == userId);\n    if (openedWindow) {\n      this.closeWindow(openedWindow);\n    }\n  }\n  triggerToggleChatWindowVisibility(userId) {\n    const openedWindow = this.windows.find(x => x.participant.id == userId);\n    if (openedWindow) {\n      const chatWindow = this.getChatWindowComponentInstance(openedWindow);\n      if (chatWindow) {\n        chatWindow.onChatWindowClicked(openedWindow);\n      }\n    }\n  }\n}\n_class = NgChat;\n_class.ɵfac = function NgChat_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"ng-chat\"]],\n  viewQuery: function NgChat_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chatWindows = _t);\n    }\n  },\n  hostBindings: function NgChat_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"resize\", function NgChat_resize_HostBindingHandler($event) {\n        return ctx.onResize($event);\n      }, false, i0.ɵɵresolveWindow);\n    }\n  },\n  inputs: {\n    isDisabled: \"isDisabled\",\n    adapter: \"adapter\",\n    groupAdapter: \"groupAdapter\",\n    userId: \"userId\",\n    isCollapsed: \"isCollapsed\",\n    maximizeWindowOnNewMessage: \"maximizeWindowOnNewMessage\",\n    pollFriendsList: \"pollFriendsList\",\n    pollingInterval: \"pollingInterval\",\n    historyEnabled: \"historyEnabled\",\n    emojisEnabled: \"emojisEnabled\",\n    linkfyEnabled: \"linkfyEnabled\",\n    audioEnabled: \"audioEnabled\",\n    searchEnabled: \"searchEnabled\",\n    audioSource: \"audioSource\",\n    persistWindowsState: \"persistWindowsState\",\n    title: \"title\",\n    messagePlaceholder: \"messagePlaceholder\",\n    searchPlaceholder: \"searchPlaceholder\",\n    browserNotificationsEnabled: \"browserNotificationsEnabled\",\n    browserNotificationIconSource: \"browserNotificationIconSource\",\n    browserNotificationTitle: \"browserNotificationTitle\",\n    historyPageSize: \"historyPageSize\",\n    localization: \"localization\",\n    hideFriendsList: \"hideFriendsList\",\n    hideFriendsListOnUnsupportedViewport: \"hideFriendsListOnUnsupportedViewport\",\n    fileUploadUrl: \"fileUploadUrl\",\n    theme: \"theme\",\n    customTheme: \"customTheme\",\n    messageDatePipeFormat: \"messageDatePipeFormat\",\n    showMessageDate: \"showMessageDate\",\n    isViewportOnMobileEnabled: \"isViewportOnMobileEnabled\",\n    fileUploadAdapter: \"fileUploadAdapter\"\n  },\n  outputs: {\n    onParticipantClicked: \"onParticipantClicked\",\n    onParticipantChatOpened: \"onParticipantChatOpened\",\n    onParticipantChatClosed: \"onParticipantChatClosed\",\n    onMessagesSeen: \"onMessagesSeen\"\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[\"rel\", \"stylesheet\", 3, \"href\", 4, \"ngIf\"], [\"id\", \"ng-chat\", 3, \"ngClass\", 4, \"ngIf\"], [\"rel\", \"stylesheet\", 3, \"href\"], [\"id\", \"ng-chat\", 3, \"ngClass\"], [3, \"localization\", \"shouldDisplay\", \"userId\", \"isCollapsed\", \"searchEnabled\", \"participants\", \"participantsResponse\", \"participantsInteractedWith\", \"windows\", \"currentActiveOption\", \"onParticipantClicked\", \"onOptionPromptCanceled\", \"onOptionPromptConfirmed\"], [3, \"ngClass\", \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\", \"ngStyle\"], [3, \"fileUploadAdapter\", \"localization\", \"userId\", \"window\", \"showOptions\", \"emojisEnabled\", \"linkfyEnabled\", \"showMessageDate\", \"messageDatePipeFormat\", \"hasPagedHistory\", \"onMessagesSeen\", \"onMessageSent\", \"onTabTriggered\", \"onChatWindowClosed\", \"onOptionTriggered\", \"onLoadHistoryTriggered\"], [\"chatWindow\", \"\"]],\n  template: function NgChat_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NgChat_link_0_Template, 2, 3, \"link\", 0);\n      i0.ɵɵtemplate(1, NgChat_div_1_Template, 3, 12, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.customTheme);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isDisabled && ctx.isBootstrapped && !ctx.unsupportedViewport);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i2.NgStyle, i3.NgChatFriendsListComponent, i4.NgChatWindowComponent, i5.SanitizePipe],\n  styles: [\".user-icon\\n{\\n    box-sizing: border-box;\\n    background-color: #FFF;\\n    border: 2px solid;\\n    width: 32px;\\n    height: 20px;\\n    border-radius: 64px 64px 0 0/64px;\\n    margin-top: 14px;\\n    margin-left: -1px;\\n    display: inline-block;\\n    vertical-align: middle;\\n    position: relative;\\n    font-style: normal;\\n    color: #ddd;\\n    text-align: left;\\n    text-indent: -9999px;\\n}\\n    .user-icon:before{\\n        border: 2px solid;\\n        background-color: #FFF;\\n        width: 12px;\\n        height: 12px;\\n        top: -19px;\\n        border-radius: 50%;\\n        position: absolute;\\n        left: 50%;\\n        transform: translateX(-50%);\\n    }\\n    .user-icon:before, .user-icon:after\\n    {\\n        content: '';\\n        pointer-events: none;\\n    }\\n.upload-icon {\\n    position: absolute;\\n    margin-left: 3px;\\n    margin-top: 12px;\\n    width: 13px;\\n    height: 4px;\\n    border: solid 1px currentColor;\\n    border-top: none;\\n    border-radius: 1px;\\n}\\n    .upload-icon:before {\\n        content: '';\\n        position: absolute;\\n        top: -8px;\\n        left: 6px;\\n        width: 1px;\\n        height: 9px;\\n        background-color: currentColor;\\n    }\\n    .upload-icon:after {\\n        content: '';\\n        position: absolute;\\n        top: -8px;\\n        left: 4px;\\n        width: 4px;\\n        height: 4px;\\n        border-top: solid 1px currentColor;\\n        border-right: solid 1px currentColor;\\n        transform: rotate(-45deg);\\n    }\\n.paperclip-icon {\\n    position: absolute;\\n    margin-left: 9px;\\n    margin-top: 2px;\\n    width: 6px;\\n    height: 12px;\\n    border-radius: 4px 4px 0 0;\\n    border-left: solid 1px currentColor;\\n    border-right: solid 1px currentColor;\\n    border-top: solid 1px currentColor;\\n    transform: rotate(45deg);\\n}\\n    .paperclip-icon:before {\\n        content: '';\\n        position: absolute;\\n        top: 11px;\\n        left: -1px;\\n        width: 4px;\\n        height: 6px;\\n        border-radius: 0 0 3px 3px;\\n        border-left: solid 1px currentColor;\\n        border-right: solid 1px currentColor;\\n        border-bottom: solid 1px currentColor;\\n    }\\n    .paperclip-icon:after {\\n        content: '';\\n        position: absolute;\\n        left: 1px;\\n        top: 1px;\\n        width: 2px;\\n        height: 10px;\\n        border-radius: 4px 4px 0 0;\\n        border-left: solid 1px currentColor;\\n        border-right: solid 1px currentColor;\\n        border-top: solid 1px currentColor;\\n    }\\n.check-icon {\\n    color: #000;\\n    position: absolute;\\n    margin-left: 3px;\\n    margin-top: 4px;\\n    width: 14px;\\n    height: 8px;\\n    border-bottom: solid 1px currentColor;\\n    border-left: solid 1px currentColor;\\n    transform: rotate(-45deg);\\n    }\\n.remove-icon {\\n    color: #000;\\n    position: absolute;\\n    margin-left: 3px;\\n    margin-top: 10px;\\n    }\\n    .remove-icon:before {\\n    content: '';\\n    position: absolute;\\n    width: 15px;\\n    height: 1px;\\n    background-color: currentColor;\\n    transform: rotate(45deg);\\n    }\\n    .remove-icon:after {\\n    content: '';\\n    position: absolute;\\n    width: 15px;\\n    height: 1px;\\n    background-color: currentColor;\\n    transform: rotate(-45deg);\\n    }\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9uZy1jaGF0L2Fzc2V0cy9pY29ucy5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0lBRUksc0JBQXNCO0lBQ3RCLHNCQUFzQjtJQUN0QixpQkFBaUI7SUFDakIsV0FBVztJQUNYLFlBQVk7SUFDWixpQ0FBaUM7SUFDakMsZ0JBQWdCO0lBQ2hCLGlCQUFpQjtJQUNqQixxQkFBcUI7SUFDckIsc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsV0FBVztJQUNYLGdCQUFnQjtJQUNoQixvQkFBb0I7QUFDeEI7SUFDSTtRQUNJLGlCQUFpQjtRQUNqQixzQkFBc0I7UUFDdEIsV0FBVztRQUNYLFlBQVk7UUFDWixVQUFVO1FBQ1Ysa0JBQWtCO1FBQ2xCLGtCQUFrQjtRQUNsQixTQUFTO1FBR1QsMkJBQTJCO0lBQy9CO0lBQ0E7O1FBRUksV0FBVztRQUNYLG9CQUFvQjtJQUN4QjtBQUNKO0lBQ0ksa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsV0FBVztJQUNYLFdBQVc7SUFDWCw4QkFBOEI7SUFDOUIsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtBQUN0QjtJQUNJO1FBQ0ksV0FBVztRQUNYLGtCQUFrQjtRQUNsQixTQUFTO1FBQ1QsU0FBUztRQUNULFVBQVU7UUFDVixXQUFXO1FBQ1gsOEJBQThCO0lBQ2xDO0lBQ0E7UUFDSSxXQUFXO1FBQ1gsa0JBQWtCO1FBQ2xCLFNBQVM7UUFDVCxTQUFTO1FBQ1QsVUFBVTtRQUNWLFdBQVc7UUFDWCxrQ0FBa0M7UUFDbEMsb0NBQW9DO1FBRTVCLHlCQUF5QjtJQUNyQztBQUNKO0lBQ0ksa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixlQUFlO0lBQ2YsVUFBVTtJQUNWLFlBQVk7SUFDWiwwQkFBMEI7SUFDMUIsbUNBQW1DO0lBQ25DLG9DQUFvQztJQUNwQyxrQ0FBa0M7SUFFMUIsd0JBQXdCO0FBQ3BDO0lBQ0k7UUFDSSxXQUFXO1FBQ1gsa0JBQWtCO1FBQ2xCLFNBQVM7UUFDVCxVQUFVO1FBQ1YsVUFBVTtRQUNWLFdBQVc7UUFDWCwwQkFBMEI7UUFDMUIsbUNBQW1DO1FBQ25DLG9DQUFvQztRQUNwQyxxQ0FBcUM7SUFDekM7SUFDQTtRQUNJLFdBQVc7UUFDWCxrQkFBa0I7UUFDbEIsU0FBUztRQUNULFFBQVE7UUFDUixVQUFVO1FBQ1YsWUFBWTtRQUNaLDBCQUEwQjtRQUMxQixtQ0FBbUM7UUFDbkMsb0NBQW9DO1FBQ3BDLGtDQUFrQztJQUN0QztBQUNKO0lBQ0ksV0FBVztJQUNYLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsZUFBZTtJQUNmLFdBQVc7SUFDWCxXQUFXO0lBQ1gscUNBQXFDO0lBQ3JDLG1DQUFtQztJQUUzQix5QkFBeUI7SUFDakM7QUFDSjtJQUNJLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQjtJQUNBO0lBQ0EsV0FBVztJQUNYLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsV0FBVztJQUNYLDhCQUE4QjtJQUV0Qix3QkFBd0I7SUFDaEM7SUFDQTtJQUNBLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsV0FBVztJQUNYLFdBQVc7SUFDWCw4QkFBOEI7SUFFdEIseUJBQXlCO0lBQ2pDIiwic291cmNlc0NvbnRlbnQiOlsiLnVzZXItaWNvblxyXG57XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRjtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkO1xyXG4gICAgd2lkdGg6IDMycHg7XHJcbiAgICBoZWlnaHQ6IDIwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA2NHB4IDY0cHggMCAwLzY0cHg7XHJcbiAgICBtYXJnaW4tdG9wOiAxNHB4O1xyXG4gICAgbWFyZ2luLWxlZnQ6IC0xcHg7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgY29sb3I6ICNkZGQ7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgdGV4dC1pbmRlbnQ6IC05OTk5cHg7XHJcbn1cclxuICAgIC51c2VyLWljb246YmVmb3Jle1xyXG4gICAgICAgIGJvcmRlcjogMnB4IHNvbGlkO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNGRkY7XHJcbiAgICAgICAgd2lkdGg6IDEycHg7XHJcbiAgICAgICAgaGVpZ2h0OiAxMnB4O1xyXG4gICAgICAgIHRvcDogLTE5cHg7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBsZWZ0OiA1MCU7XHJcbiAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XHJcbiAgICAgICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XHJcbiAgICB9XHJcbiAgICAudXNlci1pY29uOmJlZm9yZSwgLnVzZXItaWNvbjphZnRlclxyXG4gICAge1xyXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gICAgfVxyXG4udXBsb2FkLWljb24ge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDNweDtcclxuICAgIG1hcmdpbi10b3A6IDEycHg7XHJcbiAgICB3aWR0aDogMTNweDtcclxuICAgIGhlaWdodDogNHB4O1xyXG4gICAgYm9yZGVyOiBzb2xpZCAxcHggY3VycmVudENvbG9yO1xyXG4gICAgYm9yZGVyLXRvcDogbm9uZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDFweDtcclxufVxyXG4gICAgLnVwbG9hZC1pY29uOmJlZm9yZSB7XHJcbiAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogLThweDtcclxuICAgICAgICBsZWZ0OiA2cHg7XHJcbiAgICAgICAgd2lkdGg6IDFweDtcclxuICAgICAgICBoZWlnaHQ6IDlweDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBjdXJyZW50Q29sb3I7XHJcbiAgICB9XHJcbiAgICAudXBsb2FkLWljb246YWZ0ZXIge1xyXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IC04cHg7XHJcbiAgICAgICAgbGVmdDogNHB4O1xyXG4gICAgICAgIHdpZHRoOiA0cHg7XHJcbiAgICAgICAgaGVpZ2h0OiA0cHg7XHJcbiAgICAgICAgYm9yZGVyLXRvcDogc29saWQgMXB4IGN1cnJlbnRDb2xvcjtcclxuICAgICAgICBib3JkZXItcmlnaHQ6IHNvbGlkIDFweCBjdXJyZW50Q29sb3I7XHJcbiAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xyXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcclxuICAgIH1cclxuLnBhcGVyY2xpcC1pY29uIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIG1hcmdpbi1sZWZ0OiA5cHg7XHJcbiAgICBtYXJnaW4tdG9wOiAycHg7XHJcbiAgICB3aWR0aDogNnB4O1xyXG4gICAgaGVpZ2h0OiAxMnB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4IDRweCAwIDA7XHJcbiAgICBib3JkZXItbGVmdDogc29saWQgMXB4IGN1cnJlbnRDb2xvcjtcclxuICAgIGJvcmRlci1yaWdodDogc29saWQgMXB4IGN1cnJlbnRDb2xvcjtcclxuICAgIGJvcmRlci10b3A6IHNvbGlkIDFweCBjdXJyZW50Q29sb3I7XHJcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xyXG59XHJcbiAgICAucGFwZXJjbGlwLWljb246YmVmb3JlIHtcclxuICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgdG9wOiAxMXB4O1xyXG4gICAgICAgIGxlZnQ6IC0xcHg7XHJcbiAgICAgICAgd2lkdGg6IDRweDtcclxuICAgICAgICBoZWlnaHQ6IDZweDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAwIDAgM3B4IDNweDtcclxuICAgICAgICBib3JkZXItbGVmdDogc29saWQgMXB4IGN1cnJlbnRDb2xvcjtcclxuICAgICAgICBib3JkZXItcmlnaHQ6IHNvbGlkIDFweCBjdXJyZW50Q29sb3I7XHJcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogc29saWQgMXB4IGN1cnJlbnRDb2xvcjtcclxuICAgIH1cclxuICAgIC5wYXBlcmNsaXAtaWNvbjphZnRlciB7XHJcbiAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIGxlZnQ6IDFweDtcclxuICAgICAgICB0b3A6IDFweDtcclxuICAgICAgICB3aWR0aDogMnB4O1xyXG4gICAgICAgIGhlaWdodDogMTBweDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA0cHggNHB4IDAgMDtcclxuICAgICAgICBib3JkZXItbGVmdDogc29saWQgMXB4IGN1cnJlbnRDb2xvcjtcclxuICAgICAgICBib3JkZXItcmlnaHQ6IHNvbGlkIDFweCBjdXJyZW50Q29sb3I7XHJcbiAgICAgICAgYm9yZGVyLXRvcDogc29saWQgMXB4IGN1cnJlbnRDb2xvcjtcclxuICAgIH1cclxuLmNoZWNrLWljb24ge1xyXG4gICAgY29sb3I6ICMwMDA7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBtYXJnaW4tbGVmdDogM3B4O1xyXG4gICAgbWFyZ2luLXRvcDogNHB4O1xyXG4gICAgd2lkdGg6IDE0cHg7XHJcbiAgICBoZWlnaHQ6IDhweDtcclxuICAgIGJvcmRlci1ib3R0b206IHNvbGlkIDFweCBjdXJyZW50Q29sb3I7XHJcbiAgICBib3JkZXItbGVmdDogc29saWQgMXB4IGN1cnJlbnRDb2xvcjtcclxuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcclxuICAgIH1cclxuLnJlbW92ZS1pY29uIHtcclxuICAgIGNvbG9yOiAjMDAwO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDNweDtcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICB9XHJcbiAgICAucmVtb3ZlLWljb246YmVmb3JlIHtcclxuICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgd2lkdGg6IDE1cHg7XHJcbiAgICBoZWlnaHQ6IDFweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGN1cnJlbnRDb2xvcjtcclxuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XHJcbiAgICB9XHJcbiAgICAucmVtb3ZlLWljb246YWZ0ZXIge1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB3aWR0aDogMTVweDtcclxuICAgIGhlaWdodDogMXB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogY3VycmVudENvbG9yO1xyXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xyXG4gICAgfVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\", \".loader,\\n.loader:before,\\n.loader:after {\\n  background: #E3E3E3;\\n  animation: load1 1s infinite ease-in-out;\\n  width: 1em;\\n  height: 4em;\\n}\\n.loader {\\n  color: #E3E3E3;\\n  text-indent: -9999em;\\n  margin: 4px auto 0 auto;\\n  position: relative;\\n  font-size: 4px;\\n  transform: translateZ(0);\\n  animation-delay: -0.16s;\\n}\\n.loader:before,\\n.loader:after {\\n  position: absolute;\\n  top: 0;\\n  content: '';\\n}\\n.loader:before {\\n  left: -1.5em;\\n  animation-delay: -0.32s;\\n}\\n.loader:after {\\n  left: 1.5em;\\n}\\n@keyframes load1 {\\n  0%,\\n  80%,\\n  100% {\\n    box-shadow: 0 0;\\n    height: 4em;\\n  }\\n  40% {\\n    box-shadow: 0 -2em;\\n    height: 5em;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9uZy1jaGF0L2Fzc2V0cy9sb2FkaW5nLXNwaW5uZXIuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7RUFHRSxtQkFBbUI7RUFFbkIsd0NBQXdDO0VBQ3hDLFVBQVU7RUFDVixXQUFXO0FBQ2I7QUFDQTtFQUNFLGNBQWM7RUFDZCxvQkFBb0I7RUFDcEIsdUJBQXVCO0VBQ3ZCLGtCQUFrQjtFQUNsQixjQUFjO0VBR2Qsd0JBQXdCO0VBRXhCLHVCQUF1QjtBQUN6QjtBQUNBOztFQUVFLGtCQUFrQjtFQUNsQixNQUFNO0VBQ04sV0FBVztBQUNiO0FBQ0E7RUFDRSxZQUFZO0VBRVosdUJBQXVCO0FBQ3pCO0FBQ0E7RUFDRSxXQUFXO0FBQ2I7QUFhQTtFQUNFOzs7SUFHRSxlQUFlO0lBQ2YsV0FBVztFQUNiO0VBQ0E7SUFDRSxrQkFBa0I7SUFDbEIsV0FBVztFQUNiO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIubG9hZGVyLFxyXG4ubG9hZGVyOmJlZm9yZSxcclxuLmxvYWRlcjphZnRlciB7XHJcbiAgYmFja2dyb3VuZDogI0UzRTNFMztcclxuICAtd2Via2l0LWFuaW1hdGlvbjogbG9hZDEgMXMgaW5maW5pdGUgZWFzZS1pbi1vdXQ7XHJcbiAgYW5pbWF0aW9uOiBsb2FkMSAxcyBpbmZpbml0ZSBlYXNlLWluLW91dDtcclxuICB3aWR0aDogMWVtO1xyXG4gIGhlaWdodDogNGVtO1xyXG59XHJcbi5sb2FkZXIge1xyXG4gIGNvbG9yOiAjRTNFM0UzO1xyXG4gIHRleHQtaW5kZW50OiAtOTk5OWVtO1xyXG4gIG1hcmdpbjogNHB4IGF1dG8gMCBhdXRvO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBmb250LXNpemU6IDRweDtcclxuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtcclxuICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtcclxuICAtd2Via2l0LWFuaW1hdGlvbi1kZWxheTogLTAuMTZzO1xyXG4gIGFuaW1hdGlvbi1kZWxheTogLTAuMTZzO1xyXG59XHJcbi5sb2FkZXI6YmVmb3JlLFxyXG4ubG9hZGVyOmFmdGVyIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiAwO1xyXG4gIGNvbnRlbnQ6ICcnO1xyXG59XHJcbi5sb2FkZXI6YmVmb3JlIHtcclxuICBsZWZ0OiAtMS41ZW07XHJcbiAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6IC0wLjMycztcclxuICBhbmltYXRpb24tZGVsYXk6IC0wLjMycztcclxufVxyXG4ubG9hZGVyOmFmdGVyIHtcclxuICBsZWZ0OiAxLjVlbTtcclxufVxyXG5ALXdlYmtpdC1rZXlmcmFtZXMgbG9hZDEge1xyXG4gIDAlLFxyXG4gIDgwJSxcclxuICAxMDAlIHtcclxuICAgIGJveC1zaGFkb3c6IDAgMDtcclxuICAgIGhlaWdodDogNGVtO1xyXG4gIH1cclxuICA0MCUge1xyXG4gICAgYm94LXNoYWRvdzogMCAtMmVtO1xyXG4gICAgaGVpZ2h0OiA1ZW07XHJcbiAgfVxyXG59XHJcbkBrZXlmcmFtZXMgbG9hZDEge1xyXG4gIDAlLFxyXG4gIDgwJSxcclxuICAxMDAlIHtcclxuICAgIGJveC1zaGFkb3c6IDAgMDtcclxuICAgIGhlaWdodDogNGVtO1xyXG4gIH1cclxuICA0MCUge1xyXG4gICAgYm94LXNoYWRvdzogMCAtMmVtO1xyXG4gICAgaGVpZ2h0OiA1ZW07XHJcbiAgfVxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\", \"#ng-chat\\n{\\n    position:fixed;\\n    z-index:999;\\n    right:0;\\n    bottom:0;\\n    box-sizing: initial;\\n    font-size: 11pt;\\n    text-align: left;\\n}\\n    #ng-chat input\\n    {\\n        outline: none;\\n    }\\n    #ng-chat .shadowed\\n    {\\n        box-shadow: 0 4px 8px rgba(0,0,0,.25);\\n    }\\n.ng-chat-loading-wrapper\\n{\\n    height: 30px;\\n    text-align: center;\\n    font-size:0.9em;\\n}\\n.ng-chat-close\\n{\\n    text-decoration:none;\\n    float:right;\\n}\\n.ng-chat-title, .ng-chat-title:hover\\n{\\n    position: relative;\\n    z-index:2;\\n    height:30px;\\n    line-height: 30px;\\n    font-size:0.9em;\\n    padding: 0 10px;\\n    display: block;\\n    text-decoration: none;\\n    color: inherit;\\n    font-weight: 400;\\n    cursor: pointer;\\n}\\n    .ng-chat-title .ng-chat-title-visibility-toggle-area\\n    {\\n        display: inline-block;\\n        width: 85%;\\n    }\\n    .ng-chat-title .ng-chat-title-visibility-toggle-area > strong{\\n        font-weight: 600;\\n        display: block;\\n        overflow: hidden;\\n        height: 30px;\\n        text-overflow: ellipsis;\\n        white-space: nowrap;\\n        max-width: 85%;\\n        float:left;\\n    }\\n    .ng-chat-title .ng-chat-title-visibility-toggle-area .ng-chat-participant-status\\n    {\\n        float: left;\\n        margin-left: 5px;\\n    }\\n\\n.ng-chat-participant-status\\n{\\n    display: inline-block;\\n    border-radius: 25px;\\n    width: 8px;\\n    height: 8px;\\n    margin-top:10px;\\n}\\n.ng-chat-participant-status.online\\n{\\n    background-color: #92A400;\\n}\\n.ng-chat-participant-status.busy\\n{\\n    background-color: #F91C1E;\\n}\\n.ng-chat-participant-status.away\\n{\\n    background-color: #F7D21B;\\n}\\n.ng-chat-participant-status.offline\\n{\\n    background-color: #BABABA;\\n}\\n.ng-chat-unread-messages-count\\n{\\n    margin-left: 5px;\\n    padding: 0 5px;\\n    border-radius: 25px;\\n    font-size: 0.9em;\\n    line-height: 30px;\\n}\\n\\n.ng-chat-options-container\\n{\\n    float: right;\\n    margin-right: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9uZy1jaGF0L2Fzc2V0cy9uZy1jaGF0LmNvbXBvbmVudC5kZWZhdWx0LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7SUFFSSxjQUFjO0lBQ2QsV0FBVztJQUNYLE9BQU87SUFDUCxRQUFRO0lBQ1IsbUJBQW1CO0lBQ25CLGVBQWU7SUFDZixnQkFBZ0I7QUFDcEI7SUFDSTs7UUFFSSxhQUFhO0lBQ2pCO0lBQ0E7O1FBRUkscUNBQXFDO0lBQ3pDO0FBQ0o7O0lBRUksWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixlQUFlO0FBQ25CO0FBQ0E7O0lBRUksb0JBQW9CO0lBQ3BCLFdBQVc7QUFDZjtBQUNBOztJQUVJLGtCQUFrQjtJQUNsQixTQUFTO0lBQ1QsV0FBVztJQUNYLGlCQUFpQjtJQUNqQixlQUFlO0lBQ2YsZUFBZTtJQUNmLGNBQWM7SUFDZCxxQkFBcUI7SUFDckIsY0FBYztJQUNkLGdCQUFnQjtJQUNoQixlQUFlO0FBQ25CO0lBQ0k7O1FBRUkscUJBQXFCO1FBQ3JCLFVBQVU7SUFDZDtJQUNBO1FBQ0ksZ0JBQWdCO1FBQ2hCLGNBQWM7UUFDZCxnQkFBZ0I7UUFDaEIsWUFBWTtRQUNaLHVCQUF1QjtRQUN2QixtQkFBbUI7UUFDbkIsY0FBYztRQUNkLFVBQVU7SUFDZDtJQUNBOztRQUVJLFdBQVc7UUFDWCxnQkFBZ0I7SUFDcEI7O0FBRUo7O0lBRUkscUJBQXFCO0lBQ3JCLG1CQUFtQjtJQUNuQixVQUFVO0lBQ1YsV0FBVztJQUNYLGVBQWU7QUFDbkI7QUFDQTs7SUFFSSx5QkFBeUI7QUFDN0I7QUFDQTs7SUFFSSx5QkFBeUI7QUFDN0I7QUFDQTs7SUFFSSx5QkFBeUI7QUFDN0I7QUFDQTs7SUFFSSx5QkFBeUI7QUFDN0I7QUFDQTs7SUFFSSxnQkFBZ0I7SUFDaEIsY0FBYztJQUNkLG1CQUFtQjtJQUNuQixnQkFBZ0I7SUFDaEIsaUJBQWlCO0FBQ3JCOztBQUVBOztJQUVJLFlBQVk7SUFDWixpQkFBaUI7QUFDckIiLCJzb3VyY2VzQ29udGVudCI6WyIjbmctY2hhdFxyXG57XHJcbiAgICBwb3NpdGlvbjpmaXhlZDtcclxuICAgIHotaW5kZXg6OTk5O1xyXG4gICAgcmlnaHQ6MDtcclxuICAgIGJvdHRvbTowO1xyXG4gICAgYm94LXNpemluZzogaW5pdGlhbDtcclxuICAgIGZvbnQtc2l6ZTogMTFwdDtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbn1cclxuICAgICNuZy1jaGF0IGlucHV0XHJcbiAgICB7XHJcbiAgICAgICAgb3V0bGluZTogbm9uZTtcclxuICAgIH1cclxuICAgICNuZy1jaGF0IC5zaGFkb3dlZFxyXG4gICAge1xyXG4gICAgICAgIGJveC1zaGFkb3c6IDAgNHB4IDhweCByZ2JhKDAsMCwwLC4yNSk7XHJcbiAgICB9XHJcbi5uZy1jaGF0LWxvYWRpbmctd3JhcHBlclxyXG57XHJcbiAgICBoZWlnaHQ6IDMwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBmb250LXNpemU6MC45ZW07XHJcbn1cclxuLm5nLWNoYXQtY2xvc2Vcclxue1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOm5vbmU7XHJcbiAgICBmbG9hdDpyaWdodDtcclxufVxyXG4ubmctY2hhdC10aXRsZSwgLm5nLWNoYXQtdGl0bGU6aG92ZXJcclxue1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgei1pbmRleDoyO1xyXG4gICAgaGVpZ2h0OjMwcHg7XHJcbiAgICBsaW5lLWhlaWdodDogMzBweDtcclxuICAgIGZvbnQtc2l6ZTowLjllbTtcclxuICAgIHBhZGRpbmc6IDAgMTBweDtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgY29sb3I6IGluaGVyaXQ7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbiAgICAubmctY2hhdC10aXRsZSAubmctY2hhdC10aXRsZS12aXNpYmlsaXR5LXRvZ2dsZS1hcmVhXHJcbiAgICB7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIHdpZHRoOiA4NSU7XHJcbiAgICB9XHJcbiAgICAubmctY2hhdC10aXRsZSAubmctY2hhdC10aXRsZS12aXNpYmlsaXR5LXRvZ2dsZS1hcmVhID4gc3Ryb25ne1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICBoZWlnaHQ6IDMwcHg7XHJcbiAgICAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgICAgICBtYXgtd2lkdGg6IDg1JTtcclxuICAgICAgICBmbG9hdDpsZWZ0O1xyXG4gICAgfVxyXG4gICAgLm5nLWNoYXQtdGl0bGUgLm5nLWNoYXQtdGl0bGUtdmlzaWJpbGl0eS10b2dnbGUtYXJlYSAubmctY2hhdC1wYXJ0aWNpcGFudC1zdGF0dXNcclxuICAgIHtcclxuICAgICAgICBmbG9hdDogbGVmdDtcclxuICAgICAgICBtYXJnaW4tbGVmdDogNXB4O1xyXG4gICAgfVxyXG5cclxuLm5nLWNoYXQtcGFydGljaXBhbnQtc3RhdHVzXHJcbntcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIGJvcmRlci1yYWRpdXM6IDI1cHg7XHJcbiAgICB3aWR0aDogOHB4O1xyXG4gICAgaGVpZ2h0OiA4cHg7XHJcbiAgICBtYXJnaW4tdG9wOjEwcHg7XHJcbn1cclxuLm5nLWNoYXQtcGFydGljaXBhbnQtc3RhdHVzLm9ubGluZVxyXG57XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTJBNDAwO1xyXG59XHJcbi5uZy1jaGF0LXBhcnRpY2lwYW50LXN0YXR1cy5idXN5XHJcbntcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNGOTFDMUU7XHJcbn1cclxuLm5nLWNoYXQtcGFydGljaXBhbnQtc3RhdHVzLmF3YXlcclxue1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0Y3RDIxQjtcclxufVxyXG4ubmctY2hhdC1wYXJ0aWNpcGFudC1zdGF0dXMub2ZmbGluZVxyXG57XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQkFCQUJBO1xyXG59XHJcbi5uZy1jaGF0LXVucmVhZC1tZXNzYWdlcy1jb3VudFxyXG57XHJcbiAgICBtYXJnaW4tbGVmdDogNXB4O1xyXG4gICAgcGFkZGluZzogMCA1cHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAyNXB4O1xyXG4gICAgZm9udC1zaXplOiAwLjllbTtcclxuICAgIGxpbmUtaGVpZ2h0OiAzMHB4O1xyXG59XHJcblxyXG4ubmctY2hhdC1vcHRpb25zLWNvbnRhaW5lclxyXG57XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\", \"#ng-chat.light-theme .primary-text, #ng-chat.light-theme {\\n  color: #5C5C5C;\\n  font-family: Arial, Helvetica, sans-serif;\\n}\\n\\n#ng-chat.light-theme .primary-background {\\n  background-color: #FFF;\\n}\\n#ng-chat.light-theme .secondary-background {\\n  background-color: #FAFAFA;\\n}\\n#ng-chat.light-theme .primary-outline-color {\\n  border-color: #A3A3A3;\\n}\\n#ng-chat.light-theme .friends-search-bar {\\n  background-color: #FFF;\\n}\\n#ng-chat.light-theme .unread-messages-counter-container, #ng-chat.light-theme .ng-chat-people-action, #ng-chat.light-theme .ng-chat-people-action > i {\\n  color: #5C5C5C;\\n  background-color: #E3E3E3;\\n}\\n#ng-chat.light-theme .load-history-action {\\n  background-color: #E3E3E3;\\n}\\n#ng-chat.light-theme .chat-window-input {\\n  background-color: #FFF;\\n}\\n#ng-chat.light-theme .sent-chat-message-container, #ng-chat.light-theme .file-message-container {\\n  background-color: #E3E3E3;\\n  border-color: #E3E3E3;\\n}\\n#ng-chat.light-theme .received-chat-message-container, #ng-chat.light-theme .file-message-container.received {\\n  background-color: #FFF;\\n  border-color: #E3E3E3;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9uZy1jaGF0L2Fzc2V0cy90aGVtZXMvbmctY2hhdC50aGVtZS5kZWZhdWx0LnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi8uLi9WUyUyMFByb2plY3QvbmctY2hhdC9zcmMvbmctY2hhdC9hc3NldHMvdGhlbWVzL25nLWNoYXQudGhlbWUuZGVmYXVsdC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUlBO0VBQ0ksY0FBQTtFQUNBLHlDQUFBO0FDSEo7O0FEVUk7RUFFSSxzQkFmUTtBQ09oQjtBRFVJO0VBRUkseUJBQUE7QUNUUjtBRFdJO0VBRUkscUJBQUE7QUNWUjtBRGdCSTtFQUVJLHNCQS9CUTtBQ2dCaEI7QURpQkk7RUFFSSxjQWpDSztFQWtDTCx5QkFuQ1U7QUNtQmxCO0FEa0JJO0VBRUkseUJBdkNVO0FDc0JsQjtBRG1CSTtFQUVJLHNCQTVDUTtBQzBCaEI7QURvQkk7RUFFSSx5QkEvQ1U7RUFnRFYscUJBaERVO0FDNkJsQjtBRHFCSTtFQUVJLHNCQXJEUTtFQXNEUixxQkFyRFU7QUNpQ2xCIiwic291cmNlc0NvbnRlbnQiOlsiJHByaW1hcnktY29sb3I6ICNGRkY7XHJcbiRzZWNvbmRhcnktY29sb3I6ICNFM0UzRTM7XHJcbiR0ZXh0LWNvbG9yOiAjNUM1QzVDO1xyXG5cclxuJXRleHQtZGVmaW5pdGlvbiB7XHJcbiAgICBjb2xvcjogIzVDNUM1QztcclxuICAgIGZvbnQtZmFtaWx5OiBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xyXG59XHJcblxyXG4jbmctY2hhdC5saWdodC10aGVtZVxyXG57XHJcbiAgICBAZXh0ZW5kICV0ZXh0LWRlZmluaXRpb247XHJcblxyXG4gICAgLnByaW1hcnktYmFja2dyb3VuZFxyXG4gICAge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRwcmltYXJ5LWNvbG9yO1xyXG4gICAgfVxyXG4gICAgLnNlY29uZGFyeS1iYWNrZ3JvdW5kXHJcbiAgICB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0ZBRkFGQTtcclxuICAgIH1cclxuICAgIC5wcmltYXJ5LW91dGxpbmUtY29sb3JcclxuICAgIHtcclxuICAgICAgICBib3JkZXItY29sb3I6I0EzQTNBMztcclxuICAgIH1cclxuICAgIC5wcmltYXJ5LXRleHRcclxuICAgIHtcclxuICAgICAgICBAZXh0ZW5kICV0ZXh0LWRlZmluaXRpb247XHJcbiAgICB9XHJcbiAgICAuZnJpZW5kcy1zZWFyY2gtYmFyXHJcbiAgICB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHByaW1hcnktY29sb3I7XHJcbiAgICB9XHJcbiAgICAudW5yZWFkLW1lc3NhZ2VzLWNvdW50ZXItY29udGFpbmVyLCAubmctY2hhdC1wZW9wbGUtYWN0aW9uLCAubmctY2hhdC1wZW9wbGUtYWN0aW9uID4gaVxyXG4gICAge1xyXG4gICAgICAgIGNvbG9yOiAkdGV4dC1jb2xvcjtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kYXJ5LWNvbG9yO1xyXG4gICAgfVxyXG4gICAgLmxvYWQtaGlzdG9yeS1hY3Rpb25cclxuICAgIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kYXJ5LWNvbG9yO1xyXG4gICAgfVxyXG4gICAgLmNoYXQtd2luZG93LWlucHV0XHJcbiAgICB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHByaW1hcnktY29sb3I7ICAgXHJcbiAgICB9XHJcbiAgICAuc2VudC1jaGF0LW1lc3NhZ2UtY29udGFpbmVyLCAgLmZpbGUtbWVzc2FnZS1jb250YWluZXJcclxuICAgIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiRzZWNvbmRhcnktY29sb3I7XHJcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAkc2Vjb25kYXJ5LWNvbG9yO1xyXG4gICAgfVxyXG4gICAgLnJlY2VpdmVkLWNoYXQtbWVzc2FnZS1jb250YWluZXIsIC5maWxlLW1lc3NhZ2UtY29udGFpbmVyLnJlY2VpdmVkXHJcbiAgICB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjokcHJpbWFyeS1jb2xvcjtcclxuICAgICAgICBib3JkZXItY29sb3I6ICRzZWNvbmRhcnktY29sb3I7XHJcbiAgICB9XHJcbn1cclxuIiwiI25nLWNoYXQubGlnaHQtdGhlbWUgLnByaW1hcnktdGV4dCwgI25nLWNoYXQubGlnaHQtdGhlbWUge1xuICBjb2xvcjogIzVDNUM1QztcbiAgZm9udC1mYW1pbHk6IEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XG59XG5cbiNuZy1jaGF0LmxpZ2h0LXRoZW1lIC5wcmltYXJ5LWJhY2tncm91bmQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xufVxuI25nLWNoYXQubGlnaHQtdGhlbWUgLnNlY29uZGFyeS1iYWNrZ3JvdW5kIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZBRkFGQTtcbn1cbiNuZy1jaGF0LmxpZ2h0LXRoZW1lIC5wcmltYXJ5LW91dGxpbmUtY29sb3Ige1xuICBib3JkZXItY29sb3I6ICNBM0EzQTM7XG59XG4jbmctY2hhdC5saWdodC10aGVtZSAuZnJpZW5kcy1zZWFyY2gtYmFyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRjtcbn1cbiNuZy1jaGF0LmxpZ2h0LXRoZW1lIC51bnJlYWQtbWVzc2FnZXMtY291bnRlci1jb250YWluZXIsICNuZy1jaGF0LmxpZ2h0LXRoZW1lIC5uZy1jaGF0LXBlb3BsZS1hY3Rpb24sICNuZy1jaGF0LmxpZ2h0LXRoZW1lIC5uZy1jaGF0LXBlb3BsZS1hY3Rpb24gPiBpIHtcbiAgY29sb3I6ICM1QzVDNUM7XG4gIGJhY2tncm91bmQtY29sb3I6ICNFM0UzRTM7XG59XG4jbmctY2hhdC5saWdodC10aGVtZSAubG9hZC1oaXN0b3J5LWFjdGlvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNFM0UzRTM7XG59XG4jbmctY2hhdC5saWdodC10aGVtZSAuY2hhdC13aW5kb3ctaW5wdXQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xufVxuI25nLWNoYXQubGlnaHQtdGhlbWUgLnNlbnQtY2hhdC1tZXNzYWdlLWNvbnRhaW5lciwgI25nLWNoYXQubGlnaHQtdGhlbWUgLmZpbGUtbWVzc2FnZS1jb250YWluZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTNFM0UzO1xuICBib3JkZXItY29sb3I6ICNFM0UzRTM7XG59XG4jbmctY2hhdC5saWdodC10aGVtZSAucmVjZWl2ZWQtY2hhdC1tZXNzYWdlLWNvbnRhaW5lciwgI25nLWNoYXQubGlnaHQtdGhlbWUgLmZpbGUtbWVzc2FnZS1jb250YWluZXIucmVjZWl2ZWQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xuICBib3JkZXItY29sb3I6ICNFM0UzRTM7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\", \"#ng-chat.dark-theme .primary-text, #ng-chat.dark-theme {\\n  color: #FFF;\\n  font-family: Arial, Helvetica, sans-serif;\\n}\\n\\n#ng-chat.dark-theme .primary-background {\\n  background-color: #565656;\\n}\\n#ng-chat.dark-theme .secondary-background {\\n  background-color: #444;\\n}\\n#ng-chat.dark-theme .primary-outline-color {\\n  border-color: #353535;\\n}\\n#ng-chat.dark-theme .friends-search-bar {\\n  background-color: #444;\\n  border: 1px solid #444;\\n  color: #FFF;\\n}\\n#ng-chat.dark-theme .unread-messages-counter-container, #ng-chat.dark-theme .ng-chat-people-action, #ng-chat.dark-theme .ng-chat-people-action > i {\\n  background-color: #FFF;\\n  color: #444;\\n}\\n#ng-chat.dark-theme .load-history-action {\\n  background-color: #444;\\n}\\n#ng-chat.dark-theme .chat-window-input {\\n  background-color: #444;\\n  color: #FFF;\\n}\\n#ng-chat.dark-theme .sent-chat-message-container, #ng-chat.dark-theme .file-message-container {\\n  border-color: #444;\\n  background-color: #444;\\n}\\n#ng-chat.dark-theme .received-chat-message-container, #ng-chat.dark-theme .file-message-container.received {\\n  background-color: #565656;\\n  border-color: #444;\\n}\\n#ng-chat.dark-theme .ng-chat-footer {\\n  background-color: #444;\\n}\\n#ng-chat.dark-theme .ng-chat-message a {\\n  color: #FFF;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9uZy1jaGF0L2Fzc2V0cy90aGVtZXMvbmctY2hhdC50aGVtZS5kYXJrLnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi8uLi9WUyUyMFByb2plY3QvbmctY2hhdC9zcmMvbmctY2hhdC9hc3NldHMvdGhlbWVzL25nLWNoYXQudGhlbWUuZGFyay5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUlBO0VBQ0ksV0FIUztFQUlULHlDQUFBO0FDSEo7O0FEVUk7RUFFSSx5QkFmUTtBQ09oQjtBRFVJO0VBRUksc0JBbEJVO0FDU2xCO0FEV0k7RUFFSSxxQkFBQTtBQ1ZSO0FEZ0JJO0VBRUksc0JBOUJVO0VBK0JWLHNCQUFBO0VBQ0EsV0EvQks7QUNnQmI7QURpQkk7RUFFSSxzQkFuQ0s7RUFvQ0wsV0FyQ1U7QUNxQmxCO0FEa0JJO0VBRUksc0JBekNVO0FDd0JsQjtBRG1CSTtFQUVJLHNCQTdDVTtFQThDVixXQTdDSztBQzJCYjtBRG9CSTtFQUVJLGtCQWxEVTtFQW1EVixzQkFuRFU7QUNnQ2xCO0FEcUJJO0VBRUkseUJBeERRO0VBeURSLGtCQXhEVTtBQ29DbEI7QURzQkk7RUFFSSxzQkE1RFU7QUN1Q2xCO0FEdUJJO0VBRUksV0EvREs7QUN5Q2IiLCJzb3VyY2VzQ29udGVudCI6WyIkcHJpbWFyeS1jb2xvcjogIzU2NTY1NjtcclxuJHNlY29uZGFyeS1jb2xvcjogIzQ0NDtcclxuJHRleHQtY29sb3I6ICNGRkY7XHJcblxyXG4ldGV4dC1kZWZpbml0aW9uIHtcclxuICAgIGNvbG9yOiAkdGV4dC1jb2xvcjtcclxuICAgIGZvbnQtZmFtaWx5OiBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xyXG59XHJcblxyXG4jbmctY2hhdC5kYXJrLXRoZW1lXHJcbntcclxuICAgIEBleHRlbmQgJXRleHQtZGVmaW5pdGlvbjtcclxuXHJcbiAgICAucHJpbWFyeS1iYWNrZ3JvdW5kXHJcbiAgICB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHByaW1hcnktY29sb3I7XHJcbiAgICB9XHJcbiAgICAuc2Vjb25kYXJ5LWJhY2tncm91bmRcclxuICAgIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kYXJ5LWNvbG9yO1xyXG4gICAgfVxyXG4gICAgLnByaW1hcnktb3V0bGluZS1jb2xvclxyXG4gICAge1xyXG4gICAgICAgIGJvcmRlci1jb2xvcjojMzUzNTM1O1xyXG4gICAgfVxyXG4gICAgLnByaW1hcnktdGV4dFxyXG4gICAge1xyXG4gICAgICAgIEBleHRlbmQgJXRleHQtZGVmaW5pdGlvbjtcclxuICAgIH1cclxuICAgIC5mcmllbmRzLXNlYXJjaC1iYXJcclxuICAgIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kYXJ5LWNvbG9yO1xyXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICRzZWNvbmRhcnktY29sb3I7XHJcbiAgICAgICAgY29sb3I6ICR0ZXh0LWNvbG9yO1xyXG4gICAgfVxyXG4gICAgLnVucmVhZC1tZXNzYWdlcy1jb3VudGVyLWNvbnRhaW5lciwgLm5nLWNoYXQtcGVvcGxlLWFjdGlvbiwgLm5nLWNoYXQtcGVvcGxlLWFjdGlvbiA+IGlcclxuICAgIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkdGV4dC1jb2xvcjtcclxuICAgICAgICBjb2xvcjogJHNlY29uZGFyeS1jb2xvcjtcclxuICAgIH1cclxuICAgIC5sb2FkLWhpc3RvcnktYWN0aW9uXHJcbiAgICB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1jb2xvcjtcclxuICAgIH1cclxuICAgIC5jaGF0LXdpbmRvdy1pbnB1dFxyXG4gICAge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWNvbmRhcnktY29sb3I7XHJcbiAgICAgICAgY29sb3I6ICR0ZXh0LWNvbG9yO1xyXG4gICAgfVxyXG4gICAgLnNlbnQtY2hhdC1tZXNzYWdlLWNvbnRhaW5lciwgLmZpbGUtbWVzc2FnZS1jb250YWluZXJcclxuICAgIHtcclxuICAgICAgICBib3JkZXItY29sb3I6ICRzZWNvbmRhcnktY29sb3I7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1jb2xvcjtcclxuICAgIH1cclxuICAgIC5yZWNlaXZlZC1jaGF0LW1lc3NhZ2UtY29udGFpbmVyLCAuZmlsZS1tZXNzYWdlLWNvbnRhaW5lci5yZWNlaXZlZFxyXG4gICAge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRwcmltYXJ5LWNvbG9yO1xyXG4gICAgICAgIGJvcmRlci1jb2xvcjogJHNlY29uZGFyeS1jb2xvcjtcclxuICAgIH1cclxuICAgIC5uZy1jaGF0LWZvb3RlclxyXG4gICAge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWNvbmRhcnktY29sb3I7XHJcbiAgICB9XHJcbiAgICAubmctY2hhdC1tZXNzYWdlIGEgXHJcbiAgICB7XHJcbiAgICAgICAgY29sb3I6ICR0ZXh0LWNvbG9yO1xyXG4gICAgfVxyXG59XHJcbiIsIiNuZy1jaGF0LmRhcmstdGhlbWUgLnByaW1hcnktdGV4dCwgI25nLWNoYXQuZGFyay10aGVtZSB7XG4gIGNvbG9yOiAjRkZGO1xuICBmb250LWZhbWlseTogQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcbn1cblxuI25nLWNoYXQuZGFyay10aGVtZSAucHJpbWFyeS1iYWNrZ3JvdW5kIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzU2NTY1Njtcbn1cbiNuZy1jaGF0LmRhcmstdGhlbWUgLnNlY29uZGFyeS1iYWNrZ3JvdW5kIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzQ0NDtcbn1cbiNuZy1jaGF0LmRhcmstdGhlbWUgLnByaW1hcnktb3V0bGluZS1jb2xvciB7XG4gIGJvcmRlci1jb2xvcjogIzM1MzUzNTtcbn1cbiNuZy1jaGF0LmRhcmstdGhlbWUgLmZyaWVuZHMtc2VhcmNoLWJhciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM0NDQ7XG4gIGJvcmRlcjogMXB4IHNvbGlkICM0NDQ7XG4gIGNvbG9yOiAjRkZGO1xufVxuI25nLWNoYXQuZGFyay10aGVtZSAudW5yZWFkLW1lc3NhZ2VzLWNvdW50ZXItY29udGFpbmVyLCAjbmctY2hhdC5kYXJrLXRoZW1lIC5uZy1jaGF0LXBlb3BsZS1hY3Rpb24sICNuZy1jaGF0LmRhcmstdGhlbWUgLm5nLWNoYXQtcGVvcGxlLWFjdGlvbiA+IGkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xuICBjb2xvcjogIzQ0NDtcbn1cbiNuZy1jaGF0LmRhcmstdGhlbWUgLmxvYWQtaGlzdG9yeS1hY3Rpb24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDQ0O1xufVxuI25nLWNoYXQuZGFyay10aGVtZSAuY2hhdC13aW5kb3ctaW5wdXQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDQ0O1xuICBjb2xvcjogI0ZGRjtcbn1cbiNuZy1jaGF0LmRhcmstdGhlbWUgLnNlbnQtY2hhdC1tZXNzYWdlLWNvbnRhaW5lciwgI25nLWNoYXQuZGFyay10aGVtZSAuZmlsZS1tZXNzYWdlLWNvbnRhaW5lciB7XG4gIGJvcmRlci1jb2xvcjogIzQ0NDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzQ0NDtcbn1cbiNuZy1jaGF0LmRhcmstdGhlbWUgLnJlY2VpdmVkLWNoYXQtbWVzc2FnZS1jb250YWluZXIsICNuZy1jaGF0LmRhcmstdGhlbWUgLmZpbGUtbWVzc2FnZS1jb250YWluZXIucmVjZWl2ZWQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTY1NjU2O1xuICBib3JkZXItY29sb3I6ICM0NDQ7XG59XG4jbmctY2hhdC5kYXJrLXRoZW1lIC5uZy1jaGF0LWZvb3RlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM0NDQ7XG59XG4jbmctY2hhdC5kYXJrLXRoZW1lIC5uZy1jaGF0LW1lc3NhZ2UgYSB7XG4gIGNvbG9yOiAjRkZGO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"],\n  encapsulation: 2\n});","map":{"version":3,"names":["EventEmitter","MessageType","Window","ChatParticipantStatus","ScrollDirection","PagedHistoryChatAdapter","DefaultFileUploadAdapter","Theme","Group","ChatParticipantType","map","i0","ɵɵelement","ɵɵproperty","ɵɵpipeBind1","ctx_r0","customTheme","ɵɵsanitizeResourceUrl","ɵɵelementStart","ɵɵlistener","NgChat_div_1_div_2_Template_ng_chat_window_onMessagesSeen_1_listener","$event","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","onWindowMessagesSeen","NgChat_div_1_div_2_Template_ng_chat_window_onMessageSent_1_listener","ctx_r8","onWindowMessageSent","NgChat_div_1_div_2_Template_ng_chat_window_onTabTriggered_1_listener","ctx_r9","onWindowTabTriggered","NgChat_div_1_div_2_Template_ng_chat_window_onChatWindowClosed_1_listener","ctx_r10","onWindowChatClosed","NgChat_div_1_div_2_Template_ng_chat_window_onOptionTriggered_1_listener","ctx_r11","onWindowOptionTriggered","NgChat_div_1_div_2_Template_ng_chat_window_onLoadHistoryTriggered_1_listener","ctx_r12","fetchMessageHistory","ɵɵelementEnd","ɵɵpureFunction1","_c1","window_r3","isCollapsed","_c2","ctx_r2","hideFriendsList","friendsListWidth","windowSizeFactor","i_r4","ɵɵadvance","fileUploadAdapter","localization","userId","groupAdapter","emojisEnabled","linkfyEnabled","showMessageDate","messageDatePipeFormat","hasPagedHistory","NgChat_div_1_Template_ng_chat_friends_list_onParticipantClicked_1_listener","_r14","ctx_r13","onParticipantClickedFromFriendsList","NgChat_div_1_Template_ng_chat_friends_list_onOptionPromptCanceled_1_listener","ctx_r15","onOptionPromptCanceled","NgChat_div_1_Template_ng_chat_friends_list_onOptionPromptConfirmed_1_listener","ctx_r16","onOptionPromptConfirmed","ɵɵtemplate","NgChat_div_1_div_2_Template","ctx_r1","theme","searchEnabled","participants","participantsResponse","participantsInteractedWith","windows","currentActiveOption","NgChat","constructor","_httpClient","_isDisabled","maximizeWindowOnNewMessage","pollFriendsList","pollingInterval","historyEnabled","audioEnabled","audioSource","persistWindowsState","title","messagePlaceholder","searchPlaceholder","browserNotificationsEnabled","browserNotificationIconSource","browserNotificationTitle","historyPageSize","hideFriendsListOnUnsupportedViewport","Light","isViewportOnMobileEnabled","onParticipantClicked","onParticipantChatOpened","onParticipantChatClosed","onMessagesSeen","browserNotificationsBootstrapped","statusDescription","online","busy","away","offline","unsupportedViewport","isBootstrapped","isDisabled","value","window","clearInterval","pollingIntervalWindowInstance","activateFriendListFetch","localStorageKey","ngOnInit","bootstrapChat","onResize","event","viewPortTotalArea","target","innerWidth","NormalizeWindows","maxSupportedOpenedWindows","Math","floor","difference","length","splice","updateWindowsState","initializationException","adapter","initializeTheme","initializeDefaultText","initializeBrowserNotifications","messageReceivedHandler","participant","msg","onMessageReceived","friendsListChangedHandler","onFriendsListChanged","bufferAudioFile","fileUploadUrl","ex","console","error","message","fetchFriendsList","setInterval","_this","_asyncToGenerator","Notification","requestPermission","loadMessageHistoryPlaceholder","Custom","Dark","Error","isBootstrapping","listFriends","pipe","response","subscribe","restoreWindowsState","isLoadingHistory","getMessageHistoryByPage","id","historyPage","result","forEach","assertMessageType","messages","concat","direction","Bottom","Top","hasMoreMessages","setTimeout","onFetchMessageHistoryLoaded","getMessageHistory","forceMarkMessagesAsSeen","scrollChatWindow","hasFocus","unseenMessages","filter","m","dateSeen","markMessagesAsRead","chatWindow","openChatWindow","push","emitMessageSound","emitBrowserNotification","cancelOptionPrompt","isActive","confirmNewGroup","users","newGroup","groupCreated","focusOnNewWindow","invokedByUserClick","openedWindow","find","x","emit","collapseWindow","newChatWindow","unshift","pop","focusOnWindow","callback","windowIndex","indexOf","chatWindows","chatWindowToFocus","toArray","chatWindowInput","nativeElement","focus","type","Text","currentDate","Date","audioFile","Audio","src","load","play","notification","displayName","close","participantIds","w","localStorage","setItem","JSON","stringify","stringfiedParticipantIds","getItem","parse","participantsToRestore","u","getClosestWindow","index","closeWindow","getChatWindowComponentInstance","targetWindow","messagesSeen","payload","closedWindow","closedViaEscapeKey","closestWindow","triggeringWindow","shiftKeyPressed","currentWindowIndex","windowToFocus","messageSent","sendMessage","option","triggerOpenChatWindow","user","triggerCloseChatWindow","triggerToggleChatWindowVisibility","onChatWindowClicked","ɵɵdirectiveInject","i1","HttpClient","selectors","viewQuery","NgChat_Query","rf","ctx","ɵɵresolveWindow","NgChat_link_0_Template","NgChat_div_1_Template"],"sources":["D:\\VS Project\\ng-chat\\src\\ng-chat\\ng-chat.component.ts","D:\\VS Project\\ng-chat\\src\\ng-chat\\ng-chat.component.html"],"sourcesContent":["import { Component, Input, OnInit, ViewChildren, QueryList, HostListener, Output, EventEmitter, ViewEncapsulation } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { ChatAdapter } from './core/chat-adapter';\r\nimport { IChatGroupAdapter } from './core/chat-group-adapter';\r\nimport { User } from \"./core/user\";\r\nimport { ParticipantResponse } from \"./core/participant-response\";\r\nimport { Message } from \"./core/message\";\r\nimport { MessageType } from \"./core/message-type.enum\";\r\nimport { Window } from \"./core/window\";\r\nimport { ChatParticipantStatus } from \"./core/chat-participant-status.enum\";\r\nimport { ScrollDirection } from \"./core/scroll-direction.enum\";\r\nimport { Localization, StatusDescription } from './core/localization';\r\nimport { IChatController } from './core/chat-controller';\r\nimport { PagedHistoryChatAdapter } from './core/paged-history-chat-adapter';\r\nimport { IFileUploadAdapter } from './core/file-upload-adapter';\r\nimport { DefaultFileUploadAdapter } from './core/default-file-upload-adapter';\r\nimport { Theme } from './core/theme.enum';\r\nimport { IChatOption } from './core/chat-option';\r\nimport { Group } from \"./core/group\";\r\nimport { ChatParticipantType } from \"./core/chat-participant-type.enum\";\r\nimport { IChatParticipant } from \"./core/chat-participant\";\r\n\r\nimport { map } from 'rxjs/operators';\r\nimport { NgChatWindowComponent } from './components/ng-chat-window/ng-chat-window.component';\r\n\r\n@Component({\r\n    selector: 'ng-chat',\r\n    templateUrl: 'ng-chat.component.html',\r\n    styleUrls: [\r\n        'assets/icons.css',\r\n        'assets/loading-spinner.css',\r\n        'assets/ng-chat.component.default.css',\r\n        'assets/themes/ng-chat.theme.default.scss',\r\n        'assets/themes/ng-chat.theme.dark.scss'\r\n    ],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class NgChat implements OnInit, IChatController {\r\n    constructor(private _httpClient: HttpClient) { }\r\n\r\n    // Exposes enums for the ng-template\r\n    public ChatParticipantType = ChatParticipantType;\r\n    public ChatParticipantStatus = ChatParticipantStatus;\r\n    public MessageType = MessageType;\r\n\r\n    private _isDisabled: boolean = false;\r\n\r\n    get isDisabled(): boolean {\r\n        return this._isDisabled;\r\n    }\r\n\r\n    @Input()\r\n    set isDisabled(value: boolean) {\r\n        this._isDisabled = value;\r\n\r\n        if (value)\r\n        {\r\n            // To address issue https://github.com/rpaschoal/ng-chat/issues/120\r\n            window.clearInterval(this.pollingIntervalWindowInstance)\r\n        }\r\n        else\r\n        {\r\n            this.activateFriendListFetch();\r\n        }\r\n    }\r\n\r\n    @Input()\r\n    public adapter: ChatAdapter;\r\n\r\n    @Input()\r\n    public groupAdapter: IChatGroupAdapter;\r\n\r\n    @Input()\r\n    public userId: any;\r\n\r\n    @Input()\r\n    public isCollapsed: boolean = false;\r\n\r\n    @Input()\r\n    public maximizeWindowOnNewMessage: boolean = true;\r\n\r\n    @Input()\r\n    public pollFriendsList: boolean = false;\r\n\r\n    @Input()\r\n    public pollingInterval: number = 5000;\r\n\r\n    @Input()\r\n    public historyEnabled: boolean = true;\r\n\r\n    @Input()\r\n    public emojisEnabled: boolean = true;\r\n\r\n    @Input()\r\n    public linkfyEnabled: boolean = true;\r\n\r\n    @Input()\r\n    public audioEnabled: boolean = true;\r\n\r\n    @Input()\r\n    public searchEnabled: boolean = true;\r\n\r\n    @Input() // TODO: This might need a better content strategy\r\n    public audioSource: string = 'https://raw.githubusercontent.com/rpaschoal/ng-chat/master/src/ng-chat/assets/notification.wav';\r\n\r\n    @Input()\r\n    public persistWindowsState: boolean = true;\r\n\r\n    @Input()\r\n    public title: string = \"Friends\";\r\n\r\n    @Input()\r\n    public messagePlaceholder: string = \"Type a message\";\r\n\r\n    @Input()\r\n    public searchPlaceholder: string = \"Search\";\r\n\r\n    @Input()\r\n    public browserNotificationsEnabled: boolean = true;\r\n\r\n    @Input() // TODO: This might need a better content strategy\r\n    public browserNotificationIconSource: string = 'https://raw.githubusercontent.com/rpaschoal/ng-chat/master/src/ng-chat/assets/notification.png';\r\n\r\n    @Input()\r\n    public browserNotificationTitle: string = \"New message from\";\r\n\r\n    @Input()\r\n    public historyPageSize: number = 10;\r\n\r\n    @Input()\r\n    public localization: Localization;\r\n\r\n    @Input()\r\n    public hideFriendsList: boolean = false;\r\n\r\n    @Input()\r\n    public hideFriendsListOnUnsupportedViewport: boolean = true;\r\n\r\n    @Input()\r\n    public fileUploadUrl: string;\r\n\r\n    @Input()\r\n    public theme: Theme = Theme.Light;\r\n\r\n    @Input()\r\n    public customTheme: string;\r\n\r\n    @Input()\r\n    public messageDatePipeFormat: string = \"short\";\r\n\r\n    @Input()\r\n    public showMessageDate: boolean = true;\r\n\r\n    @Input()\r\n    public isViewportOnMobileEnabled: boolean = false;\r\n\r\n    @Input()\r\n    public fileUploadAdapter: IFileUploadAdapter;\r\n\r\n    @Output()\r\n    public onParticipantClicked: EventEmitter<IChatParticipant> = new EventEmitter<IChatParticipant>();\r\n\r\n    @Output()\r\n    public onParticipantChatOpened: EventEmitter<IChatParticipant> = new EventEmitter<IChatParticipant>();\r\n\r\n    @Output()\r\n    public onParticipantChatClosed: EventEmitter<IChatParticipant> = new EventEmitter<IChatParticipant>();\r\n\r\n    @Output()\r\n    public onMessagesSeen: EventEmitter<Message[]> = new EventEmitter<Message[]>();\r\n\r\n    private browserNotificationsBootstrapped: boolean = false;\r\n\r\n    public hasPagedHistory: boolean = false;\r\n\r\n    // Don't want to add this as a setting to simplify usage. Previous placeholder and title settings available to be used, or use full Localization object.\r\n    private statusDescription: StatusDescription = {\r\n        online: 'Online',\r\n        busy: 'Busy',\r\n        away: 'Away',\r\n        offline: 'Offline'\r\n    };\r\n\r\n    private audioFile: HTMLAudioElement;\r\n\r\n    public participants: IChatParticipant[];\r\n\r\n    public participantsResponse: ParticipantResponse[];\r\n\r\n    public participantsInteractedWith: IChatParticipant[] = [];\r\n\r\n    public currentActiveOption: IChatOption | null;\r\n\r\n    private pollingIntervalWindowInstance: number;\r\n\r\n    private get localStorageKey(): string\r\n    {\r\n        return `ng-chat-users-${this.userId}`; // Appending the user id so the state is unique per user in a computer.\r\n    };\r\n\r\n    // Defines the size of each opened window to calculate how many windows can be opened on the viewport at the same time.\r\n    public windowSizeFactor: number = 320;\r\n\r\n    // Total width size of the friends list section\r\n    public friendsListWidth: number = 262;\r\n\r\n    // Available area to render the plugin\r\n    private viewPortTotalArea: number;\r\n\r\n    // Set to true if there is no space to display at least one chat window and 'hideFriendsListOnUnsupportedViewport' is true\r\n    public unsupportedViewport: boolean = false;\r\n\r\n    windows: Window[] = [];\r\n    isBootstrapped: boolean = false;\r\n\r\n    @ViewChildren('chatWindow') chatWindows: QueryList<NgChatWindowComponent>;\r\n\r\n    ngOnInit() {\r\n        this.bootstrapChat();\r\n    }\r\n\r\n    @HostListener('window:resize', ['$event'])\r\n    onResize(event: any){\r\n       this.viewPortTotalArea = event.target.innerWidth;\r\n\r\n       this.NormalizeWindows();\r\n    }\r\n\r\n    // Checks if there are more opened windows than the view port can display\r\n    private NormalizeWindows(): void\r\n    {\r\n        const maxSupportedOpenedWindows = Math.floor((this.viewPortTotalArea - (!this.hideFriendsList ? this.friendsListWidth : 0)) / this.windowSizeFactor);\r\n        const difference = this.windows.length - maxSupportedOpenedWindows;\r\n\r\n        if (difference >= 0)\r\n        {\r\n            this.windows.splice(this.windows.length - difference);\r\n        }\r\n\r\n        this.updateWindowsState(this.windows);\r\n\r\n        // Viewport should have space for at least one chat window but should show in mobile if option is enabled.\r\n        this.unsupportedViewport = this.isViewportOnMobileEnabled? false : this.hideFriendsListOnUnsupportedViewport && maxSupportedOpenedWindows < 1;\r\n    }\r\n\r\n    // Initializes the chat plugin and the messaging adapter\r\n    private bootstrapChat(): void\r\n    {\r\n        let initializationException = null;\r\n\r\n        if (this.adapter != null && this.userId != null)\r\n        {\r\n            try\r\n            {\r\n                this.viewPortTotalArea = window.innerWidth;\r\n\r\n                this.initializeTheme();\r\n                this.initializeDefaultText();\r\n                this.initializeBrowserNotifications();\r\n\r\n                // Binding event listeners\r\n                this.adapter.messageReceivedHandler = (participant, msg) => this.onMessageReceived(participant, msg);\r\n                this.adapter.friendsListChangedHandler = (participantsResponse) => this.onFriendsListChanged(participantsResponse);\r\n\r\n                this.activateFriendListFetch();\r\n\r\n                this.bufferAudioFile();\r\n\r\n                this.hasPagedHistory = this.adapter instanceof PagedHistoryChatAdapter;\r\n\r\n                if (this.fileUploadUrl && this.fileUploadUrl !== \"\")\r\n                {\r\n                    this.fileUploadAdapter = new DefaultFileUploadAdapter(this.fileUploadUrl, this._httpClient);\r\n                }\r\n\r\n                this.NormalizeWindows();\r\n\r\n                this.isBootstrapped = true;\r\n            }\r\n            catch(ex)\r\n            {\r\n                initializationException = ex;\r\n            }\r\n        }\r\n\r\n        if (!this.isBootstrapped){\r\n            console.error(\"ng-chat component couldn't be bootstrapped.\");\r\n\r\n            if (this.userId == null){\r\n                console.error(\"ng-chat can't be initialized without an user id. Please make sure you've provided an userId as a parameter of the ng-chat component.\");\r\n            }\r\n            if (this.adapter == null){\r\n                console.error(\"ng-chat can't be bootstrapped without a ChatAdapter. Please make sure you've provided a ChatAdapter implementation as a parameter of the ng-chat component.\");\r\n            }\r\n            if (initializationException)\r\n            {\r\n                console.error(`An exception has occurred while initializing ng-chat. Details: ${initializationException.message}`);\r\n                console.error(initializationException);\r\n            }\r\n        }\r\n    }\r\n\r\n    private activateFriendListFetch(): void {\r\n        if (this.adapter)\r\n        {\r\n            // Loading current users list\r\n            if (this.pollFriendsList){\r\n                // Setting a long poll interval to update the friends list\r\n                this.fetchFriendsList(true);\r\n                this.pollingIntervalWindowInstance = window.setInterval(() => this.fetchFriendsList(false), this.pollingInterval);\r\n            }\r\n            else\r\n            {\r\n                // Since polling was disabled, a friends list update mechanism will have to be implemented in the ChatAdapter.\r\n                this.fetchFriendsList(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Initializes browser notifications\r\n    private async initializeBrowserNotifications()\r\n    {\r\n        if (this.browserNotificationsEnabled && (\"Notification\" in window))\r\n        {\r\n            if (await Notification.requestPermission() === \"granted\")\r\n            {\r\n                this.browserNotificationsBootstrapped = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Initializes default text\r\n    private initializeDefaultText() : void\r\n    {\r\n        if (!this.localization)\r\n        {\r\n            this.localization = {\r\n                messagePlaceholder: this.messagePlaceholder,\r\n                searchPlaceholder: this.searchPlaceholder,\r\n                title: this.title,\r\n                statusDescription: this.statusDescription,\r\n                browserNotificationTitle: this.browserNotificationTitle,\r\n                loadMessageHistoryPlaceholder: \"Load older messages\"\r\n            };\r\n        }\r\n    }\r\n\r\n    private initializeTheme(): void\r\n    {\r\n        if (this.customTheme)\r\n        {\r\n            this.theme = Theme.Custom;\r\n        }\r\n        else if (this.theme != Theme.Light && this.theme != Theme.Dark)\r\n        {\r\n            // TODO: Use es2017 in future with Object.values(Theme).includes(this.theme) to do this check\r\n            throw new Error(`Invalid theme configuration for ng-chat. \"${this.theme}\" is not a valid theme value.`);\r\n        }\r\n    }\r\n\r\n    // Sends a request to load the friends list\r\n    private fetchFriendsList(isBootstrapping: boolean): void\r\n    {\r\n        this.adapter.listFriends()\r\n        .pipe(\r\n            map((participantsResponse: ParticipantResponse[]) => {\r\n                this.participantsResponse = participantsResponse;\r\n\r\n                this.participants = participantsResponse.map((response: ParticipantResponse) => {\r\n                    return response.participant;\r\n                });\r\n            })\r\n        ).subscribe(() => {\r\n            if (isBootstrapping)\r\n            {\r\n                this.restoreWindowsState();\r\n            }\r\n        });\r\n    }\r\n\r\n    fetchMessageHistory(window: Window) {\r\n        // Not ideal but will keep this until we decide if we are shipping pagination with the default adapter\r\n        if (this.adapter instanceof PagedHistoryChatAdapter)\r\n        {\r\n            window.isLoadingHistory = true;\r\n\r\n            this.adapter.getMessageHistoryByPage(window.participant.id, this.historyPageSize, ++window.historyPage)\r\n            .pipe(\r\n                map((result: Message[]) => {\r\n                    result.forEach((message) => this.assertMessageType(message));\r\n\r\n                    window.messages = result.concat(window.messages);\r\n                    window.isLoadingHistory = false;\r\n\r\n                    const direction: ScrollDirection = (window.historyPage == 1) ? ScrollDirection.Bottom : ScrollDirection.Top;\r\n                    window.hasMoreMessages = result.length == this.historyPageSize;\r\n\r\n                    setTimeout(() => this.onFetchMessageHistoryLoaded(result, window, direction, true));\r\n                })\r\n            ).subscribe();\r\n        }\r\n        else\r\n        {\r\n            this.adapter.getMessageHistory(window.participant.id)\r\n            .pipe(\r\n                map((result: Message[]) => {\r\n                    result.forEach((message) => this.assertMessageType(message));\r\n\r\n                    window.messages = result.concat(window.messages);\r\n                    window.isLoadingHistory = false;\r\n\r\n                    setTimeout(() => this.onFetchMessageHistoryLoaded(result, window, ScrollDirection.Bottom));\r\n                })\r\n            ).subscribe();\r\n        }\r\n    }\r\n\r\n    private onFetchMessageHistoryLoaded(messages: Message[], window: Window, direction: ScrollDirection, forceMarkMessagesAsSeen: boolean = false): void\r\n    {\r\n        this.scrollChatWindow(window, direction)\r\n\r\n        if (window.hasFocus || forceMarkMessagesAsSeen)\r\n        {\r\n            const unseenMessages = messages.filter(m => !m.dateSeen);\r\n\r\n            this.markMessagesAsRead(unseenMessages);\r\n        }\r\n    }\r\n\r\n    // Updates the friends list via the event handler\r\n    private onFriendsListChanged(participantsResponse: ParticipantResponse[]): void\r\n    {\r\n        if (participantsResponse)\r\n        {\r\n            this.participantsResponse = participantsResponse;\r\n\r\n            this.participants = participantsResponse.map((response: ParticipantResponse) => {\r\n                return response.participant;\r\n            });\r\n\r\n            this.participantsInteractedWith = [];\r\n        }\r\n    }\r\n\r\n    // Handles received messages by the adapter\r\n    private onMessageReceived(participant: IChatParticipant, message: Message)\r\n    {\r\n        if (participant && message)\r\n        {\r\n            const chatWindow = this.openChatWindow(participant);\r\n\r\n            this.assertMessageType(message);\r\n\r\n            if (!chatWindow[1] || !this.historyEnabled){\r\n                chatWindow[0].messages.push(message);\r\n\r\n                this.scrollChatWindow(chatWindow[0], ScrollDirection.Bottom);\r\n\r\n                if (chatWindow[0].hasFocus)\r\n                {\r\n                    this.markMessagesAsRead([message]);\r\n                }\r\n            }\r\n\r\n            this.emitMessageSound(chatWindow[0]);\r\n\r\n            // Github issue #58\r\n            // Do not push browser notifications with message content for privacy purposes if the 'maximizeWindowOnNewMessage' setting is off and this is a new chat window.\r\n            if (this.maximizeWindowOnNewMessage || (!chatWindow[1] && !chatWindow[0].isCollapsed))\r\n            {\r\n                // Some messages are not pushed because they are loaded by fetching the history hence why we supply the message here\r\n                this.emitBrowserNotification(chatWindow[0], message);\r\n            }\r\n        }\r\n    }\r\n\r\n    onParticipantClickedFromFriendsList(participant: IChatParticipant): void {\r\n        this.openChatWindow(participant, true, true);\r\n    }\r\n\r\n    private cancelOptionPrompt(): void {\r\n        if (this.currentActiveOption)\r\n        {\r\n            this.currentActiveOption.isActive = false;\r\n            this.currentActiveOption = null;\r\n        }\r\n    }\r\n\r\n    onOptionPromptCanceled(): void {\r\n        this.cancelOptionPrompt();\r\n    }\r\n\r\n    onOptionPromptConfirmed(event: any): void {\r\n        // For now this is fine as there is only one option available. Introduce option types and type checking if a new option is added.\r\n        this.confirmNewGroup(event);\r\n\r\n        // Canceling current state\r\n        this.cancelOptionPrompt();\r\n    }\r\n\r\n    private confirmNewGroup(users: User[]): void {\r\n        const newGroup = new Group(users);\r\n\r\n        this.openChatWindow(newGroup);\r\n\r\n        if (this.groupAdapter)\r\n        {\r\n            this.groupAdapter.groupCreated(newGroup);\r\n        }\r\n    }\r\n\r\n    // Opens a new chat whindow. Takes care of available viewport\r\n    // Works for opening a chat window for an user or for a group\r\n    // Returns => [Window: Window object reference, boolean: Indicates if this window is a new chat window]\r\n    private openChatWindow(participant: IChatParticipant, focusOnNewWindow: boolean = false, invokedByUserClick: boolean = false): [Window, boolean]\r\n    {\r\n        // Is this window opened?\r\n        const openedWindow = this.windows.find(x => x.participant.id == participant.id);\r\n\r\n        if (!openedWindow)\r\n        {\r\n            if (invokedByUserClick)\r\n            {\r\n                this.onParticipantClicked.emit(participant);\r\n            }\r\n\r\n            // Refer to issue #58 on Github\r\n            const collapseWindow = invokedByUserClick ? false : !this.maximizeWindowOnNewMessage;\r\n\r\n            const newChatWindow: Window = new Window(participant, this.historyEnabled, collapseWindow);\r\n\r\n            // Loads the chat history via an RxJs Observable\r\n            if (this.historyEnabled)\r\n            {\r\n                this.fetchMessageHistory(newChatWindow);\r\n            }\r\n\r\n            this.windows.unshift(newChatWindow);\r\n\r\n            // Is there enough space left in the view port ? but should be displayed in mobile if option is enabled\r\n            if (!this.isViewportOnMobileEnabled) {\r\n                if (this.windows.length * this.windowSizeFactor >= this.viewPortTotalArea - (!this.hideFriendsList ? this.friendsListWidth : 0)) {\r\n                    this.windows.pop();\r\n                }\r\n            }\r\n\r\n            this.updateWindowsState(this.windows);\r\n\r\n            if (focusOnNewWindow && !collapseWindow)\r\n            {\r\n                this.focusOnWindow(newChatWindow);\r\n            }\r\n\r\n            this.participantsInteractedWith.push(participant);\r\n            this.onParticipantChatOpened.emit(participant);\r\n\r\n            return [newChatWindow, true];\r\n        }\r\n        else\r\n        {\r\n            // Returns the existing chat window\r\n            return [openedWindow, false];\r\n        }\r\n    }\r\n\r\n    // Focus on the input element of the supplied window\r\n    private focusOnWindow(window: Window, callback: Function = () => {}) : void\r\n    {\r\n        const windowIndex = this.windows.indexOf(window);\r\n        if (windowIndex >= 0)\r\n        {\r\n            setTimeout(() => {\r\n                if (this.chatWindows)\r\n                {\r\n                    const chatWindowToFocus = this.chatWindows.toArray()[windowIndex];\r\n\r\n                    chatWindowToFocus.chatWindowInput.nativeElement.focus();\r\n                }\r\n\r\n                callback();\r\n            });\r\n        }\r\n    }\r\n\r\n    private assertMessageType(message: Message): void {\r\n        // Always fallback to \"Text\" messages to avoid rendenring issues\r\n        if (!message.type)\r\n        {\r\n            message.type = MessageType.Text;\r\n        }\r\n    }\r\n\r\n    // Marks all messages provided as read with the current time.\r\n    markMessagesAsRead(messages: Message[]): void\r\n    {\r\n        const currentDate = new Date();\r\n\r\n        messages.forEach((msg)=>{\r\n            msg.dateSeen = currentDate;\r\n        });\r\n\r\n        this.onMessagesSeen.emit(messages);\r\n    }\r\n\r\n    // Buffers audio file (For component's bootstrapping)\r\n    private bufferAudioFile(): void {\r\n        if (this.audioSource && this.audioSource.length > 0)\r\n        {\r\n            this.audioFile = new Audio();\r\n            this.audioFile.src = this.audioSource;\r\n            this.audioFile.load();\r\n        }\r\n    }\r\n\r\n    // Emits a message notification audio if enabled after every message received\r\n    private emitMessageSound(window: Window): void\r\n    {\r\n        if (this.audioEnabled && !window.hasFocus && this.audioFile) {\r\n            this.audioFile.play();\r\n        }\r\n    }\r\n\r\n    // Emits a browser notification\r\n    private emitBrowserNotification(window: Window, message: Message): void\r\n    {\r\n        if (this.browserNotificationsBootstrapped && !window.hasFocus && message) {\r\n            const notification = new Notification(`${this.localization.browserNotificationTitle} ${window.participant.displayName}`, {\r\n                'body': message.message,\r\n                'icon': this.browserNotificationIconSource\r\n            });\r\n\r\n            setTimeout(() => {\r\n                notification.close();\r\n            }, message.message.length <= 50 ? 5000 : 7000); // More time to read longer messages\r\n        }\r\n    }\r\n\r\n    // Saves current windows state into local storage if persistence is enabled\r\n    private updateWindowsState(windows: Window[]): void\r\n    {\r\n        if (this.persistWindowsState)\r\n        {\r\n            const participantIds = windows.map((w) => {\r\n                return w.participant.id;\r\n            });\r\n\r\n            localStorage.setItem(this.localStorageKey, JSON.stringify(participantIds));\r\n        }\r\n    }\r\n\r\n    private restoreWindowsState(): void\r\n    {\r\n        try\r\n        {\r\n            if (this.persistWindowsState)\r\n            {\r\n                const stringfiedParticipantIds = localStorage.getItem(this.localStorageKey);\r\n\r\n                if (stringfiedParticipantIds && stringfiedParticipantIds.length > 0)\r\n                {\r\n                    const participantIds = <number[]>JSON.parse(stringfiedParticipantIds);\r\n\r\n                    const participantsToRestore = this.participants.filter(u => participantIds.indexOf(u.id) >= 0);\r\n\r\n                    participantsToRestore.forEach((participant) => {\r\n                        this.openChatWindow(participant);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        catch (ex)\r\n        {\r\n            console.error(`An error occurred while restoring ng-chat windows state. Details: ${ex}`);\r\n        }\r\n    }\r\n\r\n    // Gets closest open window if any. Most recent opened has priority (Right)\r\n    private getClosestWindow(window: Window): Window | undefined\r\n    {\r\n        const index = this.windows.indexOf(window);\r\n\r\n        if (index > 0)\r\n        {\r\n            return this.windows[index - 1];\r\n        }\r\n        else if (index == 0 && this.windows.length > 1)\r\n        {\r\n            return this.windows[index + 1];\r\n        }\r\n    }\r\n\r\n    private closeWindow(window: Window): void\r\n    {\r\n        const index = this.windows.indexOf(window);\r\n\r\n        this.windows.splice(index, 1);\r\n\r\n        this.updateWindowsState(this.windows);\r\n\r\n        this.onParticipantChatClosed.emit(window.participant);\r\n    }\r\n\r\n    private getChatWindowComponentInstance(targetWindow: Window): NgChatWindowComponent | null {\r\n        const windowIndex = this.windows.indexOf(targetWindow);\r\n\r\n        if (this.chatWindows){\r\n            let targetWindow = this.chatWindows.toArray()[windowIndex];\r\n\r\n            return targetWindow;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    // Scrolls a chat window message flow to the bottom\r\n    private scrollChatWindow(window: Window, direction: ScrollDirection): void\r\n    {\r\n        const chatWindow = this.getChatWindowComponentInstance(window);\r\n\r\n        if (chatWindow){\r\n            chatWindow.scrollChatWindow(window, direction);\r\n        }\r\n    }\r\n\r\n    onWindowMessagesSeen(messagesSeen: Message[]): void {\r\n        this.markMessagesAsRead(messagesSeen);\r\n    }\r\n\r\n    onWindowChatClosed(payload: { closedWindow: Window, closedViaEscapeKey: boolean }): void {\r\n        const { closedWindow, closedViaEscapeKey } = payload;\r\n\r\n        if (closedViaEscapeKey) {\r\n            let closestWindow = this.getClosestWindow(closedWindow);\r\n\r\n            if (closestWindow)\r\n            {\r\n                this.focusOnWindow(closestWindow, () => { this.closeWindow(closedWindow); });\r\n            }\r\n            else\r\n            {\r\n                this.closeWindow(closedWindow);\r\n            }\r\n        }\r\n        else {\r\n            this.closeWindow(closedWindow);\r\n        }\r\n    }\r\n\r\n    onWindowTabTriggered(payload: { triggeringWindow: Window, shiftKeyPressed: boolean }): void {\r\n        const { triggeringWindow, shiftKeyPressed } = payload;\r\n\r\n        const currentWindowIndex = this.windows.indexOf(triggeringWindow);\r\n        let windowToFocus = this.windows[currentWindowIndex + (shiftKeyPressed ? 1 : -1)]; // Goes back on shift + tab\r\n\r\n        if (!windowToFocus)\r\n        {\r\n            // Edge windows, go to start or end\r\n            windowToFocus = this.windows[currentWindowIndex > 0 ? 0 : this.chatWindows.length - 1];\r\n        }\r\n\r\n        this.focusOnWindow(windowToFocus);\r\n    }\r\n\r\n    onWindowMessageSent(messageSent: Message): void {\r\n        this.adapter.sendMessage(messageSent);\r\n    }\r\n\r\n    onWindowOptionTriggered(option: IChatOption): void {\r\n        this.currentActiveOption = option;\r\n    }\r\n\r\n    triggerOpenChatWindow(user: User): void {\r\n        if (user)\r\n        {\r\n            this.openChatWindow(user);\r\n        }\r\n    }\r\n\r\n    triggerCloseChatWindow(userId: any): void {\r\n        const openedWindow = this.windows.find(x => x.participant.id == userId);\r\n\r\n        if (openedWindow)\r\n        {\r\n            this.closeWindow(openedWindow);\r\n        }\r\n    }\r\n\r\n    triggerToggleChatWindowVisibility(userId: any): void {\r\n        const openedWindow = this.windows.find(x => x.participant.id == userId);\r\n\r\n        if (openedWindow)\r\n        {\r\n            const chatWindow = this.getChatWindowComponentInstance(openedWindow);\r\n\r\n            if (chatWindow){\r\n                chatWindow.onChatWindowClicked(openedWindow);\r\n            }\r\n        }\r\n    }\r\n}\r\n","<link *ngIf=\"customTheme\" rel=\"stylesheet\" [href]='customTheme | sanitize'>\r\n\r\n<div id=\"ng-chat\" *ngIf=\"!isDisabled && isBootstrapped && !unsupportedViewport\" [ngClass]=\"theme\">\r\n    <ng-chat-friends-list\r\n        [localization]=\"localization\"\r\n        [shouldDisplay]=\"!hideFriendsList\"\r\n        [userId]=\"userId\"\r\n        [isCollapsed]=\"isCollapsed\"\r\n        [searchEnabled]=\"searchEnabled\"\r\n        [participants]=\"participants\"\r\n        [participantsResponse]=\"participantsResponse\"\r\n        [participantsInteractedWith]=\"participantsInteractedWith\"\r\n        [windows]=\"windows\"\r\n        [currentActiveOption]=\"currentActiveOption\"\r\n        (onParticipantClicked)=\"onParticipantClickedFromFriendsList($event)\"\r\n        (onOptionPromptCanceled)=\"onOptionPromptCanceled()\"\r\n        (onOptionPromptConfirmed)=\"onOptionPromptConfirmed($event)\"\r\n    >\r\n    </ng-chat-friends-list>\r\n\r\n    <div *ngFor=\"let window of windows; let i = index\" [ngClass]=\"{'ng-chat-window': true, 'primary-outline-color': true, 'ng-chat-window-collapsed': window.isCollapsed}\" [ngStyle]=\"{'right': (!hideFriendsList ? friendsListWidth : 0) + 20 + windowSizeFactor * i + 'px'}\">\r\n        <ng-chat-window\r\n            #chatWindow\r\n            [fileUploadAdapter]=\"fileUploadAdapter\"\r\n            [localization]=\"localization\"\r\n            [userId]=\"userId\"\r\n            [window]=\"window\"\r\n            [showOptions]=\"groupAdapter\"\r\n            [emojisEnabled]=\"emojisEnabled\"\r\n            [linkfyEnabled]=\"linkfyEnabled\"\r\n            [showMessageDate]=\"showMessageDate\"\r\n            [messageDatePipeFormat]=\"messageDatePipeFormat\"\r\n            [hasPagedHistory]=\"hasPagedHistory\"\r\n            (onMessagesSeen)=\"onWindowMessagesSeen($event)\"\r\n            (onMessageSent)=\"onWindowMessageSent($event)\"\r\n            (onTabTriggered)=\"onWindowTabTriggered($event)\"\r\n            (onChatWindowClosed)=\"onWindowChatClosed($event)\"\r\n            (onOptionTriggered)=\"onWindowOptionTriggered($event)\"\r\n            (onLoadHistoryTriggered)=\"fetchMessageHistory($event)\"\r\n        >\r\n        </ng-chat-window>\r\n    </div>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}