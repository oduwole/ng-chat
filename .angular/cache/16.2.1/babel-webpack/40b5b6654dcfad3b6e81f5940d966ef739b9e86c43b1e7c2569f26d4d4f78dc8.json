{"ast":null,"code":"export class MessageCounter {\n  static formatUnreadMessagesTotal(totalUnreadMessages) {\n    if (totalUnreadMessages > 0) {\n      if (totalUnreadMessages > 99) return \"99+\";else return String(totalUnreadMessages);\n    }\n    // Empty fallback.\n    return \"\";\n  }\n  /**\r\n   * Returns a formatted string containing the total unread messages of a chat window.\r\n   * @param window The window instance to count the unread total messages.\r\n   * @param currentUserId The current chat instance user id. In this context it would be the sender.\r\n   */\n  static unreadMessagesTotal(window, currentUserId) {\n    let totalUnreadMessages = 0;\n    if (window) {\n      totalUnreadMessages = window.messages.filter(x => x.fromId != currentUserId && !x.dateSeen).length;\n    }\n    return MessageCounter.formatUnreadMessagesTotal(totalUnreadMessages);\n  }\n}","map":{"version":3,"names":["MessageCounter","formatUnreadMessagesTotal","totalUnreadMessages","String","unreadMessagesTotal","window","currentUserId","messages","filter","x","fromId","dateSeen","length"],"sources":["D:\\VS Project\\ng-chat\\src\\ng-chat\\core\\message-counter.ts"],"sourcesContent":["import { Window } from './window';\r\n\r\nexport class MessageCounter\r\n{\r\n    public static formatUnreadMessagesTotal(totalUnreadMessages: number): string\r\n    {\r\n        if (totalUnreadMessages > 0){\r\n\r\n            if (totalUnreadMessages > 99) \r\n                return  \"99+\";\r\n            else\r\n                return String(totalUnreadMessages); \r\n        }\r\n\r\n        // Empty fallback.\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * Returns a formatted string containing the total unread messages of a chat window.\r\n     * @param window The window instance to count the unread total messages.\r\n     * @param currentUserId The current chat instance user id. In this context it would be the sender.\r\n     */\r\n    public static unreadMessagesTotal(window: Window, currentUserId: any): string\r\n    {\r\n        let totalUnreadMessages = 0;\r\n\r\n        if (window){\r\n            totalUnreadMessages = window.messages.filter(x => x.fromId != currentUserId && !x.dateSeen).length;\r\n        }\r\n            \r\n        return MessageCounter.formatUnreadMessagesTotal(totalUnreadMessages);\r\n    }\r\n}\r\n"],"mappings":"AAEA,OAAM,MAAOA,cAAc;EAEhB,OAAOC,yBAAyBA,CAACC,mBAA2B;IAE/D,IAAIA,mBAAmB,GAAG,CAAC,EAAC;MAExB,IAAIA,mBAAmB,GAAG,EAAE,EACxB,OAAQ,KAAK,CAAC,KAEd,OAAOC,MAAM,CAACD,mBAAmB,CAAC;;IAG1C;IACA,OAAO,EAAE;EACb;EAEA;;;;;EAKO,OAAOE,mBAAmBA,CAACC,MAAc,EAAEC,aAAkB;IAEhE,IAAIJ,mBAAmB,GAAG,CAAC;IAE3B,IAAIG,MAAM,EAAC;MACPH,mBAAmB,GAAGG,MAAM,CAACE,QAAQ,CAACC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,IAAIJ,aAAa,IAAI,CAACG,CAAC,CAACE,QAAQ,CAAC,CAACC,MAAM;;IAGtG,OAAOZ,cAAc,CAACC,yBAAyB,CAACC,mBAAmB,CAAC;EACxE"},"metadata":{},"sourceType":"module","externalDependencies":[]}