{"ast":null,"code":"var _class;\nimport { ChatParticipantType } from \"../core/chat-participant-type.enum\";\nimport * as i0 from \"@angular/core\";\n/*\r\n * Renders the display name of a participant in a group based on who's sent the message\r\n*/\nexport class GroupMessageDisplayNamePipe {\n  transform(participant, message) {\n    if (participant && participant.participantType == ChatParticipantType.Group) {\n      let group = participant;\n      let userIndex = group.chattingTo.findIndex(x => x.id == message.fromId);\n      return group.chattingTo[userIndex >= 0 ? userIndex : 0].displayName;\n    } else return \"\";\n  }\n}\n_class = GroupMessageDisplayNamePipe;\n_class.ɵfac = function GroupMessageDisplayNamePipe_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"groupMessageDisplayName\",\n  type: _class,\n  pure: true\n});","map":{"version":3,"names":["ChatParticipantType","GroupMessageDisplayNamePipe","transform","participant","message","participantType","Group","group","userIndex","chattingTo","findIndex","x","id","fromId","displayName","pure"],"sources":["D:\\VS Project\\ng-chat\\src\\ng-chat\\pipes\\group-message-display-name.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Group } from \"../core/group\";\r\nimport { ChatParticipantType } from \"../core/chat-participant-type.enum\";\r\nimport { IChatParticipant } from \"../core/chat-participant\";\r\nimport { Message } from \"../core/message\";\r\n\r\n/*\r\n * Renders the display name of a participant in a group based on who's sent the message\r\n*/\r\n@Pipe({name: 'groupMessageDisplayName'})\r\nexport class GroupMessageDisplayNamePipe implements PipeTransform {\r\n    transform(participant: IChatParticipant, message: Message): string {\r\n        if (participant && participant.participantType == ChatParticipantType.Group)\r\n        {\r\n            let group = participant as Group;\r\n            let userIndex = group.chattingTo.findIndex(x => x.id == message.fromId);\r\n\r\n            return group.chattingTo[userIndex >= 0 ? userIndex : 0].displayName;\r\n        }\r\n        else\r\n            return \"\";\r\n    } \r\n}\r\n"],"mappings":";AAEA,SAASA,mBAAmB,QAAQ,oCAAoC;;AAIxE;;;AAIA,OAAM,MAAOC,2BAA2B;EACpCC,SAASA,CAACC,WAA6B,EAAEC,OAAgB;IACrD,IAAID,WAAW,IAAIA,WAAW,CAACE,eAAe,IAAIL,mBAAmB,CAACM,KAAK,EAC3E;MACI,IAAIC,KAAK,GAAGJ,WAAoB;MAChC,IAAIK,SAAS,GAAGD,KAAK,CAACE,UAAU,CAACC,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,IAAIR,OAAO,CAACS,MAAM,CAAC;MAEvE,OAAON,KAAK,CAACE,UAAU,CAACD,SAAS,IAAI,CAAC,GAAGA,SAAS,GAAG,CAAC,CAAC,CAACM,WAAW;KACtE,MAEG,OAAO,EAAE;EACjB;;SAXSb,2BAA2B;;mBAA3BA,MAA2B;AAAA;;;QAA3BA,MAA2B;EAAAc,IAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}