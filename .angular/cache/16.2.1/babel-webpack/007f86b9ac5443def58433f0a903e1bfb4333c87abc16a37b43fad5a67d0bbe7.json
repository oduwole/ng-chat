{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\n/*\r\n * Sanitizes an URL resource\r\n*/\nexport class SanitizePipe {\n  constructor(sanitizer) {\n    this.sanitizer = sanitizer;\n  }\n  transform(url) {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n}\n_class = SanitizePipe;\n_class.ɵfac = function SanitizePipe_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.DomSanitizer, 16));\n};\n_class.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"sanitize\",\n  type: _class,\n  pure: true\n});","map":{"version":3,"names":["SanitizePipe","constructor","sanitizer","transform","url","bypassSecurityTrustResourceUrl","i0","ɵɵdirectiveInject","i1","DomSanitizer","pure"],"sources":["D:\\VS Project\\ng-chat\\src\\ng-chat\\pipes\\sanitize.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeResourceUrl  } from '@angular/platform-browser';\r\n\r\n/*\r\n * Sanitizes an URL resource\r\n*/\r\n@Pipe({name: 'sanitize'})\r\nexport class SanitizePipe implements PipeTransform {\r\n    constructor(protected sanitizer: DomSanitizer) {}\r\n\r\n    transform(url: string): SafeResourceUrl {\r\n        return this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n    }\r\n}\r\n"],"mappings":";;;AAGA;;;AAIA,OAAM,MAAOA,YAAY;EACrBC,YAAsBC,SAAuB;IAAvB,KAAAA,SAAS,GAATA,SAAS;EAAiB;EAEhDC,SAASA,CAACC,GAAW;IACjB,OAAO,IAAI,CAACF,SAAS,CAACG,8BAA8B,CAACD,GAAG,CAAC;EAC7D;;SALSJ,YAAY;;mBAAZA,MAAY,EAAAM,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA;AAAA;;;QAAZT,MAAY;EAAAU,IAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}