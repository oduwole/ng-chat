{"ast":null,"code":"var _class;\nimport { EventEmitter } from '@angular/core';\nimport { ChatParticipantStatus } from \"../../core/chat-participant-status.enum\";\nimport { MessageCounter } from \"../../core/message-counter\";\nimport { chatParticipantStatusDescriptor } from '../../core/chat-participant-status-descriptor';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../pipes/sanitize.pipe\";\nfunction NgChatFriendsListComponent_div_0_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵlistener(\"click\", function NgChatFriendsListComponent_div_0_div_4_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.onFriendsListActionCancelClicked());\n    });\n    i0.ɵɵelementStart(1, \"a\", 7);\n    i0.ɵɵelement(2, \"i\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"a\", 9);\n    i0.ɵɵlistener(\"click\", function NgChatFriendsListComponent_div_0_div_4_Template_a_click_3_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.onFriendsListActionConfirmClicked());\n    });\n    i0.ɵɵelement(4, \"i\", 10);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction NgChatFriendsListComponent_div_0_input_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function NgChatFriendsListComponent_div_0_input_5_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.searchInput = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"placeholder\", ctx_r2.localization.searchPlaceholder)(\"ngModel\", ctx_r2.searchInput);\n  }\n}\nfunction NgChatFriendsListComponent_div_0_ul_6_li_1_input_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 21);\n    i0.ɵɵlistener(\"change\", function NgChatFriendsListComponent_div_0_ul_6_li_1_input_1_Template_input_change_0_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const user_r10 = i0.ɵɵnextContext().$implicit;\n      const ctx_r15 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r15.onFriendsListCheckboxChange(user_r10, $event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r10 = i0.ɵɵnextContext().$implicit;\n    const ctx_r11 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"checked\", ctx_r11.isUserSelectedFromFriendsList(user_r10));\n  }\n}\nfunction NgChatFriendsListComponent_div_0_ul_6_li_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵelement(1, \"i\", 23);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NgChatFriendsListComponent_div_0_ul_6_li_1_img_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 24);\n    i0.ɵɵpipe(1, \"sanitize\");\n  }\n  if (rf & 2) {\n    const user_r10 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"src\", i0.ɵɵpipeBind1(1, 1, user_r10.avatar), i0.ɵɵsanitizeUrl);\n  }\n}\nfunction NgChatFriendsListComponent_div_0_ul_6_li_1_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r10 = i0.ɵɵnextContext().$implicit;\n    const ctx_r14 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r14.unreadMessagesTotalByParticipant(user_r10));\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"ng-chat-friends-list-selectable-offset\": a0,\n    \"ng-chat-friends-list-container\": true\n  };\n};\nconst _c1 = function (a1, a2, a3, a4) {\n  return {\n    \"ng-chat-participant-status\": true,\n    \"online\": a1,\n    \"busy\": a2,\n    \"away\": a3,\n    \"offline\": a4\n  };\n};\nfunction NgChatFriendsListComponent_div_0_ul_6_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtemplate(1, NgChatFriendsListComponent_div_0_ul_6_li_1_input_1_Template, 1, 1, \"input\", 14);\n    i0.ɵɵelementStart(2, \"div\", 15);\n    i0.ɵɵlistener(\"click\", function NgChatFriendsListComponent_div_0_ul_6_li_1_Template_div_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const user_r10 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r21.onUserClick(user_r10));\n    });\n    i0.ɵɵtemplate(3, NgChatFriendsListComponent_div_0_ul_6_li_1_div_3_Template, 2, 0, \"div\", 16);\n    i0.ɵɵtemplate(4, NgChatFriendsListComponent_div_0_ul_6_li_1_img_4_Template, 2, 3, \"img\", 17);\n    i0.ɵɵelementStart(5, \"strong\", 18);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"span\", 19);\n    i0.ɵɵtemplate(8, NgChatFriendsListComponent_div_0_ul_6_li_1_span_8_Template, 2, 1, \"span\", 20);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const user_r10 = ctx.$implicit;\n    const ctx_r9 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.currentActiveOption && ctx_r9.currentActiveOption.validateContext(user_r10));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ctx_r9.currentActiveOption));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !user_r10.avatar);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", user_r10.avatar);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"title\", user_r10.displayName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(user_r10.displayName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"title\", ctx_r9.chatParticipantStatusDescriptor(user_r10.status, ctx_r9.localization));\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(11, _c1, user_r10.status == ctx_r9.ChatParticipantStatus.Online, user_r10.status == ctx_r9.ChatParticipantStatus.Busy, user_r10.status == ctx_r9.ChatParticipantStatus.Away, user_r10.status == ctx_r9.ChatParticipantStatus.Offline));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.unreadMessagesTotalByParticipant(user_r10).length > 0);\n  }\n}\nconst _c2 = function (a0) {\n  return {\n    \"offset-search\": a0\n  };\n};\nfunction NgChatFriendsListComponent_div_0_ul_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 12);\n    i0.ɵɵtemplate(1, NgChatFriendsListComponent_div_0_ul_6_li_1_Template, 9, 16, \"li\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c2, ctx_r3.searchEnabled));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.filteredParticipants);\n  }\n}\nconst _c3 = function (a2) {\n  return {\n    \"primary-outline-color\": true,\n    \"primary-background\": true,\n    \"ng-chat-people-collapsed\": a2\n  };\n};\nfunction NgChatFriendsListComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"a\", 2);\n    i0.ɵɵlistener(\"click\", function NgChatFriendsListComponent_div_0_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.onChatTitleClicked());\n    });\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(4, NgChatFriendsListComponent_div_0_div_4_Template, 5, 0, \"div\", 3);\n    i0.ɵɵtemplate(5, NgChatFriendsListComponent_div_0_input_5_Template, 1, 2, \"input\", 4);\n    i0.ɵɵtemplate(6, NgChatFriendsListComponent_div_0_ul_6_Template, 2, 4, \"ul\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c3, ctx_r0.isCollapsed));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.localization.title, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.currentActiveOption);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.searchEnabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isCollapsed);\n  }\n}\nexport class NgChatFriendsListComponent {\n  constructor() {\n    this.participants = [];\n    this.participantsResponse = [];\n    this.participantsInteractedWith = [];\n    this.windows = [];\n    this.onParticipantClicked = new EventEmitter();\n    this.onOptionPromptCanceled = new EventEmitter();\n    this.onOptionPromptConfirmed = new EventEmitter();\n    this.selectedUsersFromFriendsList = [];\n    this.searchInput = '';\n    // Exposes enums and functions for the ng-template\n    this.ChatParticipantStatus = ChatParticipantStatus;\n    this.chatParticipantStatusDescriptor = chatParticipantStatusDescriptor;\n    this.cleanUpUserSelection = () => this.selectedUsersFromFriendsList = [];\n  }\n  ngOnChanges(changes) {\n    if (this.currentActiveOption) {\n      const currentOptionTriggeredBy = this.currentActiveOption && this.currentActiveOption.chattingTo.participant.id;\n      const isActivatedUserInSelectedList = this.selectedUsersFromFriendsList.filter(item => item.id == currentOptionTriggeredBy).length > 0;\n      if (!isActivatedUserInSelectedList) {\n        this.selectedUsersFromFriendsList = this.selectedUsersFromFriendsList.concat(this.currentActiveOption.chattingTo.participant);\n      }\n    }\n  }\n  get filteredParticipants() {\n    if (this.searchInput.length > 0) {\n      // Searches in the friend list by the inputted search string\n      return this.participants.filter(x => x.displayName.toUpperCase().includes(this.searchInput.toUpperCase()));\n    }\n    return this.participants;\n  }\n  isUserSelectedFromFriendsList(user) {\n    return this.selectedUsersFromFriendsList.filter(item => item.id == user.id).length > 0;\n  }\n  unreadMessagesTotalByParticipant(participant) {\n    let openedWindow = this.windows.find(x => x.participant.id == participant.id);\n    if (openedWindow) {\n      return MessageCounter.unreadMessagesTotal(openedWindow, this.userId);\n    } else {\n      let totalUnreadMessages = this.participantsResponse.filter(x => x.participant.id == participant.id && !this.participantsInteractedWith.find(u => u.id == participant.id) && x.metadata && x.metadata.totalUnreadMessages > 0).map(participantResponse => {\n        return participantResponse.metadata.totalUnreadMessages;\n      })[0];\n      return MessageCounter.formatUnreadMessagesTotal(totalUnreadMessages);\n    }\n  }\n  // Toggle friends list visibility\n  onChatTitleClicked() {\n    this.isCollapsed = !this.isCollapsed;\n  }\n  onFriendsListCheckboxChange(selectedUser, event) {\n    const isChecked = event.target.checked;\n    if (isChecked) {\n      this.selectedUsersFromFriendsList.push(selectedUser);\n    } else {\n      this.selectedUsersFromFriendsList.splice(this.selectedUsersFromFriendsList.indexOf(selectedUser), 1);\n    }\n  }\n  onUserClick(clickedUser) {\n    this.onParticipantClicked.emit(clickedUser);\n  }\n  onFriendsListActionCancelClicked() {\n    this.onOptionPromptCanceled.emit();\n    this.cleanUpUserSelection();\n  }\n  onFriendsListActionConfirmClicked() {\n    this.onOptionPromptConfirmed.emit(this.selectedUsersFromFriendsList);\n    this.cleanUpUserSelection();\n  }\n}\n_class = NgChatFriendsListComponent;\n_class.ɵfac = function NgChatFriendsListComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"ng-chat-friends-list\"]],\n  inputs: {\n    participants: \"participants\",\n    participantsResponse: \"participantsResponse\",\n    participantsInteractedWith: \"participantsInteractedWith\",\n    windows: \"windows\",\n    userId: \"userId\",\n    localization: \"localization\",\n    shouldDisplay: \"shouldDisplay\",\n    isCollapsed: \"isCollapsed\",\n    searchEnabled: \"searchEnabled\",\n    currentActiveOption: \"currentActiveOption\"\n  },\n  outputs: {\n    onParticipantClicked: \"onParticipantClicked\",\n    onOptionPromptCanceled: \"onOptionPromptCanceled\",\n    onOptionPromptConfirmed: \"onOptionPromptConfirmed\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[\"id\", \"ng-chat-people\", 3, \"ngClass\", 4, \"ngIf\"], [\"id\", \"ng-chat-people\", 3, \"ngClass\"], [\"href\", \"javascript:void(0);\", 1, \"ng-chat-title\", \"secondary-background\", \"shadowed\", 3, \"click\"], [\"class\", \"ng-chat-people-actions\", 3, \"click\", 4, \"ngIf\"], [\"id\", \"ng-chat-search_friend\", \"class\", \"friends-search-bar\", \"type\", \"search\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"id\", \"ng-chat-users\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"ng-chat-people-actions\", 3, \"click\"], [\"href\", \"javascript:void(0);\", 1, \"ng-chat-people-action\"], [1, \"remove-icon\"], [\"href\", \"javascript:void(0);\", 1, \"ng-chat-people-action\", 3, \"click\"], [1, \"check-icon\"], [\"id\", \"ng-chat-search_friend\", \"type\", \"search\", 1, \"friends-search-bar\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\"], [\"id\", \"ng-chat-users\", 3, \"ngClass\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"checkbox\", \"class\", \"ng-chat-users-checkbox\", 3, \"checked\", \"change\", 4, \"ngIf\"], [3, \"ngClass\", \"click\"], [\"class\", \"icon-wrapper\", 4, \"ngIf\"], [\"alt\", \"\", \"class\", \"avatar\", \"height\", \"30\", \"width\", \"30\", 3, \"src\", 4, \"ngIf\"], [3, \"title\"], [3, \"ngClass\", \"title\"], [\"class\", \"ng-chat-unread-messages-count unread-messages-counter-container primary-text\", 4, \"ngIf\"], [\"type\", \"checkbox\", 1, \"ng-chat-users-checkbox\", 3, \"checked\", \"change\"], [1, \"icon-wrapper\"], [1, \"user-icon\"], [\"alt\", \"\", \"height\", \"30\", \"width\", \"30\", 1, \"avatar\", 3, \"src\"], [1, \"ng-chat-unread-messages-count\", \"unread-messages-counter-container\", \"primary-text\"]],\n  template: function NgChatFriendsListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NgChatFriendsListComponent_div_0_Template, 7, 7, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.shouldDisplay);\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, i3.SanitizePipe],\n  styles: [\"#ng-chat-people\\n{\\n    position: relative;\\n    width: 240px;\\n    height:360px;\\n    border-width: 1px;\\n    border-style: solid;\\n    margin-right: 20px;\\n    box-shadow: 0 4px 8px rgba(0,0,0,.25);\\n    border-bottom:0;\\n}\\n    #ng-chat-people.ng-chat-people-collapsed\\n    {\\n        height:30px;\\n    }\\n#ng-chat-search_friend\\n{\\n    display: block;\\n    padding: 7px 10px;\\n    margin: 0 auto;\\n    width: calc(100% - 20px);\\n    margin-top: 10px;\\n    font-size: 0.9em;\\n    -webkit-appearance: searchfield;\\n}\\n#ng-chat-users\\n{\\n    padding: 0 10px;\\n    list-style: none;\\n    margin: 0;\\n    overflow: auto;\\n    position: absolute;\\n    top: 42px;\\n    bottom: 0;\\n    width: 100%;\\n    box-sizing: border-box;\\n}\\n    #ng-chat-users.offset-search\\n    {\\n        top: 84px;\\n    }\\n    #ng-chat-users .ng-chat-users-checkbox\\n    {\\n        float: left;\\n        margin-right: 5px;\\n        margin-top: 8px;\\n    }\\n    #ng-chat-users li\\n    {\\n        clear: both;\\n        margin-bottom: 10px;\\n        overflow: hidden;\\n        cursor: pointer;\\n        max-height: 30px;\\n    }\\n        #ng-chat-users li > .ng-chat-friends-list-selectable-offset\\n        {\\n            margin-left: 22px;\\n        }\\n        #ng-chat-users li .ng-chat-friends-list-container\\n        {\\n            display: inline-block;\\n            width: 100%;\\n        }\\n        #ng-chat-users li > .ng-chat-friends-list-selectable-offset.ng-chat-friends-list-container\\n        {\\n            display: block;\\n            width: auto;\\n        }\\n        #ng-chat-users li .ng-chat-friends-list-container > img.avatar, #ng-chat-users li .ng-chat-friends-list-container > .icon-wrapper\\n        {\\n            float: left;\\n            margin-right: 5px;\\n            border-radius: 25px;\\n        }\\n        #ng-chat-users li .ng-chat-friends-list-container > .icon-wrapper\\n        {\\n            background-color: #BABABA;\\n            overflow: hidden;\\n            width: 30px;\\n            height: 30px;\\n        }\\n            #ng-chat-users li .ng-chat-friends-list-container > .icon-wrapper > i\\n            {\\n                color: #FFF;\\n                transform: scale(0.7);\\n            }\\n        #ng-chat-users li .ng-chat-friends-list-container > strong\\n        {\\n            float: left;\\n            line-height: 30px;\\n            font-size: 0.8em;\\n            max-width: 57%;\\n            max-height: 30px;\\n            overflow: hidden;\\n            white-space: nowrap;\\n            text-overflow: ellipsis;\\n        }\\n        #ng-chat-users li .ng-chat-friends-list-container > .ng-chat-participant-status\\n        {\\n            float: right;\\n        }\\n.ng-chat-people-actions\\n{\\n    position: absolute;\\n    top: 4px;\\n    right: 5px;\\n    margin: 0;\\n    padding: 0;\\n    z-index: 2;\\n}\\n.ng-chat-people-actions > a.ng-chat-people-action {\\n    display: inline-block;\\n    width: 21px;\\n    height: 21px;\\n    margin-right: 8px;\\n    text-decoration: none;\\n    border: none;\\n    border-radius: 25px;\\n    padding: 1px;\\n}\\n\\n/* Mobile viewport only */\\n@media only screen and (max-width: 581px) { \\n    #ng-chat-people\\n    {\\n        width: 300px;\\n        height: 360px;\\n        margin-right: 0;\\n    }\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9uZy1jaGF0L2NvbXBvbmVudHMvbmctY2hhdC1mcmllbmRzLWxpc3QvbmctY2hhdC1mcmllbmRzLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7SUFFSSxrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLFlBQVk7SUFDWixpQkFBaUI7SUFDakIsbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUNsQixxQ0FBcUM7SUFDckMsZUFBZTtBQUNuQjtJQUNJOztRQUVJLFdBQVc7SUFDZjtBQUNKOztJQUVJLGNBQWM7SUFDZCxpQkFBaUI7SUFDakIsY0FBYztJQUNkLHdCQUF3QjtJQUN4QixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLCtCQUErQjtBQUNuQztBQUNBOztJQUVJLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsU0FBUztJQUNULGNBQWM7SUFDZCxrQkFBa0I7SUFDbEIsU0FBUztJQUNULFNBQVM7SUFDVCxXQUFXO0lBQ1gsc0JBQXNCO0FBQzFCO0lBQ0k7O1FBRUksU0FBUztJQUNiO0lBQ0E7O1FBRUksV0FBVztRQUNYLGlCQUFpQjtRQUNqQixlQUFlO0lBQ25CO0lBQ0E7O1FBRUksV0FBVztRQUNYLG1CQUFtQjtRQUNuQixnQkFBZ0I7UUFDaEIsZUFBZTtRQUNmLGdCQUFnQjtJQUNwQjtRQUNJOztZQUVJLGlCQUFpQjtRQUNyQjtRQUNBOztZQUVJLHFCQUFxQjtZQUNyQixXQUFXO1FBQ2Y7UUFDQTs7WUFFSSxjQUFjO1lBQ2QsV0FBVztRQUNmO1FBQ0E7O1lBRUksV0FBVztZQUNYLGlCQUFpQjtZQUNqQixtQkFBbUI7UUFDdkI7UUFDQTs7WUFFSSx5QkFBeUI7WUFDekIsZ0JBQWdCO1lBQ2hCLFdBQVc7WUFDWCxZQUFZO1FBQ2hCO1lBQ0k7O2dCQUVJLFdBQVc7Z0JBQ1gscUJBQXFCO1lBQ3pCO1FBQ0o7O1lBRUksV0FBVztZQUNYLGlCQUFpQjtZQUNqQixnQkFBZ0I7WUFDaEIsY0FBYztZQUNkLGdCQUFnQjtZQUNoQixnQkFBZ0I7WUFDaEIsbUJBQW1CO1lBQ25CLHVCQUF1QjtRQUMzQjtRQUNBOztZQUVJLFlBQVk7UUFDaEI7QUFDUjs7SUFFSSxrQkFBa0I7SUFDbEIsUUFBUTtJQUNSLFVBQVU7SUFDVixTQUFTO0lBQ1QsVUFBVTtJQUNWLFVBQVU7QUFDZDtBQUNBO0lBQ0kscUJBQXFCO0lBQ3JCLFdBQVc7SUFDWCxZQUFZO0lBQ1osaUJBQWlCO0lBQ2pCLHFCQUFxQjtJQUNyQixZQUFZO0lBQ1osbUJBQW1CO0lBQ25CLFlBQVk7QUFDaEI7O0FBRUEseUJBQXlCO0FBQ3pCO0lBQ0k7O1FBRUksWUFBWTtRQUNaLGFBQWE7UUFDYixlQUFlO0lBQ25CO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIjbmctY2hhdC1wZW9wbGVcclxue1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgd2lkdGg6IDI0MHB4O1xyXG4gICAgaGVpZ2h0OjM2MHB4O1xyXG4gICAgYm9yZGVyLXdpZHRoOiAxcHg7XHJcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xyXG4gICAgYm94LXNoYWRvdzogMCA0cHggOHB4IHJnYmEoMCwwLDAsLjI1KTtcclxuICAgIGJvcmRlci1ib3R0b206MDtcclxufVxyXG4gICAgI25nLWNoYXQtcGVvcGxlLm5nLWNoYXQtcGVvcGxlLWNvbGxhcHNlZFxyXG4gICAge1xyXG4gICAgICAgIGhlaWdodDozMHB4O1xyXG4gICAgfVxyXG4jbmctY2hhdC1zZWFyY2hfZnJpZW5kXHJcbntcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgcGFkZGluZzogN3B4IDEwcHg7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAyMHB4KTtcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICBmb250LXNpemU6IDAuOWVtO1xyXG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBzZWFyY2hmaWVsZDtcclxufVxyXG4jbmctY2hhdC11c2Vyc1xyXG57XHJcbiAgICBwYWRkaW5nOiAwIDEwcHg7XHJcbiAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDQycHg7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn1cclxuICAgICNuZy1jaGF0LXVzZXJzLm9mZnNldC1zZWFyY2hcclxuICAgIHtcclxuICAgICAgICB0b3A6IDg0cHg7XHJcbiAgICB9XHJcbiAgICAjbmctY2hhdC11c2VycyAubmctY2hhdC11c2Vycy1jaGVja2JveFxyXG4gICAge1xyXG4gICAgICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogNXB4O1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDhweDtcclxuICAgIH1cclxuICAgICNuZy1jaGF0LXVzZXJzIGxpXHJcbiAgICB7XHJcbiAgICAgICAgY2xlYXI6IGJvdGg7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgICBtYXgtaGVpZ2h0OiAzMHB4O1xyXG4gICAgfVxyXG4gICAgICAgICNuZy1jaGF0LXVzZXJzIGxpID4gLm5nLWNoYXQtZnJpZW5kcy1saXN0LXNlbGVjdGFibGUtb2Zmc2V0XHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogMjJweDtcclxuICAgICAgICB9XHJcbiAgICAgICAgI25nLWNoYXQtdXNlcnMgbGkgLm5nLWNoYXQtZnJpZW5kcy1saXN0LWNvbnRhaW5lclxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICB9XHJcbiAgICAgICAgI25nLWNoYXQtdXNlcnMgbGkgPiAubmctY2hhdC1mcmllbmRzLWxpc3Qtc2VsZWN0YWJsZS1vZmZzZXQubmctY2hhdC1mcmllbmRzLWxpc3QtY29udGFpbmVyXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgd2lkdGg6IGF1dG87XHJcbiAgICAgICAgfVxyXG4gICAgICAgICNuZy1jaGF0LXVzZXJzIGxpIC5uZy1jaGF0LWZyaWVuZHMtbGlzdC1jb250YWluZXIgPiBpbWcuYXZhdGFyLCAjbmctY2hhdC11c2VycyBsaSAubmctY2hhdC1mcmllbmRzLWxpc3QtY29udGFpbmVyID4gLmljb24td3JhcHBlclxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogNXB4O1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAyNXB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICAjbmctY2hhdC11c2VycyBsaSAubmctY2hhdC1mcmllbmRzLWxpc3QtY29udGFpbmVyID4gLmljb24td3JhcHBlclxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0JBQkFCQTtcclxuICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgd2lkdGg6IDMwcHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogMzBweDtcclxuICAgICAgICB9XHJcbiAgICAgICAgICAgICNuZy1jaGF0LXVzZXJzIGxpIC5uZy1jaGF0LWZyaWVuZHMtbGlzdC1jb250YWluZXIgPiAuaWNvbi13cmFwcGVyID4gaVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogI0ZGRjtcclxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMC43KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICNuZy1jaGF0LXVzZXJzIGxpIC5uZy1jaGF0LWZyaWVuZHMtbGlzdC1jb250YWluZXIgPiBzdHJvbmdcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMzBweDtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAwLjhlbTtcclxuICAgICAgICAgICAgbWF4LXdpZHRoOiA1NyU7XHJcbiAgICAgICAgICAgIG1heC1oZWlnaHQ6IDMwcHg7XHJcbiAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICAgICAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gICAgICAgIH1cclxuICAgICAgICAjbmctY2hhdC11c2VycyBsaSAubmctY2hhdC1mcmllbmRzLWxpc3QtY29udGFpbmVyID4gLm5nLWNoYXQtcGFydGljaXBhbnQtc3RhdHVzXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBmbG9hdDogcmlnaHQ7XHJcbiAgICAgICAgfVxyXG4ubmctY2hhdC1wZW9wbGUtYWN0aW9uc1xyXG57XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDRweDtcclxuICAgIHJpZ2h0OiA1cHg7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgei1pbmRleDogMjtcclxufVxyXG4ubmctY2hhdC1wZW9wbGUtYWN0aW9ucyA+IGEubmctY2hhdC1wZW9wbGUtYWN0aW9uIHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHdpZHRoOiAyMXB4O1xyXG4gICAgaGVpZ2h0OiAyMXB4O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiA4cHg7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiAyNXB4O1xyXG4gICAgcGFkZGluZzogMXB4O1xyXG59XHJcblxyXG4vKiBNb2JpbGUgdmlld3BvcnQgb25seSAqL1xyXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU4MXB4KSB7IFxyXG4gICAgI25nLWNoYXQtcGVvcGxlXHJcbiAgICB7XHJcbiAgICAgICAgd2lkdGg6IDMwMHB4O1xyXG4gICAgICAgIGhlaWdodDogMzYwcHg7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgfVxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"],\n  encapsulation: 2\n});","map":{"version":3,"names":["EventEmitter","ChatParticipantStatus","MessageCounter","chatParticipantStatusDescriptor","i0","ɵɵelementStart","ɵɵlistener","NgChatFriendsListComponent_div_0_div_4_Template_div_click_0_listener","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","onFriendsListActionCancelClicked","ɵɵelement","ɵɵelementEnd","NgChatFriendsListComponent_div_0_div_4_Template_a_click_3_listener","ctx_r6","onFriendsListActionConfirmClicked","NgChatFriendsListComponent_div_0_input_5_Template_input_ngModelChange_0_listener","$event","_r8","ctx_r7","searchInput","ɵɵproperty","ctx_r2","localization","searchPlaceholder","NgChatFriendsListComponent_div_0_ul_6_li_1_input_1_Template_input_change_0_listener","_r17","user_r10","$implicit","ctx_r15","onFriendsListCheckboxChange","ctx_r11","isUserSelectedFromFriendsList","ɵɵpipeBind1","avatar","ɵɵsanitizeUrl","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate","ctx_r14","unreadMessagesTotalByParticipant","ɵɵtemplate","NgChatFriendsListComponent_div_0_ul_6_li_1_input_1_Template","NgChatFriendsListComponent_div_0_ul_6_li_1_Template_div_click_2_listener","restoredCtx","_r22","ctx_r21","onUserClick","NgChatFriendsListComponent_div_0_ul_6_li_1_div_3_Template","NgChatFriendsListComponent_div_0_ul_6_li_1_img_4_Template","NgChatFriendsListComponent_div_0_ul_6_li_1_span_8_Template","ctx_r9","currentActiveOption","validateContext","ɵɵpureFunction1","_c0","ɵɵpropertyInterpolate","displayName","status","ɵɵpureFunction4","_c1","Online","Busy","Away","Offline","length","NgChatFriendsListComponent_div_0_ul_6_li_1_Template","_c2","ctx_r3","searchEnabled","filteredParticipants","NgChatFriendsListComponent_div_0_Template_a_click_1_listener","_r24","ctx_r23","onChatTitleClicked","NgChatFriendsListComponent_div_0_div_4_Template","NgChatFriendsListComponent_div_0_input_5_Template","NgChatFriendsListComponent_div_0_ul_6_Template","_c3","ctx_r0","isCollapsed","ɵɵtextInterpolate1","title","NgChatFriendsListComponent","constructor","participants","participantsResponse","participantsInteractedWith","windows","onParticipantClicked","onOptionPromptCanceled","onOptionPromptConfirmed","selectedUsersFromFriendsList","cleanUpUserSelection","ngOnChanges","changes","currentOptionTriggeredBy","chattingTo","participant","id","isActivatedUserInSelectedList","filter","item","concat","x","toUpperCase","includes","user","openedWindow","find","unreadMessagesTotal","userId","totalUnreadMessages","u","metadata","map","participantResponse","formatUnreadMessagesTotal","selectedUser","event","isChecked","target","checked","push","splice","indexOf","clickedUser","emit","selectors","inputs","shouldDisplay","outputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","NgChatFriendsListComponent_Template","rf","ctx","NgChatFriendsListComponent_div_0_Template"],"sources":["D:\\VS Project\\ng-chat\\src\\ng-chat\\components\\ng-chat-friends-list\\ng-chat-friends-list.component.ts","D:\\VS Project\\ng-chat\\src\\ng-chat\\components\\ng-chat-friends-list\\ng-chat-friends-list.component.html"],"sourcesContent":["import { Component, Input, Output, EventEmitter, ViewEncapsulation, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\nimport { Localization } from '../../core/localization';\r\nimport { IChatOption } from '../../core/chat-option';\r\nimport { ChatParticipantStatus } from \"../../core/chat-participant-status.enum\";\r\nimport { IChatParticipant } from \"../../core/chat-participant\";\r\nimport { User } from \"../../core/user\";\r\nimport { Window } from \"../../core/window\";\r\nimport { ParticipantResponse } from \"../../core/participant-response\";\r\nimport { MessageCounter } from \"../../core/message-counter\";\r\nimport { chatParticipantStatusDescriptor } from '../../core/chat-participant-status-descriptor';\r\n\r\n@Component({\r\n    selector: 'ng-chat-friends-list',\r\n    templateUrl: './ng-chat-friends-list.component.html',\r\n    styleUrls: ['./ng-chat-friends-list.component.css'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NgChatFriendsListComponent implements OnChanges {\r\n    constructor() { }\r\n\r\n    @Input()\r\n    public participants: IChatParticipant[] = [];\r\n\r\n    @Input()\r\n    public participantsResponse: ParticipantResponse[] = [];\r\n\r\n    @Input()\r\n    public participantsInteractedWith: IChatParticipant[] = [];\r\n\r\n    @Input()\r\n    public windows: Window[] = [];\r\n\r\n    @Input()\r\n    public userId: any;\r\n\r\n    @Input()\r\n    public localization: Localization;\r\n\r\n    @Input()\r\n    public shouldDisplay: boolean;\r\n\r\n    @Input()\r\n    public isCollapsed: boolean;\r\n\r\n    @Input()\r\n    public searchEnabled: boolean;\r\n\r\n    @Input()\r\n    public currentActiveOption: IChatOption | null;\r\n\r\n    @Output()\r\n    public onParticipantClicked: EventEmitter<IChatParticipant> = new EventEmitter();\r\n\r\n    @Output()\r\n    public onOptionPromptCanceled: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output()\r\n    public onOptionPromptConfirmed: EventEmitter<any> = new EventEmitter();\r\n\r\n    public selectedUsersFromFriendsList: User[] = [];\r\n\r\n    public searchInput: string = '';\r\n\r\n    // Exposes enums and functions for the ng-template\r\n    public ChatParticipantStatus = ChatParticipantStatus;\r\n    public chatParticipantStatusDescriptor = chatParticipantStatusDescriptor;\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (this.currentActiveOption) {\r\n            const currentOptionTriggeredBy = this.currentActiveOption && this.currentActiveOption.chattingTo.participant.id;\r\n            const isActivatedUserInSelectedList = (this.selectedUsersFromFriendsList.filter(item => item.id == currentOptionTriggeredBy)).length > 0;\r\n\r\n            if (!isActivatedUserInSelectedList) {\r\n                this.selectedUsersFromFriendsList = this.selectedUsersFromFriendsList.concat(this.currentActiveOption.chattingTo.participant as User);\r\n            }\r\n        }\r\n    }\r\n\r\n    get filteredParticipants(): IChatParticipant[]\r\n    {\r\n        if (this.searchInput.length > 0){\r\n            // Searches in the friend list by the inputted search string\r\n            return this.participants.filter(x => x.displayName.toUpperCase().includes(this.searchInput.toUpperCase()));\r\n        }\r\n\r\n        return this.participants;\r\n    }\r\n\r\n    isUserSelectedFromFriendsList(user: any) : boolean//(user: User) : boolean\r\n    {\r\n        return (this.selectedUsersFromFriendsList.filter(item => item.id == user.id)).length > 0\r\n    }\r\n\r\n    unreadMessagesTotalByParticipant(participant: IChatParticipant): string\r\n    {\r\n        let openedWindow = this.windows.find(x => x.participant.id == participant.id);\r\n\r\n        if (openedWindow){\r\n            return MessageCounter.unreadMessagesTotal(openedWindow, this.userId);\r\n        }\r\n        else\r\n        {\r\n            let totalUnreadMessages = this.participantsResponse\r\n                .filter(x => x.participant.id == participant.id && !this.participantsInteractedWith.find(u => u.id == participant.id) && x.metadata && x.metadata.totalUnreadMessages > 0)\r\n                .map((participantResponse) => {\r\n                    return participantResponse.metadata.totalUnreadMessages\r\n                })[0];\r\n\r\n            return MessageCounter.formatUnreadMessagesTotal(totalUnreadMessages);\r\n        }\r\n    }\r\n\r\n    cleanUpUserSelection = () => this.selectedUsersFromFriendsList = [];\r\n\r\n    // Toggle friends list visibility\r\n    onChatTitleClicked(): void\r\n    {\r\n        this.isCollapsed = !this.isCollapsed;\r\n    }\r\n\r\n    onFriendsListCheckboxChange(selectedUser: any, event: any): void//(selectedUser: User, isChecked: boolean): void\r\n    {\r\n        const isChecked = (<HTMLInputElement>event.target).checked\r\n        if(isChecked) {\r\n            this.selectedUsersFromFriendsList.push(selectedUser);\r\n        } \r\n        else \r\n        {\r\n            this.selectedUsersFromFriendsList.splice(this.selectedUsersFromFriendsList.indexOf(selectedUser), 1);\r\n        }\r\n    }\r\n\r\n    onUserClick(clickedUser: any): void//(clickedUser: User): void\r\n    {\r\n        this.onParticipantClicked.emit(clickedUser);\r\n    }\r\n\r\n    onFriendsListActionCancelClicked(): void\r\n    {\r\n        this.onOptionPromptCanceled.emit();\r\n        this.cleanUpUserSelection();\r\n    }\r\n\r\n    onFriendsListActionConfirmClicked() : void\r\n    {\r\n        this.onOptionPromptConfirmed.emit(this.selectedUsersFromFriendsList);\r\n        this.cleanUpUserSelection();\r\n    }\r\n}\r\n","<div *ngIf=\"shouldDisplay\" id=\"ng-chat-people\" [ngClass]=\"{'primary-outline-color': true, 'primary-background': true, 'ng-chat-people-collapsed': isCollapsed}\">\r\n\t<a href=\"javascript:void(0);\" class=\"ng-chat-title secondary-background shadowed\" (click)=\"onChatTitleClicked()\">\r\n\t\t<span>\r\n\t\t\t{{localization.title}}\r\n\t\t</span>\r\n\t</a>\r\n\t<div *ngIf=\"currentActiveOption\" class=\"ng-chat-people-actions\" (click)=\"onFriendsListActionCancelClicked()\">\r\n\t\t<a href=\"javascript:void(0);\" class=\"ng-chat-people-action\">\r\n\t\t\t<i class=\"remove-icon\"></i>\r\n\t\t</a>\r\n\t\t<a href=\"javascript:void(0);\" class=\"ng-chat-people-action\" (click)=\"onFriendsListActionConfirmClicked()\">\r\n\t\t\t<i class=\"check-icon\"></i>\r\n\t\t</a>\r\n\t</div>\r\n\t<input *ngIf=\"searchEnabled\" id=\"ng-chat-search_friend\" class=\"friends-search-bar\" type=\"search\" [placeholder]=\"localization.searchPlaceholder\" [(ngModel)]=\"searchInput\" />\r\n\t<ul id=\"ng-chat-users\" *ngIf=\"!isCollapsed\" [ngClass]=\"{'offset-search': searchEnabled}\">\r\n\t\t<li *ngFor=\"let user of filteredParticipants\">\r\n\t\t\t<input \r\n\t\t\t\t*ngIf=\"currentActiveOption && currentActiveOption.validateContext(user)\" \r\n\t\t\t\ttype=\"checkbox\" \r\n\t\t\t\tclass=\"ng-chat-users-checkbox\" \r\n\t\t\t\t(change)=\"onFriendsListCheckboxChange(user, $event)\" \r\n\t\t\t\t[checked]=\"isUserSelectedFromFriendsList(user)\"/>\r\n\t\t\t<div [ngClass]=\"{'ng-chat-friends-list-selectable-offset': currentActiveOption, 'ng-chat-friends-list-container': true}\" (click)=\"onUserClick(user)\">\r\n\t\t\t\t<div *ngIf=\"!user.avatar\" class=\"icon-wrapper\">\r\n\t\t\t\t\t<i class=\"user-icon\"></i>\r\n\t\t\t\t</div>\r\n\t\t\t\t<img *ngIf=\"user.avatar\" alt=\"\" class=\"avatar\" height=\"30\" width=\"30\"  [src]=\"user.avatar | sanitize\"/>\r\n\t\t\t\t<strong title=\"{{user.displayName}}\">{{user.displayName}}</strong>\r\n\t\t\t\t<span [ngClass]=\"{'ng-chat-participant-status': true, 'online': user.status == ChatParticipantStatus.Online, 'busy': user.status == ChatParticipantStatus.Busy, 'away': user.status == ChatParticipantStatus.Away, 'offline': user.status == ChatParticipantStatus.Offline}\" title=\"{{chatParticipantStatusDescriptor(user.status, localization)}}\"></span>\r\n\t\t\t\t<span *ngIf=\"unreadMessagesTotalByParticipant(user).length > 0\" class=\"ng-chat-unread-messages-count unread-messages-counter-container primary-text\">{{unreadMessagesTotalByParticipant(user)}}</span>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t</ul>\r\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}